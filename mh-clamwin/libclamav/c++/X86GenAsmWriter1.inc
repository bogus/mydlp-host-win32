//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void X86IntelInstPrinter::printInstruction(const MachineInstr *MI) {
  static const unsigned OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// DBG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1U,	// DBG_VALUE
    11U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    134217744U,	// ADC16i16
    272629786U,	// ADC16mi
    272629786U,	// ADC16mi8
    272629786U,	// ADC16mr
    138543130U,	// ADC16ri
    138543130U,	// ADC16ri8
    138674202U,	// ADC16rm
    138543130U,	// ADC16rr
    138543130U,	// ADC16rr_REV
    134217759U,	// ADC32i32
    406847514U,	// ADC32mi
    406847514U,	// ADC32mi8
    406847514U,	// ADC32mr
    138543130U,	// ADC32ri
    138543130U,	// ADC32ri8
    138805274U,	// ADC32rm
    138543130U,	// ADC32rr
    138543130U,	// ADC32rr_REV
    134217770U,	// ADC64i32
    541065242U,	// ADC64mi32
    541065242U,	// ADC64mi8
    541065242U,	// ADC64mr
    138543130U,	// ADC64ri32
    138543130U,	// ADC64ri8
    138936346U,	// ADC64rm
    138543130U,	// ADC64rr
    138543130U,	// ADC64rr_REV
    134217781U,	// ADC8i8
    675282970U,	// ADC8mi
    675282970U,	// ADC8mr
    138543130U,	// ADC8ri
    139067418U,	// ADC8rm
    138543130U,	// ADC8rr
    138543130U,	// ADC8rr_REV
    134217791U,	// ADD16i16
    272629833U,	// ADD16mi
    272629833U,	// ADD16mi8
    272629833U,	// ADD16mr
    138543177U,	// ADD16mrmrr
    138543177U,	// ADD16ri
    138543177U,	// ADD16ri8
    138674249U,	// ADD16rm
    138543177U,	// ADD16rr
    134217806U,	// ADD32i32
    406847561U,	// ADD32mi
    406847561U,	// ADD32mi8
    406847561U,	// ADD32mr
    138543177U,	// ADD32mrmrr
    138543177U,	// ADD32ri
    138543177U,	// ADD32ri8
    138805321U,	// ADD32rm
    138543177U,	// ADD32rr
    134217817U,	// ADD64i32
    541065289U,	// ADD64mi32
    541065289U,	// ADD64mi8
    541065289U,	// ADD64mr
    138543177U,	// ADD64mrmrr
    138543177U,	// ADD64ri32
    138543177U,	// ADD64ri8
    138936393U,	// ADD64rm
    138543177U,	// ADD64rr
    134217828U,	// ADD8i8
    675283017U,	// ADD8mi
    675283017U,	// ADD8mr
    138543177U,	// ADD8mrmrr
    138543177U,	// ADD8ri
    139067465U,	// ADD8rm
    138543177U,	// ADD8rr
    139198574U,	// ADDPDrm
    138543214U,	// ADDPDrr
    139198581U,	// ADDPSrm
    138543221U,	// ADDPSrr
    139329660U,	// ADDSDrm
    139329660U,	// ADDSDrm_Int
    138543228U,	// ADDSDrr
    138543228U,	// ADDSDrr_Int
    139460739U,	// ADDSSrm
    139460739U,	// ADDSSrm_Int
    138543235U,	// ADDSSrr
    138543235U,	// ADDSSrr_Int
    139198602U,	// ADDSUBPDrm
    138543242U,	// ADDSUBPDrr
    139198612U,	// ADDSUBPSrm
    138543252U,	// ADDSUBPSrr
    805306526U,	// ADD_F32m
    939524254U,	// ADD_F64m
    268435620U,	// ADD_FI16m
    402653348U,	// ADD_FI32m
    134217899U,	// ADD_FPrST0
    134217886U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    142606494U,	// ADD_FrST0
    178U,	// ADJCALLSTACKDOWN32
    178U,	// ADJCALLSTACKDOWN64
    196U,	// ADJCALLSTACKUP32
    196U,	// ADJCALLSTACKUP64
    134217940U,	// AND16i16
    272629982U,	// AND16mi
    272629982U,	// AND16mi8
    272629982U,	// AND16mr
    138543326U,	// AND16ri
    138543326U,	// AND16ri8
    138674398U,	// AND16rm
    138543326U,	// AND16rr
    138543326U,	// AND16rr_REV
    134217955U,	// AND32i32
    406847710U,	// AND32mi
    406847710U,	// AND32mi8
    406847710U,	// AND32mr
    138543326U,	// AND32ri
    138543326U,	// AND32ri8
    138805470U,	// AND32rm
    138543326U,	// AND32rr
    138543326U,	// AND32rr_REV
    134217966U,	// AND64i32
    541065438U,	// AND64mi32
    541065438U,	// AND64mi8
    541065438U,	// AND64mr
    138543326U,	// AND64ri32
    138543326U,	// AND64ri8
    138936542U,	// AND64rm
    138543326U,	// AND64rr
    138543326U,	// AND64rr_REV
    134217977U,	// AND8i8
    675283166U,	// AND8mi
    675283166U,	// AND8mr
    138543326U,	// AND8ri
    139067614U,	// AND8rm
    138543326U,	// AND8rr
    138543326U,	// AND8rr_REV
    139198723U,	// ANDNPDrm
    138543363U,	// ANDNPDrr
    139198731U,	// ANDNPSrm
    138543371U,	// ANDNPSrr
    139198739U,	// ANDPDrm
    138543379U,	// ANDPDrr
    139198746U,	// ANDPSrm
    138543386U,	// ANDPSrr
    289U,	// ATOMADD6432
    310U,	// ATOMAND16
    329U,	// ATOMAND32
    348U,	// ATOMAND64
    367U,	// ATOMAND6432
    388U,	// ATOMAND8
    406U,	// ATOMMAX16
    425U,	// ATOMMAX32
    444U,	// ATOMMAX64
    463U,	// ATOMMIN16
    482U,	// ATOMMIN32
    501U,	// ATOMMIN64
    520U,	// ATOMNAND16
    540U,	// ATOMNAND32
    560U,	// ATOMNAND64
    580U,	// ATOMNAND6432
    602U,	// ATOMNAND8
    621U,	// ATOMOR16
    639U,	// ATOMOR32
    657U,	// ATOMOR64
    675U,	// ATOMOR6432
    695U,	// ATOMOR8
    712U,	// ATOMSUB6432
    733U,	// ATOMSWAP6432
    755U,	// ATOMUMAX16
    775U,	// ATOMUMAX32
    795U,	// ATOMUMAX64
    815U,	// ATOMUMIN16
    835U,	// ATOMUMIN32
    855U,	// ATOMUMIN64
    875U,	// ATOMXOR16
    894U,	// ATOMXOR32
    913U,	// ATOMXOR64
    932U,	// ATOMXOR6432
    953U,	// ATOMXOR8
    139609035U,	// BLENDPDrmi
    138560459U,	// BLENDPDrri
    139609044U,	// BLENDPSrmi
    138560468U,	// BLENDPSrri
    139625437U,	// BLENDVPDrm0
    138576861U,	// BLENDVPDrr0
    139625447U,	// BLENDVPSrm0
    138576871U,	// BLENDVPSrr0
    139723761U,	// BSF16rm
    139854833U,	// BSF16rr
    139985905U,	// BSF32rm
    139854833U,	// BSF32rr
    140116977U,	// BSF64rm
    139854833U,	// BSF64rr
    139723766U,	// BSR16rm
    139854838U,	// BSR16rr
    139985910U,	// BSR32rm
    139854838U,	// BSR32rr
    140116982U,	// BSR64rm
    139854838U,	// BSR64rr
    134218747U,	// BSWAP32r
    134218747U,	// BSWAP64r
    272630786U,	// BT16mi8
    272630786U,	// BT16mr
    139854850U,	// BT16ri8
    139854850U,	// BT16rr
    406848514U,	// BT32mi8
    406848514U,	// BT32mr
    139854850U,	// BT32ri8
    139854850U,	// BT32rr
    541066242U,	// BT64mi8
    541066242U,	// BT64mr
    139854850U,	// BT64ri8
    139854850U,	// BT64rr
    272630790U,	// BTC16mi8
    272630790U,	// BTC16mr
    139854854U,	// BTC16ri8
    139854854U,	// BTC16rr
    406848518U,	// BTC32mi8
    406848518U,	// BTC32mr
    139854854U,	// BTC32ri8
    139854854U,	// BTC32rr
    541066246U,	// BTC64mi8
    541066246U,	// BTC64mr
    139854854U,	// BTC64ri8
    139854854U,	// BTC64rr
    272630795U,	// BTR16mi8
    272630795U,	// BTR16mr
    139854859U,	// BTR16ri8
    139854859U,	// BTR16rr
    406848523U,	// BTR32mi8
    406848523U,	// BTR32mr
    139854859U,	// BTR32ri8
    139854859U,	// BTR32rr
    541066251U,	// BTR64mi8
    541066251U,	// BTR64mr
    139854859U,	// BTR64ri8
    139854859U,	// BTR64rr
    272630800U,	// BTS16mi8
    272630800U,	// BTS16mr
    139854864U,	// BTS16ri8
    139854864U,	// BTS16rr
    406848528U,	// BTS32mi8
    406848528U,	// BTS32mr
    139854864U,	// BTS32ri8
    139854864U,	// BTS32rr
    541066256U,	// BTS64mi8
    541066256U,	// BTS64mr
    139854864U,	// BTS64ri8
    139854864U,	// BTS64rr
    402654229U,	// CALL32m
    134218773U,	// CALL32r
    536871957U,	// CALL64m
    1073742869U,	// CALL64pcrel32
    134218773U,	// CALL64r
    1073742869U,	// CALLpcrel32
    1051U,	// CBW
    1055U,	// CDQ
    1059U,	// CDQE
    1064U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    1069U,	// CLC
    1073U,	// CLD
    671089717U,	// CLFLUSH
    1086U,	// CLI
    1090U,	// CLTS
    1095U,	// CMC
    138675275U,	// CMOVA16rm
    138544203U,	// CMOVA16rr
    138806347U,	// CMOVA32rm
    138544203U,	// CMOVA32rr
    138937419U,	// CMOVA64rm
    138544203U,	// CMOVA64rr
    138675282U,	// CMOVAE16rm
    138544210U,	// CMOVAE16rr
    138806354U,	// CMOVAE32rm
    138544210U,	// CMOVAE32rr
    138937426U,	// CMOVAE64rm
    138544210U,	// CMOVAE64rr
    138675290U,	// CMOVB16rm
    138544218U,	// CMOVB16rr
    138806362U,	// CMOVB32rm
    138544218U,	// CMOVB32rr
    138937434U,	// CMOVB64rm
    138544218U,	// CMOVB64rr
    138675297U,	// CMOVBE16rm
    138544225U,	// CMOVBE16rr
    138806369U,	// CMOVBE32rm
    138544225U,	// CMOVBE32rr
    138937441U,	// CMOVBE64rm
    138544225U,	// CMOVBE64rr
    134218857U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    134218874U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    138675338U,	// CMOVE16rm
    138544266U,	// CMOVE16rr
    138806410U,	// CMOVE32rm
    138544266U,	// CMOVE32rr
    138937482U,	// CMOVE64rm
    138544266U,	// CMOVE64rr
    134218897U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    138675361U,	// CMOVG16rm
    138544289U,	// CMOVG16rr
    138806433U,	// CMOVG32rm
    138544289U,	// CMOVG32rr
    138937505U,	// CMOVG64rm
    138544289U,	// CMOVG64rr
    138675368U,	// CMOVGE16rm
    138544296U,	// CMOVGE16rr
    138806440U,	// CMOVGE32rm
    138544296U,	// CMOVGE32rr
    138937512U,	// CMOVGE64rm
    138544296U,	// CMOVGE64rr
    138675376U,	// CMOVL16rm
    138544304U,	// CMOVL16rr
    138806448U,	// CMOVL32rm
    138544304U,	// CMOVL32rr
    138937520U,	// CMOVL64rm
    138544304U,	// CMOVL64rr
    138675383U,	// CMOVLE16rm
    138544311U,	// CMOVLE16rr
    138806455U,	// CMOVLE32rm
    138544311U,	// CMOVLE32rr
    138937527U,	// CMOVLE64rm
    138544311U,	// CMOVLE64rr
    134218943U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    134218961U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    138675426U,	// CMOVNE16rm
    138544354U,	// CMOVNE16rr
    138806498U,	// CMOVNE32rm
    138544354U,	// CMOVNE32rr
    138937570U,	// CMOVNE64rm
    138544354U,	// CMOVNE64rr
    134218986U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    138675451U,	// CMOVNO16rm
    138544379U,	// CMOVNO16rr
    138806523U,	// CMOVNO32rm
    138544379U,	// CMOVNO32rr
    138937595U,	// CMOVNO64rm
    138544379U,	// CMOVNO64rr
    138675459U,	// CMOVNP16rm
    138544387U,	// CMOVNP16rr
    138806531U,	// CMOVNP32rm
    138544387U,	// CMOVNP32rr
    138937603U,	// CMOVNP64rm
    138544387U,	// CMOVNP64rr
    134219019U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    138675484U,	// CMOVNS16rm
    138544412U,	// CMOVNS16rr
    138806556U,	// CMOVNS32rm
    138544412U,	// CMOVNS32rr
    138937628U,	// CMOVNS64rm
    138544412U,	// CMOVNS64rr
    138675492U,	// CMOVO16rm
    138544420U,	// CMOVO16rr
    138806564U,	// CMOVO32rm
    138544420U,	// CMOVO32rr
    138937636U,	// CMOVO64rm
    138544420U,	// CMOVO64rr
    138675499U,	// CMOVP16rm
    138544427U,	// CMOVP16rr
    138806571U,	// CMOVP32rm
    138544427U,	// CMOVP32rr
    138937643U,	// CMOVP64rm
    138544427U,	// CMOVP64rr
    134219058U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    138675523U,	// CMOVS16rm
    138544451U,	// CMOVS16rr
    138806595U,	// CMOVS32rm
    138544451U,	// CMOVS32rr
    138937667U,	// CMOVS64rm
    138544451U,	// CMOVS64rr
    1354U,	// CMOV_FR32
    1373U,	// CMOV_FR64
    1392U,	// CMOV_GR8
    1410U,	// CMOV_V1I64
    1430U,	// CMOV_V2F64
    1450U,	// CMOV_V2I64
    1470U,	// CMOV_V4F32
    134219218U,	// CMP16i16
    272631260U,	// CMP16mi
    272631260U,	// CMP16mi8
    272631260U,	// CMP16mr
    139855324U,	// CMP16mrmrr
    139855324U,	// CMP16ri
    139855324U,	// CMP16ri8
    139724252U,	// CMP16rm
    139855324U,	// CMP16rr
    134219233U,	// CMP32i32
    406848988U,	// CMP32mi
    406848988U,	// CMP32mi8
    406848988U,	// CMP32mr
    139855324U,	// CMP32mrmrr
    139855324U,	// CMP32ri
    139855324U,	// CMP32ri8
    139986396U,	// CMP32rm
    139855324U,	// CMP32rr
    134219244U,	// CMP64i32
    541066716U,	// CMP64mi32
    541066716U,	// CMP64mi8
    541066716U,	// CMP64mr
    139855324U,	// CMP64mrmrr
    139855324U,	// CMP64ri32
    139855324U,	// CMP64ri8
    140117468U,	// CMP64rm
    139855324U,	// CMP64rr
    134219255U,	// CMP8i8
    675284444U,	// CMP8mi
    675284444U,	// CMP8mr
    139855324U,	// CMP8mrmrr
    139855324U,	// CMP8ri
    140248540U,	// CMP8rm
    139855324U,	// CMP8rr
    1221330433U,	// CMPPDrmi
    1354892801U,	// CMPPDrri
    1225524737U,	// CMPPSrmi
    1359087105U,	// CMPPSrri
    1541U,	// CMPS16
    1541U,	// CMPS32
    1541U,	// CMPS64
    1541U,	// CMPS8
    1229850113U,	// CMPSDrm
    1363281409U,	// CMPSDrr
    1234175489U,	// CMPSSrm
    1367475713U,	// CMPSSrr
    1476396554U,	// CMPXCHG16B
    272631318U,	// CMPXCHG16rm
    139855382U,	// CMPXCHG16rr
    406849046U,	// CMPXCHG32rm
    139855382U,	// CMPXCHG32rr
    541066774U,	// CMPXCHG64rm
    139855382U,	// CMPXCHG64rr
    536872479U,	// CMPXCHG8B
    675284502U,	// CMPXCHG8rm
    139855382U,	// CMPXCHG8rr
    140379690U,	// COMISDrm
    139855402U,	// COMISDrr
    140379698U,	// COMISSrm
    139855410U,	// COMISSrr
    134219322U,	// COMP_FST0r
    134219329U,	// COM_FIPr
    134219345U,	// COM_FIr
    134219360U,	// COM_FST0r
    1638U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    1643U,	// CPUID
    1649U,	// CQO
    1639974517U,	// CRC32m16
    1644168821U,	// CRC32m32
    1648363125U,	// CRC32m8
    1652557429U,	// CRC32r16
    1652557429U,	// CRC32r32
    1652557429U,	// CRC32r8
    1656751733U,	// CRC64m64
    1652557429U,	// CRC64r64
    1661U,	// CS_PREFIX
    140379776U,	// CVTDQ2PDrm
    139855488U,	// CVTDQ2PDrr
    140379786U,	// CVTDQ2PSrm
    139855498U,	// CVTDQ2PSrr
    140379796U,	// CVTPD2DQrm
    139855508U,	// CVTPD2DQrr
    140379806U,	// CVTPD2PSrm
    139855518U,	// CVTPD2PSrr
    140379816U,	// CVTPS2DQrm
    139855528U,	// CVTPS2DQrr
    140510898U,	// CVTPS2PDrm
    139855538U,	// CVTPS2PDrr
    140510908U,	// CVTSD2SI64rm
    139855548U,	// CVTSD2SI64rr
    140510918U,	// CVTSD2SSrm
    139855558U,	// CVTSD2SSrr
    140117712U,	// CVTSI2SD64rm
    139855568U,	// CVTSI2SD64rr
    139986640U,	// CVTSI2SDrm
    139855568U,	// CVTSI2SDrr
    140117722U,	// CVTSI2SS64rm
    139855578U,	// CVTSI2SS64rr
    139986650U,	// CVTSI2SSrm
    139855578U,	// CVTSI2SSrr
    140642020U,	// CVTSS2SDrm
    139855588U,	// CVTSS2SDrr
    140642030U,	// CVTSS2SI64rm
    139855598U,	// CVTSS2SI64rr
    140642030U,	// CVTSS2SIrm
    139855598U,	// CVTSS2SIrr
    140379896U,	// CVTTPS2DQrm
    139855608U,	// CVTTPS2DQrr
    140510979U,	// CVTTSD2SI64rm
    139855619U,	// CVTTSD2SI64rr
    140510979U,	// CVTTSD2SIrm
    139855619U,	// CVTTSD2SIrr
    140642062U,	// CVTTSS2SI64rm
    139855630U,	// CVTTSS2SI64rr
    140642062U,	// CVTTSS2SIrm
    139855630U,	// CVTTSS2SIrr
    1817U,	// CWD
    1821U,	// CWDE
    268437282U,	// DEC16m
    134219554U,	// DEC16r
    402655010U,	// DEC32m
    134219554U,	// DEC32r
    268437282U,	// DEC64_16m
    134219554U,	// DEC64_16r
    402655010U,	// DEC64_32m
    134219554U,	// DEC64_32r
    536872738U,	// DEC64m
    134219554U,	// DEC64r
    671090466U,	// DEC8m
    134219554U,	// DEC8r
    268437287U,	// DIV16m
    134219559U,	// DIV16r
    402655015U,	// DIV32m
    134219559U,	// DIV32r
    536872743U,	// DIV64m
    134219559U,	// DIV64r
    671090471U,	// DIV8m
    134219559U,	// DIV8r
    139200300U,	// DIVPDrm
    138544940U,	// DIVPDrr
    139200307U,	// DIVPSrm
    138544947U,	// DIVPSrr
    805308218U,	// DIVR_F32m
    939525946U,	// DIVR_F64m
    268437313U,	// DIVR_FI16m
    402655041U,	// DIVR_FI32m
    134219593U,	// DIVR_FPrST0
    134219578U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    142608186U,	// DIVR_FrST0
    139331409U,	// DIVSDrm
    139331409U,	// DIVSDrm_Int
    138544977U,	// DIVSDrr
    138544977U,	// DIVSDrr_Int
    139462488U,	// DIVSSrm
    139462488U,	// DIVSSrm_Int
    138544984U,	// DIVSSrr
    138544984U,	// DIVSSrr_Int
    805308255U,	// DIV_F32m
    939525983U,	// DIV_F64m
    268437349U,	// DIV_FI16m
    402655077U,	// DIV_FI32m
    134219628U,	// DIV_FPrST0
    134219615U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    142608223U,	// DIV_FrST0
    139609971U,	// DPPDrmi
    138561395U,	// DPPDrri
    139609977U,	// DPPSrmi
    138561401U,	// DPPSrri
    1919U,	// DS_PREFIX
    134219650U,	// EH_RETURN
    134219650U,	// EH_RETURN64
    139855769U,	// ENTER
    1952U,	// ES_PREFIX
    809519011U,	// EXTRACTPSmr
    139872163U,	// EXTRACTPSrr
    1966U,	// F2XM1
    139855796U,	// FARCALL16i
    1744832436U,	// FARCALL16m
    139855796U,	// FARCALL32i
    1744832436U,	// FARCALL32m
    1744832436U,	// FARCALL64
    139855803U,	// FARJMP16i
    1744832443U,	// FARJMP16m
    139855803U,	// FARJMP32i
    1744832443U,	// FARJMP32m
    1744832443U,	// FARJMP64
    805308353U,	// FBLDm
    805308359U,	// FBSTPm
    805308000U,	// FCOM32m
    939525728U,	// FCOM64m
    805307962U,	// FCOMP32m
    939525690U,	// FCOMP64m
    1998U,	// FCOMPP
    2005U,	// FDECSTP
    134219741U,	// FFREE
    268437476U,	// FICOM16m
    402655204U,	// FICOM32m
    268437483U,	// FICOMP16m
    402655211U,	// FICOMP32m
    2035U,	// FINCSTP
    268437499U,	// FLDCW16m
    805308418U,	// FLDENVm
    2058U,	// FLDL2E
    2065U,	// FLDL2T
    2072U,	// FLDLG2
    2079U,	// FLDLN2
    2086U,	// FLDPI
    2092U,	// FNCLEX
    2099U,	// FNINIT
    2106U,	// FNOP
    268437567U,	// FNSTCW16m
    2119U,	// FNSTSW8r
    805308498U,	// FNSTSWm
    2138U,	// FP32_TO_INT16_IN_MEM
    2169U,	// FP32_TO_INT32_IN_MEM
    2200U,	// FP32_TO_INT64_IN_MEM
    2231U,	// FP64_TO_INT16_IN_MEM
    2262U,	// FP64_TO_INT32_IN_MEM
    2293U,	// FP64_TO_INT64_IN_MEM
    2324U,	// FP80_TO_INT16_IN_MEM
    2355U,	// FP80_TO_INT32_IN_MEM
    2386U,	// FP80_TO_INT64_IN_MEM
    2417U,	// FPATAN
    2424U,	// FPREM
    2430U,	// FPREM1
    2437U,	// FPTAN
    2443U,	// FP_REG_KILL
    2457U,	// FRNDINT
    805308833U,	// FRSTORm
    805308841U,	// FSAVEm
    2481U,	// FSCALE
    2488U,	// FSINCOS
    805308864U,	// FSTENVm
    1879050697U,	// FS_MOV32rm
    2515U,	// FS_PREFIX
    2518U,	// FXAM
    1744832987U,	// FXRSTOR
    1744832996U,	// FXSAVE
    2540U,	// FXTRACT
    2548U,	// FYL2X
    2554U,	// FYL2XP1
    0U,	// FpGET_ST0_32
    0U,	// FpGET_ST0_64
    0U,	// FpGET_ST0_80
    0U,	// FpGET_ST1_32
    0U,	// FpGET_ST1_64
    0U,	// FpGET_ST1_80
    0U,	// FpSET_ST0_32
    0U,	// FpSET_ST0_64
    0U,	// FpSET_ST0_80
    0U,	// FpSET_ST1_32
    0U,	// FpSET_ST1_64
    0U,	// FpSET_ST1_80
    139198723U,	// FsANDNPDrm
    138543363U,	// FsANDNPDrr
    139198731U,	// FsANDNPSrm
    138543371U,	// FsANDNPSrr
    139198739U,	// FsANDPDrm
    138543379U,	// FsANDPDrr
    139198746U,	// FsANDPSrm
    138543386U,	// FsANDPSrr
    0U,	// FsFLD0SD
    0U,	// FsFLD0SS
    140380674U,	// FsMOVAPDrm
    139856386U,	// FsMOVAPDrr
    140380682U,	// FsMOVAPSrm
    139856394U,	// FsMOVAPSrr
    139201042U,	// FsORPDrm
    138545682U,	// FsORPDrr
    139201048U,	// FsORPSrm
    138545688U,	// FsORPSrr
    139201054U,	// FsXORPDrm
    138545694U,	// FsXORPDrr
    139201061U,	// FsXORPSrm
    138545701U,	// FsXORPSrr
    1879050796U,	// GS_MOV32rm
    2614U,	// GS_PREFIX
    139201081U,	// HADDPDrm
    138545721U,	// HADDPDrr
    139201089U,	// HADDPSrm
    138545729U,	// HADDPSrr
    2633U,	// HLT
    139201101U,	// HSUBPDrm
    138545741U,	// HSUBPDrr
    139201109U,	// HSUBPSrm
    138545749U,	// HSUBPSrr
    268438109U,	// IDIV16m
    134220381U,	// IDIV16r
    402655837U,	// IDIV32m
    134220381U,	// IDIV32r
    536873565U,	// IDIV64m
    134220381U,	// IDIV64r
    671091293U,	// IDIV8m
    134220381U,	// IDIV8r
    268438115U,	// ILD_F16m
    402655843U,	// ILD_F32m
    536873571U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    268438121U,	// IMUL16m
    134220393U,	// IMUL16r
    138676841U,	// IMUL16rm
    139741801U,	// IMUL16rmi
    139741801U,	// IMUL16rmi8
    138545769U,	// IMUL16rr
    139872873U,	// IMUL16rri
    139872873U,	// IMUL16rri8
    402655849U,	// IMUL32m
    134220393U,	// IMUL32r
    138807913U,	// IMUL32rm
    140003945U,	// IMUL32rmi
    140003945U,	// IMUL32rmi8
    138545769U,	// IMUL32rr
    139872873U,	// IMUL32rri
    139872873U,	// IMUL32rri8
    536873577U,	// IMUL64m
    134220393U,	// IMUL64r
    138938985U,	// IMUL64rm
    140135017U,	// IMUL64rmi32
    140135017U,	// IMUL64rmi8
    138545769U,	// IMUL64rr
    139872873U,	// IMUL64rri32
    139872873U,	// IMUL64rri8
    671091305U,	// IMUL8m
    134220393U,	// IMUL8r
    2671U,	// IN16
    134220403U,	// IN16ri
    2684U,	// IN16rr
    2671U,	// IN32
    134220424U,	// IN32ri
    2706U,	// IN32rr
    2671U,	// IN8
    134220447U,	// IN8ri
    2728U,	// IN8rr
    268438196U,	// INC16m
    134220468U,	// INC16r
    402655924U,	// INC32m
    134220468U,	// INC32r
    268438196U,	// INC64_16m
    134220468U,	// INC64_16r
    402655924U,	// INC64_32m
    134220468U,	// INC64_32r
    536873652U,	// INC64m
    134220468U,	// INC64r
    671091380U,	// INC8m
    134220468U,	// INC8r
    139479737U,	// INSERTPSrm
    138562233U,	// INSERTPSrr
    134220483U,	// INT
    2760U,	// INT3
    2766U,	// INVD
    2771U,	// INVEPT
    671091418U,	// INVLPG
    2786U,	// INVVPID
    2794U,	// IRET16
    2794U,	// IRET32
    2794U,	// IRET64
    268438255U,	// ISTT_FP16m
    402655983U,	// ISTT_FP32m
    536873711U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    268438263U,	// IST_F16m
    402655991U,	// IST_F32m
    268438269U,	// IST_FP16m
    402655997U,	// IST_FP32m
    536873725U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1229850113U,	// Int_CMPSDrm
    1363281409U,	// Int_CMPSDrr
    1234175489U,	// Int_CMPSSrm
    1367475713U,	// Int_CMPSSrr
    140379690U,	// Int_COMISDrm
    139855402U,	// Int_COMISDrr
    140379698U,	// Int_COMISSrm
    139855410U,	// Int_COMISSrr
    140117632U,	// Int_CVTDQ2PDrm
    139855488U,	// Int_CVTDQ2PDrr
    140773002U,	// Int_CVTDQ2PSrm
    139855498U,	// Int_CVTDQ2PSrr
    140379796U,	// Int_CVTPD2DQrm
    139855508U,	// Int_CVTPD2DQrr
    140380932U,	// Int_CVTPD2PIrm
    139856644U,	// Int_CVTPD2PIrr
    140379806U,	// Int_CVTPD2PSrm
    139855518U,	// Int_CVTPD2PSrr
    140118798U,	// Int_CVTPI2PDrm
    139856654U,	// Int_CVTPI2PDrr
    138939160U,	// Int_CVTPI2PSrm
    138545944U,	// Int_CVTPI2PSrr
    140379816U,	// Int_CVTPS2DQrm
    139855528U,	// Int_CVTPS2DQrr
    140510898U,	// Int_CVTPS2PDrm
    139855538U,	// Int_CVTPS2PDrr
    140512034U,	// Int_CVTPS2PIrm
    139856674U,	// Int_CVTPS2PIrr
    140379836U,	// Int_CVTSD2SI64rm
    139855548U,	// Int_CVTSD2SI64rr
    140379836U,	// Int_CVTSD2SIrm
    139855548U,	// Int_CVTSD2SIrr
    139331270U,	// Int_CVTSD2SSrm
    138544838U,	// Int_CVTSD2SSrr
    138938064U,	// Int_CVTSI2SD64rm
    138544848U,	// Int_CVTSI2SD64rr
    138806992U,	// Int_CVTSI2SDrm
    138544848U,	// Int_CVTSI2SDrr
    138938074U,	// Int_CVTSI2SS64rm
    138544858U,	// Int_CVTSI2SS64rr
    138807002U,	// Int_CVTSI2SSrm
    138544858U,	// Int_CVTSI2SSrr
    139462372U,	// Int_CVTSS2SDrm
    138544868U,	// Int_CVTSS2SDrr
    140642030U,	// Int_CVTSS2SI64rm
    139855598U,	// Int_CVTSS2SI64rr
    140642030U,	// Int_CVTSS2SIrm
    139855598U,	// Int_CVTSS2SIrr
    140380972U,	// Int_CVTTPD2DQrm
    139856684U,	// Int_CVTTPD2DQrr
    140380983U,	// Int_CVTTPD2PIrm
    139856695U,	// Int_CVTTPD2PIrr
    140379896U,	// Int_CVTTPS2DQrm
    139855608U,	// Int_CVTTPS2DQrr
    140512066U,	// Int_CVTTPS2PIrm
    139856706U,	// Int_CVTTPS2PIrr
    140379907U,	// Int_CVTTSD2SI64rm
    139855619U,	// Int_CVTTSD2SI64rr
    140379907U,	// Int_CVTTSD2SIrm
    139855619U,	// Int_CVTTSD2SIrr
    140642062U,	// Int_CVTTSS2SI64rm
    139855630U,	// Int_CVTTSS2SI64rr
    140642062U,	// Int_CVTTSS2SIrm
    139855630U,	// Int_CVTTSS2SIrr
    140381005U,	// Int_UCOMISDrm
    139856717U,	// Int_UCOMISDrr
    140381014U,	// Int_UCOMISSrm
    139856726U,	// Int_UCOMISSrr
    1073744735U,	// JAE_1
    1073744735U,	// JAE_4
    1073744740U,	// JA_1
    1073744740U,	// JA_4
    1073744744U,	// JBE_1
    1073744744U,	// JBE_4
    1073744749U,	// JB_1
    1073744749U,	// JB_4
    1073744753U,	// JCXZ8
    1073744759U,	// JE_1
    1073744759U,	// JE_4
    1073744763U,	// JGE_1
    1073744763U,	// JGE_4
    1073744768U,	// JG_1
    1073744768U,	// JG_4
    1073744772U,	// JLE_1
    1073744772U,	// JLE_4
    1073744777U,	// JL_1
    1073744777U,	// JL_4
    402656141U,	// JMP32m
    134220685U,	// JMP32r
    536873869U,	// JMP64m
    1073744781U,	// JMP64pcrel32
    134220685U,	// JMP64r
    1073744781U,	// JMP_1
    1073744781U,	// JMP_4
    1073744786U,	// JNE_1
    1073744786U,	// JNE_4
    1073744791U,	// JNO_1
    1073744791U,	// JNO_4
    1073744796U,	// JNP_1
    1073744796U,	// JNP_4
    1073744801U,	// JNS_1
    1073744801U,	// JNS_4
    1073744806U,	// JO_1
    1073744806U,	// JO_4
    1073744810U,	// JP_1
    1073744810U,	// JP_4
    1073744814U,	// JS_1
    1073744814U,	// JS_4
    2994U,	// LAHF
    139725751U,	// LAR16rm
    139856823U,	// LAR16rr
    139725751U,	// LAR32rm
    139856823U,	// LAR32rr
    139725751U,	// LAR64rm
    139856823U,	// LAR64rr
    272632764U,	// LCMPXCHG16
    406850492U,	// LCMPXCHG32
    2013268939U,	// LCMPXCHG64
    675285948U,	// LCMPXCHG8
    536873947U,	// LCMPXCHG8B
    140774380U,	// LDDQUrm
    402656243U,	// LDMXCSR
    140905468U,	// LDS16rm
    140905468U,	// LDS32rm
    3073U,	// LD_F0
    3078U,	// LD_F1
    805309451U,	// LD_F32m
    939527179U,	// LD_F64m
    2147486731U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    134220811U,	// LD_Frr
    141036560U,	// LEA16r
    141036560U,	// LEA32r
    141167632U,	// LEA64_32r
    141298704U,	// LEA64r
    3093U,	// LEAVE
    3093U,	// LEAVE64
    140905499U,	// LES16rm
    140905499U,	// LES32rm
    3104U,	// LFENCE
    140905511U,	// LFS16rm
    140905511U,	// LFS32rm
    140905511U,	// LFS64rm
    1744833580U,	// LGDTm
    140905522U,	// LGS16rm
    140905522U,	// LGS32rm
    140905522U,	// LGS64rm
    1744833591U,	// LIDTm
    268438589U,	// LLDT16m
    134220861U,	// LLDT16r
    268438595U,	// LMSW16m
    134220867U,	// LMSW16r
    272632905U,	// LOCK_ADD16mi
    272632905U,	// LOCK_ADD16mi8
    272632905U,	// LOCK_ADD16mr
    406850633U,	// LOCK_ADD32mi
    406850633U,	// LOCK_ADD32mi8
    406850633U,	// LOCK_ADD32mr
    541068361U,	// LOCK_ADD64mi32
    541068361U,	// LOCK_ADD64mi8
    541068361U,	// LOCK_ADD64mr
    675286089U,	// LOCK_ADD8mi
    675286089U,	// LOCK_ADD8mr
    268438612U,	// LOCK_DEC16m
    402656340U,	// LOCK_DEC32m
    536874068U,	// LOCK_DEC64m
    671091796U,	// LOCK_DEC8m
    268438623U,	// LOCK_INC16m
    402656351U,	// LOCK_INC32m
    536874079U,	// LOCK_INC64m
    671091807U,	// LOCK_INC8m
    3178U,	// LOCK_PREFIX
    272632943U,	// LOCK_SUB16mi
    272632943U,	// LOCK_SUB16mi8
    272632943U,	// LOCK_SUB16mr
    406850671U,	// LOCK_SUB32mi
    406850671U,	// LOCK_SUB32mi8
    406850671U,	// LOCK_SUB32mr
    541068399U,	// LOCK_SUB64mi32
    541068399U,	// LOCK_SUB64mi8
    541068399U,	// LOCK_SUB64mr
    675286127U,	// LOCK_SUB8mi
    675286127U,	// LOCK_SUB8mr
    3194U,	// LODSB
    3200U,	// LODSD
    3206U,	// LODSQ
    3212U,	// LODSW
    1073745042U,	// LOOP
    1073745048U,	// LOOPE
    1073745055U,	// LOOPNE
    3239U,	// LRET
    134220972U,	// LRETI
    139726002U,	// LSL16rm
    139857074U,	// LSL16rr
    139988146U,	// LSL32rm
    139857074U,	// LSL32rr
    140119218U,	// LSL64rm
    139857074U,	// LSL64rr
    140905655U,	// LSS16rm
    140905655U,	// LSS32rm
    140905655U,	// LSS64rm
    3260U,	// LTRm
    3260U,	// LTRr
    2281704641U,	// LXADD16
    2415922369U,	// LXADD32
    1656753345U,	// LXADD64
    2550140097U,	// LXADD8
    139857101U,	// MASKMOVDQU
    139857101U,	// MASKMOVDQU64
    139201753U,	// MAXPDrm
    139201753U,	// MAXPDrm_Int
    138546393U,	// MAXPDrr
    138546393U,	// MAXPDrr_Int
    139201760U,	// MAXPSrm
    139201760U,	// MAXPSrm_Int
    138546400U,	// MAXPSrr
    138546400U,	// MAXPSrr_Int
    139332839U,	// MAXSDrm
    139332839U,	// MAXSDrm_Int
    138546407U,	// MAXSDrr
    138546407U,	// MAXSDrr_Int
    139463918U,	// MAXSSrm
    139463918U,	// MAXSSrm_Int
    138546414U,	// MAXSSrr
    138546414U,	// MAXSSrr_Int
    3317U,	// MFENCE
    3324U,	// MINGW_ALLOCA
    139201815U,	// MINPDrm
    139201815U,	// MINPDrm_Int
    138546455U,	// MINPDrr
    138546455U,	// MINPDrr_Int
    139201822U,	// MINPSrm
    139201822U,	// MINPSrm_Int
    138546462U,	// MINPSrr
    138546462U,	// MINPSrr_Int
    139332901U,	// MINSDrm
    139332901U,	// MINSDrm_Int
    138546469U,	// MINSDrr
    138546469U,	// MINSDrr_Int
    139463980U,	// MINSSrm
    139463980U,	// MINSSrm_Int
    138546476U,	// MINSSrr
    138546476U,	// MINSSrr_Int
    140380932U,	// MMX_CVTPD2PIrm
    139856644U,	// MMX_CVTPD2PIrr
    140118798U,	// MMX_CVTPI2PDrm
    139856654U,	// MMX_CVTPI2PDrr
    140118808U,	// MMX_CVTPI2PSrm
    139856664U,	// MMX_CVTPI2PSrr
    140512034U,	// MMX_CVTPS2PIrm
    139856674U,	// MMX_CVTPS2PIrr
    140380983U,	// MMX_CVTTPD2PIrm
    139856695U,	// MMX_CVTTPD2PIrr
    140512066U,	// MMX_CVTTPS2PIrm
    139856706U,	// MMX_CVTTPS2PIrr
    3379U,	// MMX_EMMS
    3384U,	// MMX_FEMMS
    139857214U,	// MMX_MASKMOVQ
    139857214U,	// MMX_MASKMOVQ64
    139857224U,	// MMX_MOVD64from64rr
    139857224U,	// MMX_MOVD64grr
    406850888U,	// MMX_MOVD64mr
    139988296U,	// MMX_MOVD64rm
    139857224U,	// MMX_MOVD64rr
    139857224U,	// MMX_MOVD64rrv164
    139857224U,	// MMX_MOVD64to64rr
    139857230U,	// MMX_MOVDQ2Qrr
    541068631U,	// MMX_MOVNTQmr
    139857247U,	// MMX_MOVQ2DQrr
    139857247U,	// MMX_MOVQ2FR64rr
    541068648U,	// MMX_MOVQ64gmr
    541068648U,	// MMX_MOVQ64mr
    140119400U,	// MMX_MOVQ64rm
    139857256U,	// MMX_MOVQ64rr
    139988296U,	// MMX_MOVZDI2PDIrm
    139857224U,	// MMX_MOVZDI2PDIrr
    138939758U,	// MMX_PACKSSDWrm
    138546542U,	// MMX_PACKSSDWrr
    138939768U,	// MMX_PACKSSWBrm
    138546552U,	// MMX_PACKSSWBrr
    138939778U,	// MMX_PACKUSWBrm
    138546562U,	// MMX_PACKUSWBrr
    138939788U,	// MMX_PADDBrm
    138546572U,	// MMX_PADDBrr
    138939795U,	// MMX_PADDDrm
    138546579U,	// MMX_PADDDrr
    138939802U,	// MMX_PADDQrm
    138546586U,	// MMX_PADDQrr
    138939809U,	// MMX_PADDSBrm
    138546593U,	// MMX_PADDSBrr
    138939817U,	// MMX_PADDSWrm
    138546601U,	// MMX_PADDSWrr
    138939825U,	// MMX_PADDUSBrm
    138546609U,	// MMX_PADDUSBrr
    138939834U,	// MMX_PADDUSWrm
    138546618U,	// MMX_PADDUSWrr
    138939843U,	// MMX_PADDWrm
    138546627U,	// MMX_PADDWrr
    138939850U,	// MMX_PANDNrm
    138546634U,	// MMX_PANDNrr
    138939857U,	// MMX_PANDrm
    138546641U,	// MMX_PANDrr
    138939863U,	// MMX_PAVGBrm
    138546647U,	// MMX_PAVGBrr
    138939870U,	// MMX_PAVGWrm
    138546654U,	// MMX_PAVGWrr
    138939877U,	// MMX_PCMPEQBrm
    138546661U,	// MMX_PCMPEQBrr
    138939886U,	// MMX_PCMPEQDrm
    138546670U,	// MMX_PCMPEQDrr
    138939895U,	// MMX_PCMPEQWrm
    138546679U,	// MMX_PCMPEQWrr
    138939904U,	// MMX_PCMPGTBrm
    138546688U,	// MMX_PCMPGTBrr
    138939913U,	// MMX_PCMPGTDrm
    138546697U,	// MMX_PCMPGTDrr
    138939922U,	// MMX_PCMPGTWrm
    138546706U,	// MMX_PCMPGTWrr
    139873819U,	// MMX_PEXTRWri
    138694179U,	// MMX_PINSRWrmi
    138563107U,	// MMX_PINSRWrri
    138939947U,	// MMX_PMADDWDrm
    138546731U,	// MMX_PMADDWDrr
    138939956U,	// MMX_PMAXSWrm
    138546740U,	// MMX_PMAXSWrr
    138939964U,	// MMX_PMAXUBrm
    138546748U,	// MMX_PMAXUBrr
    138939972U,	// MMX_PMINSWrm
    138546756U,	// MMX_PMINSWrr
    138939980U,	// MMX_PMINUBrm
    138546764U,	// MMX_PMINUBrr
    139857492U,	// MMX_PMOVMSKBrr
    138939998U,	// MMX_PMULHUWrm
    138546782U,	// MMX_PMULHUWrr
    138940007U,	// MMX_PMULHWrm
    138546791U,	// MMX_PMULHWrr
    138940015U,	// MMX_PMULLWrm
    138546799U,	// MMX_PMULLWrr
    138940023U,	// MMX_PMULUDQrm
    138546807U,	// MMX_PMULUDQrr
    138940032U,	// MMX_PORrm
    138546816U,	// MMX_PORrr
    138940037U,	// MMX_PSADBWrm
    138546821U,	// MMX_PSADBWrr
    140136077U,	// MMX_PSHUFWmi
    139873933U,	// MMX_PSHUFWri
    138546837U,	// MMX_PSLLDri
    138940053U,	// MMX_PSLLDrm
    138546837U,	// MMX_PSLLDrr
    138546844U,	// MMX_PSLLQri
    138940060U,	// MMX_PSLLQrm
    138546844U,	// MMX_PSLLQrr
    138546851U,	// MMX_PSLLWri
    138940067U,	// MMX_PSLLWrm
    138546851U,	// MMX_PSLLWrr
    138546858U,	// MMX_PSRADri
    138940074U,	// MMX_PSRADrm
    138546858U,	// MMX_PSRADrr
    138546865U,	// MMX_PSRAWri
    138940081U,	// MMX_PSRAWrm
    138546865U,	// MMX_PSRAWrr
    138546872U,	// MMX_PSRLDri
    138940088U,	// MMX_PSRLDrm
    138546872U,	// MMX_PSRLDrr
    138546879U,	// MMX_PSRLQri
    138940095U,	// MMX_PSRLQrm
    138546879U,	// MMX_PSRLQrr
    138546886U,	// MMX_PSRLWri
    138940102U,	// MMX_PSRLWrm
    138546886U,	// MMX_PSRLWrr
    138940109U,	// MMX_PSUBBrm
    138546893U,	// MMX_PSUBBrr
    138940116U,	// MMX_PSUBDrm
    138546900U,	// MMX_PSUBDrr
    138940123U,	// MMX_PSUBQrm
    138546907U,	// MMX_PSUBQrr
    138940130U,	// MMX_PSUBSBrm
    138546914U,	// MMX_PSUBSBrr
    138940138U,	// MMX_PSUBSWrm
    138546922U,	// MMX_PSUBSWrr
    138940146U,	// MMX_PSUBUSBrm
    138546930U,	// MMX_PSUBUSBrr
    138940155U,	// MMX_PSUBUSWrm
    138546939U,	// MMX_PSUBUSWrr
    138940164U,	// MMX_PSUBWrm
    138546948U,	// MMX_PSUBWrr
    138940171U,	// MMX_PUNPCKHBWrm
    138546955U,	// MMX_PUNPCKHBWrr
    138940182U,	// MMX_PUNPCKHDQrm
    138546966U,	// MMX_PUNPCKHDQrr
    138940193U,	// MMX_PUNPCKHWDrm
    138546977U,	// MMX_PUNPCKHWDrr
    138940204U,	// MMX_PUNPCKLBWrm
    138546988U,	// MMX_PUNPCKLBWrr
    138940215U,	// MMX_PUNPCKLDQrm
    138546999U,	// MMX_PUNPCKLDQrr
    138940226U,	// MMX_PUNPCKLWDrm
    138547010U,	// MMX_PUNPCKLWDrr
    138940237U,	// MMX_PXORrm
    138547021U,	// MMX_PXORrr
    0U,	// MMX_V_SET0
    0U,	// MMX_V_SETALLONES
    3923U,	// MONITOR
    1124077403U,	// MOV16ao16
    272633691U,	// MOV16mi
    272633691U,	// MOV16mr
    272633691U,	// MOV16ms
    1073745760U,	// MOV16o16a
    0U,	// MOV16r0
    139857755U,	// MOV16ri
    139726683U,	// MOV16rm
    139857755U,	// MOV16rr
    139857755U,	// MOV16rr_REV
    139857755U,	// MOV16rs
    139726683U,	// MOV16sm
    139857755U,	// MOV16sr
    1128271707U,	// MOV32ao32
    139857755U,	// MOV32cr
    139857755U,	// MOV32dr
    406851419U,	// MOV32mi
    406851419U,	// MOV32mr
    1073745770U,	// MOV32o32a
    0U,	// MOV32r0
    139857755U,	// MOV32rc
    139857755U,	// MOV32rd
    139857755U,	// MOV32ri
    139988827U,	// MOV32rm
    139857755U,	// MOV32rr
    139857755U,	// MOV32rr_REV
    2684358517U,	// MOV64FSrm
    2684358527U,	// MOV64GSrm
    1132466011U,	// MOV64ao64
    1132466011U,	// MOV64ao8
    139857755U,	// MOV64cr
    139857755U,	// MOV64dr
    541069147U,	// MOV64mi32
    541069147U,	// MOV64mr
    541069147U,	// MOV64ms
    1073745801U,	// MOV64o64a
    1073745801U,	// MOV64o8a
    0U,	// MOV64r0
    139857755U,	// MOV64rc
    139857755U,	// MOV64rd
    139857812U,	// MOV64ri
    139857755U,	// MOV64ri32
    0U,	// MOV64ri64i32
    140119899U,	// MOV64rm
    139857755U,	// MOV64rr
    139857755U,	// MOV64rr_REV
    139857755U,	// MOV64rs
    140119899U,	// MOV64sm
    139857755U,	// MOV64sr
    139857256U,	// MOV64toPQIrr
    140119400U,	// MOV64toSDrm
    139857256U,	// MOV64toSDrr
    1136660315U,	// MOV8ao8
    675286875U,	// MOV8mi
    675286875U,	// MOV8mr
    675336027U,	// MOV8mr_NOREX
    1073745820U,	// MOV8o8a
    0U,	// MOV8r0
    139857755U,	// MOV8ri
    140250971U,	// MOV8rm
    140300123U,	// MOV8rm_NOREX
    139857755U,	// MOV8rr
    139906907U,	// MOV8rr_NOREX
    139857755U,	// MOV8rr_REV
    2818574850U,	// MOVAPDmr
    140380674U,	// MOVAPDrm
    139856386U,	// MOVAPDrr
    2818574858U,	// MOVAPSmr
    140380682U,	// MOVAPSrm
    139856394U,	// MOVAPSrr
    140513190U,	// MOVDDUPrm
    139857830U,	// MOVDDUPrr
    139988296U,	// MOVDI2PDIrm
    139857224U,	// MOVDI2PDIrr
    139988296U,	// MOVDI2SSrm
    139857224U,	// MOVDI2SSrr
    1480593327U,	// MOVDQAmr
    140775343U,	// MOVDQArm
    139857839U,	// MOVDQArr
    1480593335U,	// MOVDQUmr
    1480593335U,	// MOVDQUmr_Int
    140775351U,	// MOVDQUrm
    140775351U,	// MOVDQUrm_Int
    138547135U,	// MOVHLPSrr
    943722440U,	// MOVHPDmr
    139333576U,	// MOVHPDrm
    943722448U,	// MOVHPSmr
    139333584U,	// MOVHPSrm
    138547160U,	// MOVLHPSrr
    943722465U,	// MOVLPDmr
    139333601U,	// MOVLPDrm
    943722473U,	// MOVLPSmr
    139333609U,	// MOVLPSrm
    541068648U,	// MOVLQ128mr
    139857905U,	// MOVMSKPDrr
    139857915U,	// MOVMSKPSrr
    140775429U,	// MOVNTDQArm
    2818576399U,	// MOVNTDQ_64mr
    2818576399U,	// MOVNTDQmr
    2818576399U,	// MOVNTDQmr_Int
    541069336U,	// MOVNTI_64mr
    406851608U,	// MOVNTImr
    406851608U,	// MOVNTImr_Int
    2818576416U,	// MOVNTPDmr
    1480593440U,	// MOVNTPDmr_Int
    2818576425U,	// MOVNTPSmr
    1480593449U,	// MOVNTPSmr_Int
    0U,	// MOVPC32r
    406850888U,	// MOVPDI2DImr
    139857224U,	// MOVPDI2DIrr
    541068648U,	// MOVPQI2QImr
    139857256U,	// MOVPQIto64rr
    140119400U,	// MOVQI2PQIrm
    139857256U,	// MOVQxrxr
    4146U,	// MOVSB
    4147U,	// MOVSD
    943722553U,	// MOVSDmr
    140513337U,	// MOVSDrm
    138547257U,	// MOVSDrr
    541068648U,	// MOVSDto64mr
    139857256U,	// MOVSDto64rr
    140382272U,	// MOVSHDUPrm
    139857984U,	// MOVSHDUPrr
    140382282U,	// MOVSLDUPrm
    139857994U,	// MOVSLDUPrr
    406850888U,	// MOVSS2DImr
    139857224U,	// MOVSS2DIrr
    809504852U,	// MOVSSmr
    140644436U,	// MOVSSrm
    138547284U,	// MOVSSrr
    4146U,	// MOVSW
    0U,	// MOVSX16rm8
    140251227U,	// MOVSX16rm8W
    0U,	// MOVSX16rr8
    139858011U,	// MOVSX16rr8W
    139726939U,	// MOVSX32rm16
    140251227U,	// MOVSX32rm8
    139858011U,	// MOVSX32rr16
    139858011U,	// MOVSX32rr8
    139726939U,	// MOVSX64rm16
    139989090U,	// MOVSX64rm32
    140251227U,	// MOVSX64rm8
    139858011U,	// MOVSX64rr16
    139858018U,	// MOVSX64rr32
    139858011U,	// MOVSX64rr8
    2818576490U,	// MOVUPDmr
    2818576490U,	// MOVUPDmr_Int
    140382314U,	// MOVUPDrm
    140382314U,	// MOVUPDrm_Int
    139858026U,	// MOVUPDrr
    2818576498U,	// MOVUPSmr
    2818576498U,	// MOVUPSmr_Int
    140382322U,	// MOVUPSrm
    140382322U,	// MOVUPSrm_Int
    139858034U,	// MOVUPSrr
    139988296U,	// MOVZDI2PDIrm
    139857224U,	// MOVZDI2PDIrr
    140774760U,	// MOVZPQILo2PQIrm
    139857256U,	// MOVZPQILo2PQIrr
    140119400U,	// MOVZQI2PQIrm
    139857256U,	// MOVZQI2PQIrr
    0U,	// MOVZX16rm8
    140251258U,	// MOVZX16rm8W
    0U,	// MOVZX16rr8
    139858042U,	// MOVZX16rr8W
    140300410U,	// MOVZX32_NOREXrm8
    139907194U,	// MOVZX32_NOREXrr8
    139726970U,	// MOVZX32rm16
    140251258U,	// MOVZX32rm8
    139858042U,	// MOVZX32rr16
    139858042U,	// MOVZX32rr8
    0U,	// MOVZX64rm16
    139726970U,	// MOVZX64rm16_Q
    0U,	// MOVZX64rm32
    0U,	// MOVZX64rm8
    140251258U,	// MOVZX64rm8_Q
    0U,	// MOVZX64rr16
    139858042U,	// MOVZX64rr16_Q
    0U,	// MOVZX64rr32
    0U,	// MOVZX64rr8
    139858042U,	// MOVZX64rr8_Q
    0U,	// MOV_Fp3232
    0U,	// MOV_Fp3264
    0U,	// MOV_Fp3280
    0U,	// MOV_Fp6432
    0U,	// MOV_Fp6464
    0U,	// MOV_Fp6480
    0U,	// MOV_Fp8032
    0U,	// MOV_Fp8064
    0U,	// MOV_Fp8080
    139612289U,	// MPSADBWrmi
    138563713U,	// MPSADBWrri
    268439690U,	// MUL16m
    134221962U,	// MUL16r
    402657418U,	// MUL32m
    134221962U,	// MUL32r
    536875146U,	// MUL64m
    134221962U,	// MUL64r
    671092874U,	// MUL8m
    134221962U,	// MUL8r
    139202703U,	// MULPDrm
    138547343U,	// MULPDrr
    139202710U,	// MULPSrm
    138547350U,	// MULPSrr
    139333789U,	// MULSDrm
    139333789U,	// MULSDrm_Int
    138547357U,	// MULSDrr
    138547357U,	// MULSDrr_Int
    139464868U,	// MULSSrm
    139464868U,	// MULSSrm_Int
    138547364U,	// MULSSrr
    138547364U,	// MULSSrr_Int
    805310635U,	// MUL_F32m
    939528363U,	// MUL_F64m
    268439729U,	// MUL_FI16m
    402657457U,	// MUL_FI32m
    134222008U,	// MUL_FPrST0
    134221995U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    142610603U,	// MUL_FrST0
    4287U,	// MWAIT
    268439749U,	// NEG16m
    134222021U,	// NEG16r
    402657477U,	// NEG32m
    134222021U,	// NEG32r
    536875205U,	// NEG64m
    134222021U,	// NEG64r
    671092933U,	// NEG8m
    134222021U,	// NEG8r
    4298U,	// NOOP
    402657486U,	// NOOPL
    268439758U,	// NOOPW
    268439763U,	// NOT16m
    134222035U,	// NOT16r
    402657491U,	// NOT32m
    134222035U,	// NOT32r
    536875219U,	// NOT64m
    134222035U,	// NOT64r
    671092947U,	// NOT8m
    134222035U,	// NOT8r
    134222040U,	// OR16i16
    272634081U,	// OR16mi
    272634081U,	// OR16mi8
    272634081U,	// OR16mr
    138547425U,	// OR16ri
    138547425U,	// OR16ri8
    138678497U,	// OR16rm
    138547425U,	// OR16rr
    138547425U,	// OR16rr_REV
    134222053U,	// OR32i32
    406851809U,	// OR32mi
    406851809U,	// OR32mi8
    406851809U,	// OR32mr
    138547425U,	// OR32ri
    138547425U,	// OR32ri8
    138809569U,	// OR32rm
    138547425U,	// OR32rr
    138547425U,	// OR32rr_REV
    134222063U,	// OR64i32
    541069537U,	// OR64mi32
    541069537U,	// OR64mi8
    541069537U,	// OR64mr
    138547425U,	// OR64ri32
    138547425U,	// OR64ri8
    138940641U,	// OR64rm
    138547425U,	// OR64rr
    138547425U,	// OR64rr_REV
    134222073U,	// OR8i8
    675287265U,	// OR8mi
    675287265U,	// OR8mr
    138547425U,	// OR8ri
    139071713U,	// OR8rm
    138547425U,	// OR8rr
    138547425U,	// OR8rr_REV
    139201042U,	// ORPDrm
    138545682U,	// ORPDrr
    139201048U,	// ORPSrm
    138545688U,	// ORPSrr
    201330946U,	// OUT16ir
    4359U,	// OUT16rr
    205525250U,	// OUT32ir
    4372U,	// OUT32rr
    209719554U,	// OUT8ir
    4386U,	// OUT8rr
    4399U,	// OUTSB
    4405U,	// OUTSD
    4411U,	// OUTSW
    140775745U,	// PABSBrm128
    140120385U,	// PABSBrm64
    139858241U,	// PABSBrr128
    139858241U,	// PABSBrr64
    140775752U,	// PABSDrm128
    140120392U,	// PABSDrm64
    139858248U,	// PABSDrr128
    139858248U,	// PABSDrr64
    140775759U,	// PABSWrm128
    140120399U,	// PABSWrm64
    139858255U,	// PABSWrr128
    139858255U,	// PABSWrr64
    139595118U,	// PACKSSDWrm
    138546542U,	// PACKSSDWrr
    139595128U,	// PACKSSWBrm
    138546552U,	// PACKSSWBrr
    139596118U,	// PACKUSDWrm
    138547542U,	// PACKUSDWrr
    139595138U,	// PACKUSWBrm
    138546562U,	// PACKUSWBrr
    139595148U,	// PADDBrm
    138546572U,	// PADDBrr
    139595155U,	// PADDDrm
    138546579U,	// PADDDrr
    139595162U,	// PADDQrm
    138546586U,	// PADDQrr
    139595169U,	// PADDSBrm
    138546593U,	// PADDSBrr
    139595177U,	// PADDSWrm
    138546601U,	// PADDSWrr
    139595185U,	// PADDUSBrm
    138546609U,	// PADDUSBrr
    139595194U,	// PADDUSWrm
    138546618U,	// PADDUSWrr
    139595203U,	// PADDWrm
    138546627U,	// PADDWrr
    139612512U,	// PALIGNR128rm
    138563936U,	// PALIGNR128rr
    138957152U,	// PALIGNR64rm
    138563936U,	// PALIGNR64rr
    139595210U,	// PANDNrm
    138546634U,	// PANDNrr
    139595217U,	// PANDrm
    138546641U,	// PANDrr
    139595223U,	// PAVGBrm
    138546647U,	// PAVGBrr
    139595230U,	// PAVGWrm
    138546654U,	// PAVGWrr
    139628905U,	// PBLENDVBrm0
    138580329U,	// PBLENDVBrr0
    139612531U,	// PBLENDWrmi
    138563955U,	// PBLENDWrri
    139595237U,	// PCMPEQBrm
    138546661U,	// PCMPEQBrr
    139595246U,	// PCMPEQDrm
    138546670U,	// PCMPEQDrr
    139596156U,	// PCMPEQQrm
    138547580U,	// PCMPEQQrr
    139595255U,	// PCMPEQWrm
    138546679U,	// PCMPEQWrr
    140792197U,	// PCMPESTRIArm
    139874693U,	// PCMPESTRIArr
    140792197U,	// PCMPESTRICrm
    139874693U,	// PCMPESTRICrr
    140792197U,	// PCMPESTRIOrm
    139874693U,	// PCMPESTRIOrr
    140792197U,	// PCMPESTRISrm
    139874693U,	// PCMPESTRISrr
    140792197U,	// PCMPESTRIZrm
    139874693U,	// PCMPESTRIZrr
    140792197U,	// PCMPESTRIrm
    139874693U,	// PCMPESTRIrr
    4496U,	// PCMPESTRM128MEM
    4520U,	// PCMPESTRM128REG
    140792256U,	// PCMPESTRM128rm
    139874752U,	// PCMPESTRM128rr
    139595264U,	// PCMPGTBrm
    138546688U,	// PCMPGTBrr
    139595273U,	// PCMPGTDrm
    138546697U,	// PCMPGTDrr
    139596235U,	// PCMPGTQrm
    138547659U,	// PCMPGTQrr
    139595282U,	// PCMPGTWrm
    138546706U,	// PCMPGTWrr
    140792276U,	// PCMPISTRIArm
    139874772U,	// PCMPISTRIArr
    140792276U,	// PCMPISTRICrm
    139874772U,	// PCMPISTRICrr
    140792276U,	// PCMPISTRIOrm
    139874772U,	// PCMPISTRIOrr
    140792276U,	// PCMPISTRISrm
    139874772U,	// PCMPISTRISrr
    140792276U,	// PCMPISTRIZrm
    139874772U,	// PCMPISTRIZrr
    140792276U,	// PCMPISTRIrm
    139874772U,	// PCMPISTRIrr
    4575U,	// PCMPISTRM128MEM
    4599U,	// PCMPISTRM128REG
    140792335U,	// PCMPISTRM128rm
    139874831U,	// PCMPISTRM128rr
    675303962U,	// PEXTRBmr
    139874842U,	// PEXTRBrr
    406868514U,	// PEXTRDmr
    139874850U,	// PEXTRDrr
    541086250U,	// PEXTRQmr
    139874858U,	// PEXTRQrr
    272649755U,	// PEXTRWmr
    139873819U,	// PEXTRWri
    139596338U,	// PHADDDrm128
    138940978U,	// PHADDDrm64
    138547762U,	// PHADDDrr128
    138547762U,	// PHADDDrr64
    139596346U,	// PHADDSWrm128
    138940986U,	// PHADDSWrm64
    138547770U,	// PHADDSWrr128
    138547770U,	// PHADDSWrr64
    139596355U,	// PHADDWrm128
    138940995U,	// PHADDWrm64
    138547779U,	// PHADDWrr128
    138547779U,	// PHADDWrr64
    140776011U,	// PHMINPOSUWrm128
    139858507U,	// PHMINPOSUWrr128
    139596375U,	// PHSUBDrm128
    138941015U,	// PHSUBDrm64
    138547799U,	// PHSUBDrr128
    138547799U,	// PHSUBDrr64
    139596383U,	// PHSUBSWrm128
    138941023U,	// PHSUBSWrm64
    138547807U,	// PHSUBSWrr128
    138547807U,	// PHSUBSWrr64
    139596392U,	// PHSUBWrm128
    138941032U,	// PHSUBWrm64
    138547816U,	// PHSUBWrr128
    138547816U,	// PHSUBWrr64
    139088496U,	// PINSRBrm
    138564208U,	// PINSRBrr
    138826360U,	// PINSRDrm
    138564216U,	// PINSRDrr
    138957440U,	// PINSRQrm
    138564224U,	// PINSRQrr
    138694179U,	// PINSRWrmi
    138563107U,	// PINSRWrri
    139596424U,	// PMADDUBSWrm128
    138941064U,	// PMADDUBSWrm64
    138547848U,	// PMADDUBSWrr128
    138547848U,	// PMADDUBSWrr64
    139595307U,	// PMADDWDrm
    138546731U,	// PMADDWDrr
    139596435U,	// PMAXSBrm
    138547859U,	// PMAXSBrr
    139596443U,	// PMAXSDrm
    138547867U,	// PMAXSDrr
    139595316U,	// PMAXSWrm
    138546740U,	// PMAXSWrr
    139595324U,	// PMAXUBrm
    138546748U,	// PMAXUBrr
    139596451U,	// PMAXUDrm
    138547875U,	// PMAXUDrr
    139596459U,	// PMAXUWrm
    138547883U,	// PMAXUWrr
    139596467U,	// PMINSBrm
    138547891U,	// PMINSBrr
    139596475U,	// PMINSDrm
    138547899U,	// PMINSDrr
    139595332U,	// PMINSWrm
    138546756U,	// PMINSWrr
    139595340U,	// PMINUBrm
    138546764U,	// PMINUBrr
    139596483U,	// PMINUDrm
    138547907U,	// PMINUDrr
    139596491U,	// PMINUWrm
    138547915U,	// PMINUWrr
    139857492U,	// PMOVMSKBrr
    139989715U,	// PMOVSXBDrm
    139858643U,	// PMOVSXBDrr
    139727581U,	// PMOVSXBQrm
    139858653U,	// PMOVSXBQrr
    140120807U,	// PMOVSXBWrm
    139858663U,	// PMOVSXBWrr
    140120817U,	// PMOVSXDQrm
    139858673U,	// PMOVSXDQrr
    140120827U,	// PMOVSXWDrm
    139858683U,	// PMOVSXWDrr
    139989765U,	// PMOVSXWQrm
    139858693U,	// PMOVSXWQrr
    139989775U,	// PMOVZXBDrm
    139858703U,	// PMOVZXBDrr
    139727641U,	// PMOVZXBQrm
    139858713U,	// PMOVZXBQrr
    140120867U,	// PMOVZXBWrm
    139858723U,	// PMOVZXBWrr
    140120877U,	// PMOVZXDQrm
    139858733U,	// PMOVZXDQrr
    140120887U,	// PMOVZXWDrm
    139858743U,	// PMOVZXWDrr
    139989825U,	// PMOVZXWQrm
    139858753U,	// PMOVZXWQrr
    139596619U,	// PMULDQrm
    138548043U,	// PMULDQrr
    139596627U,	// PMULHRSWrm128
    138941267U,	// PMULHRSWrm64
    138548051U,	// PMULHRSWrr128
    138548051U,	// PMULHRSWrr64
    139595358U,	// PMULHUWrm
    138546782U,	// PMULHUWrr
    139595367U,	// PMULHWrm
    138546791U,	// PMULHWrr
    139596637U,	// PMULLDrm
    139596637U,	// PMULLDrm_int
    138548061U,	// PMULLDrr
    138548061U,	// PMULLDrr_int
    139595375U,	// PMULLWrm
    138546799U,	// PMULLWrr
    139595383U,	// PMULUDQrm
    138546807U,	// PMULUDQrr
    134222693U,	// POP16r
    268440421U,	// POP16rmm
    134222693U,	// POP16rmr
    134222693U,	// POP32r
    402658149U,	// POP32rmm
    134222693U,	// POP32rmr
    134222693U,	// POP64r
    536875877U,	// POP64rmm
    134222693U,	// POP64rmr
    139727722U,	// POPCNT16rm
    139858794U,	// POPCNT16rr
    139989866U,	// POPCNT32rm
    139858794U,	// POPCNT32rr
    140120938U,	// POPCNT64rm
    139858794U,	// POPCNT64rr
    4978U,	// POPF
    4978U,	// POPFD
    4978U,	// POPFQ
    4983U,	// POPFS16
    4983U,	// POPFS32
    4983U,	// POPFS64
    4991U,	// POPGS16
    4991U,	// POPGS32
    4991U,	// POPGS64
    139595392U,	// PORrm
    138546816U,	// PORrr
    671093639U,	// PREFETCHNTA
    671093652U,	// PREFETCHT0
    671093664U,	// PREFETCHT1
    671093676U,	// PREFETCHT2
    139595397U,	// PSADBWrm
    138546821U,	// PSADBWrr
    139596728U,	// PSHUFBrm128
    138941368U,	// PSHUFBrm64
    138548152U,	// PSHUFBrr128
    138548152U,	// PSHUFBrr64
    140792768U,	// PSHUFDmi
    139875264U,	// PSHUFDri
    140792776U,	// PSHUFHWmi
    139875272U,	// PSHUFHWri
    140792785U,	// PSHUFLWmi
    139875281U,	// PSHUFLWri
    139596762U,	// PSIGNBrm128
    138941402U,	// PSIGNBrm64
    138548186U,	// PSIGNBrr128
    138548186U,	// PSIGNBrr64
    139596770U,	// PSIGNDrm128
    138941410U,	// PSIGNDrm64
    138548194U,	// PSIGNDrr128
    138548194U,	// PSIGNDrr64
    139596778U,	// PSIGNWrm128
    138941418U,	// PSIGNWrm64
    138548202U,	// PSIGNWrr128
    138548202U,	// PSIGNWrr64
    138548210U,	// PSLLDQri
    138546837U,	// PSLLDri
    139595413U,	// PSLLDrm
    138546837U,	// PSLLDrr
    138546844U,	// PSLLQri
    139595420U,	// PSLLQrm
    138546844U,	// PSLLQrr
    138546851U,	// PSLLWri
    139595427U,	// PSLLWrm
    138546851U,	// PSLLWrr
    138546858U,	// PSRADri
    139595434U,	// PSRADrm
    138546858U,	// PSRADrr
    138546865U,	// PSRAWri
    139595441U,	// PSRAWrm
    138546865U,	// PSRAWrr
    138548218U,	// PSRLDQri
    138546872U,	// PSRLDri
    139595448U,	// PSRLDrm
    138546872U,	// PSRLDrr
    138546879U,	// PSRLQri
    139595455U,	// PSRLQrm
    138546879U,	// PSRLQrr
    138546886U,	// PSRLWri
    139595462U,	// PSRLWrm
    138546886U,	// PSRLWrr
    139595469U,	// PSUBBrm
    138546893U,	// PSUBBrr
    139595476U,	// PSUBDrm
    138546900U,	// PSUBDrr
    139595483U,	// PSUBQrm
    138546907U,	// PSUBQrr
    139595490U,	// PSUBSBrm
    138546914U,	// PSUBSBrr
    139595498U,	// PSUBSWrm
    138546922U,	// PSUBSWrr
    139595506U,	// PSUBUSBrm
    138546930U,	// PSUBUSBrr
    139595515U,	// PSUBUSWrm
    138546939U,	// PSUBUSWrr
    139595524U,	// PSUBWrm
    138546948U,	// PSUBWrr
    140776450U,	// PTESTrm
    139858946U,	// PTESTrr
    139595531U,	// PUNPCKHBWrm
    138546955U,	// PUNPCKHBWrr
    139595542U,	// PUNPCKHDQrm
    138546966U,	// PUNPCKHDQrr
    139596810U,	// PUNPCKHQDQrm
    138548234U,	// PUNPCKHQDQrr
    139595553U,	// PUNPCKHWDrm
    138546977U,	// PUNPCKHWDrr
    139595564U,	// PUNPCKLBWrm
    138546988U,	// PUNPCKLBWrr
    139595575U,	// PUNPCKLDQrm
    138546999U,	// PUNPCKLDQrr
    139596822U,	// PUNPCKLQDQrm
    138548246U,	// PUNPCKLQDQrr
    139595586U,	// PUNPCKLWDrm
    138547010U,	// PUNPCKLWDrr
    134222882U,	// PUSH16r
    268440610U,	// PUSH16rmm
    134222882U,	// PUSH16rmr
    134222882U,	// PUSH32i16
    134222882U,	// PUSH32i32
    134222882U,	// PUSH32i8
    134222882U,	// PUSH32r
    402658338U,	// PUSH32rmm
    134222882U,	// PUSH32rmr
    134222882U,	// PUSH64i16
    134222882U,	// PUSH64i32
    134222882U,	// PUSH64i8
    134222882U,	// PUSH64r
    536876066U,	// PUSH64rmm
    134222882U,	// PUSH64rmr
    5160U,	// PUSHF
    5160U,	// PUSHFD
    5160U,	// PUSHFQ64
    5166U,	// PUSHFS16
    5166U,	// PUSHFS32
    5166U,	// PUSHFS64
    5175U,	// PUSHGS16
    5175U,	// PUSHGS32
    5175U,	// PUSHGS64
    139595597U,	// PXORrm
    138547021U,	// PXORrr
    348132416U,	// RCL16m1
    352326720U,	// RCL16mCL
    272634944U,	// RCL16mi
    213914688U,	// RCL16r1
    218108992U,	// RCL16rCL
    138548288U,	// RCL16ri
    482350144U,	// RCL32m1
    486544448U,	// RCL32mCL
    406852672U,	// RCL32mi
    213914688U,	// RCL32r1
    218108992U,	// RCL32rCL
    138548288U,	// RCL32ri
    616567872U,	// RCL64m1
    620762176U,	// RCL64mCL
    541070400U,	// RCL64mi
    213914688U,	// RCL64r1
    218108992U,	// RCL64rCL
    138548288U,	// RCL64ri
    750785600U,	// RCL8m1
    754979904U,	// RCL8mCL
    675288128U,	// RCL8mi
    213914688U,	// RCL8r1
    218108992U,	// RCL8rCL
    138548288U,	// RCL8ri
    140383301U,	// RCPPSm
    140383301U,	// RCPPSm_Int
    139859013U,	// RCPPSr
    139859013U,	// RCPPSr_Int
    140645452U,	// RCPSSm
    140645452U,	// RCPSSm_Int
    139859020U,	// RCPSSr
    139859020U,	// RCPSSr_Int
    348132435U,	// RCR16m1
    352326739U,	// RCR16mCL
    272634963U,	// RCR16mi
    213914707U,	// RCR16r1
    218109011U,	// RCR16rCL
    138548307U,	// RCR16ri
    482350163U,	// RCR32m1
    486544467U,	// RCR32mCL
    406852691U,	// RCR32mi
    213914707U,	// RCR32r1
    218109011U,	// RCR32rCL
    138548307U,	// RCR32ri
    616567891U,	// RCR64m1
    620762195U,	// RCR64mCL
    541070419U,	// RCR64mi
    213914707U,	// RCR64r1
    218109011U,	// RCR64rCL
    138548307U,	// RCR64ri
    750785619U,	// RCR8m1
    754979923U,	// RCR8mCL
    675288147U,	// RCR8mi
    213914707U,	// RCR8r1
    218109011U,	// RCR8rCL
    138548307U,	// RCR8ri
    5208U,	// RDMSR
    5214U,	// RDPMC
    5220U,	// RDTSC
    5226U,	// RDTSCP
    5233U,	// REPNE_PREFIX
    5239U,	// REP_MOVSB
    5249U,	// REP_MOVSD
    5259U,	// REP_MOVSQ
    5269U,	// REP_MOVSW
    5279U,	// REP_PREFIX
    5283U,	// REP_STOSB
    5293U,	// REP_STOSD
    5303U,	// REP_STOSQ
    5313U,	// REP_STOSW
    5323U,	// RET
    134223055U,	// RETI
    268440788U,	// ROL16m1
    352326868U,	// ROL16mCL
    272635092U,	// ROL16mi
    134223060U,	// ROL16r1
    218109140U,	// ROL16rCL
    138548436U,	// ROL16ri
    402658516U,	// ROL32m1
    486544596U,	// ROL32mCL
    406852820U,	// ROL32mi
    134223060U,	// ROL32r1
    218109140U,	// ROL32rCL
    138548436U,	// ROL32ri
    536876244U,	// ROL64m1
    624956628U,	// ROL64mCL
    541070548U,	// ROL64mi
    134223060U,	// ROL64r1
    222303444U,	// ROL64rCL
    138548436U,	// ROL64ri
    671093972U,	// ROL8m1
    754980052U,	// ROL8mCL
    675288276U,	// ROL8mi
    134223060U,	// ROL8r1
    218109140U,	// ROL8rCL
    138548436U,	// ROL8ri
    268440793U,	// ROR16m1
    352326873U,	// ROR16mCL
    272635097U,	// ROR16mi
    134223065U,	// ROR16r1
    218109145U,	// ROR16rCL
    138548441U,	// ROR16ri
    402658521U,	// ROR32m1
    486544601U,	// ROR32mCL
    406852825U,	// ROR32mi
    134223065U,	// ROR32r1
    218109145U,	// ROR32rCL
    138548441U,	// ROR32ri
    536876249U,	// ROR64m1
    624956633U,	// ROR64mCL
    541070553U,	// ROR64mi
    134223065U,	// ROR64r1
    222303449U,	// ROR64rCL
    138548441U,	// ROR64ri
    671093977U,	// ROR8m1
    754980057U,	// ROR8mCL
    675288281U,	// ROR8mi
    134223065U,	// ROR8r1
    218109145U,	// ROR8rCL
    138548441U,	// ROR8ri
    140399838U,	// ROUNDPDm_Int
    139875550U,	// ROUNDPDr_Int
    140399847U,	// ROUNDPSm_Int
    139875559U,	// ROUNDPSr_Int
    139351280U,	// ROUNDSDm_Int
    138564848U,	// ROUNDSDr_Int
    139482361U,	// ROUNDSSm_Int
    138564857U,	// ROUNDSSr_Int
    5378U,	// RSM
    140383494U,	// RSQRTPSm
    140383494U,	// RSQRTPSm_Int
    139859206U,	// RSQRTPSr
    139859206U,	// RSQRTPSr_Int
    140645647U,	// RSQRTSSm
    140645647U,	// RSQRTSSm_Int
    139859215U,	// RSQRTSSr
    139859215U,	// RSQRTSSr_Int
    5400U,	// SAHF
    268440861U,	// SAR16m1
    352326941U,	// SAR16mCL
    272635165U,	// SAR16mi
    134223133U,	// SAR16r1
    218109213U,	// SAR16rCL
    138548509U,	// SAR16ri
    402658589U,	// SAR32m1
    486544669U,	// SAR32mCL
    406852893U,	// SAR32mi
    134223133U,	// SAR32r1
    218109213U,	// SAR32rCL
    138548509U,	// SAR32ri
    536876317U,	// SAR64m1
    624956701U,	// SAR64mCL
    541070621U,	// SAR64mi
    134223133U,	// SAR64r1
    222303517U,	// SAR64rCL
    138548509U,	// SAR64ri
    671094045U,	// SAR8m1
    754980125U,	// SAR8mCL
    675288349U,	// SAR8mi
    134223133U,	// SAR8r1
    218109213U,	// SAR8rCL
    138548509U,	// SAR8ri
    134223138U,	// SBB16i16
    272635180U,	// SBB16mi
    272635180U,	// SBB16mi8
    272635180U,	// SBB16mr
    138548524U,	// SBB16ri
    138548524U,	// SBB16ri8
    138679596U,	// SBB16rm
    138548524U,	// SBB16rr
    138548524U,	// SBB16rr_REV
    134223153U,	// SBB32i32
    406852908U,	// SBB32mi
    406852908U,	// SBB32mi8
    406852908U,	// SBB32mr
    138548524U,	// SBB32ri
    138548524U,	// SBB32ri8
    138810668U,	// SBB32rm
    138548524U,	// SBB32rr
    138548524U,	// SBB32rr_REV
    134223164U,	// SBB64i32
    541070636U,	// SBB64mi32
    541070636U,	// SBB64mi8
    541070636U,	// SBB64mr
    138548524U,	// SBB64ri32
    138548524U,	// SBB64ri8
    138941740U,	// SBB64rm
    138548524U,	// SBB64rr
    138548524U,	// SBB64rr_REV
    134223175U,	// SBB8i8
    675288364U,	// SBB8mi
    675288364U,	// SBB8mr
    138548524U,	// SBB8ri
    139072812U,	// SBB8rm
    138548524U,	// SBB8rr
    138548524U,	// SBB8rr_REV
    5457U,	// SCAS16
    5457U,	// SCAS32
    5457U,	// SCAS64
    5457U,	// SCAS8
    671094102U,	// SETAEm
    134223190U,	// SETAEr
    671094109U,	// SETAm
    134223197U,	// SETAr
    671094115U,	// SETBEm
    134223203U,	// SETBEr
    0U,	// SETB_C16r
    0U,	// SETB_C32r
    0U,	// SETB_C64r
    0U,	// SETB_C8r
    671094122U,	// SETBm
    134223210U,	// SETBr
    671094128U,	// SETEm
    134223216U,	// SETEr
    671094134U,	// SETGEm
    134223222U,	// SETGEr
    671094141U,	// SETGm
    134223229U,	// SETGr
    671094147U,	// SETLEm
    134223235U,	// SETLEr
    671094154U,	// SETLm
    134223242U,	// SETLr
    671094160U,	// SETNEm
    134223248U,	// SETNEr
    671094167U,	// SETNOm
    134223255U,	// SETNOr
    671094174U,	// SETNPm
    134223262U,	// SETNPr
    671094181U,	// SETNSm
    134223269U,	// SETNSr
    671094188U,	// SETOm
    134223276U,	// SETOr
    671094194U,	// SETPm
    134223282U,	// SETPr
    671094200U,	// SETSm
    134223288U,	// SETSr
    5566U,	// SFENCE
    1744836037U,	// SGDTm
    268441035U,	// SHL16m1
    352327115U,	// SHL16mCL
    272635339U,	// SHL16mi
    134223307U,	// SHL16r1
    218109387U,	// SHL16rCL
    138548683U,	// SHL16ri
    402658763U,	// SHL32m1
    486544843U,	// SHL32mCL
    406853067U,	// SHL32mi
    134223307U,	// SHL32r1
    218109387U,	// SHL32rCL
    138548683U,	// SHL32ri
    536876491U,	// SHL64m1
    624956875U,	// SHL64mCL
    541070795U,	// SHL64mi
    134223307U,	// SHL64r1
    222303691U,	// SHL64rCL
    138548683U,	// SHL64ri
    671094219U,	// SHL8m1
    754980299U,	// SHL8mCL
    675288523U,	// SHL8mi
    134223307U,	// SHL8r1
    218109387U,	// SHL8rCL
    138548683U,	// SHL8ri
    272700880U,	// SHLD16mrCL
    272651728U,	// SHLD16mri8
    138614224U,	// SHLD16rrCL
    138565072U,	// SHLD16rri8
    406918608U,	// SHLD32mrCL
    406869456U,	// SHLD32mri8
    138614224U,	// SHLD32rrCL
    138565072U,	// SHLD32rri8
    541152720U,	// SHLD64mrCL
    541087184U,	// SHLD64mri8
    138630608U,	// SHLD64rrCL
    138565072U,	// SHLD64rri8
    268441046U,	// SHR16m1
    352327126U,	// SHR16mCL
    272635350U,	// SHR16mi
    134223318U,	// SHR16r1
    218109398U,	// SHR16rCL
    138548694U,	// SHR16ri
    402658774U,	// SHR32m1
    486544854U,	// SHR32mCL
    406853078U,	// SHR32mi
    134223318U,	// SHR32r1
    218109398U,	// SHR32rCL
    138548694U,	// SHR32ri
    536876502U,	// SHR64m1
    624956886U,	// SHR64mCL
    541070806U,	// SHR64mi
    134223318U,	// SHR64r1
    222303702U,	// SHR64rCL
    138548694U,	// SHR64ri
    671094230U,	// SHR8m1
    754980310U,	// SHR8mCL
    675288534U,	// SHR8mi
    134223318U,	// SHR8r1
    218109398U,	// SHR8rCL
    138548694U,	// SHR8ri
    272700891U,	// SHRD16mrCL
    272651739U,	// SHRD16mri8
    138614235U,	// SHRD16rrCL
    138565083U,	// SHRD16rri8
    406918619U,	// SHRD32mrCL
    406869467U,	// SHRD32mri8
    138614235U,	// SHRD32rrCL
    138565083U,	// SHRD32rri8
    541152731U,	// SHRD64mrCL
    541087195U,	// SHRD64mri8
    138630619U,	// SHRD64rrCL
    138565083U,	// SHRD64rri8
    139220449U,	// SHUFPDrmi
    138565089U,	// SHUFPDrri
    139220457U,	// SHUFPSrmi
    138565097U,	// SHUFPSrri
    1744836081U,	// SIDTm
    5623U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    268441084U,	// SLDT16m
    134223356U,	// SLDT16r
    268441084U,	// SLDT64m
    134223356U,	// SLDT64r
    268441090U,	// SMSW16m
    134223362U,	// SMSW16r
    134223362U,	// SMSW32r
    134223362U,	// SMSW64r
    140383752U,	// SQRTPDm
    140383752U,	// SQRTPDm_Int
    139859464U,	// SQRTPDr
    139859464U,	// SQRTPDr_Int
    140383760U,	// SQRTPSm
    140383760U,	// SQRTPSm_Int
    139859472U,	// SQRTPSr
    139859472U,	// SQRTPSr_Int
    140514840U,	// SQRTSDm
    140514840U,	// SQRTSDm_Int
    139859480U,	// SQRTSDr
    139859480U,	// SQRTSDr_Int
    140645920U,	// SQRTSSm
    140645920U,	// SQRTSSm_Int
    139859488U,	// SQRTSSr
    139859488U,	// SQRTSSr_Int
    5672U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    5678U,	// SS_PREFIX
    5681U,	// STC
    5685U,	// STD
    5689U,	// STI
    402658877U,	// STMXCSR
    4146U,	// STOSB
    5702U,	// STOSD
    4146U,	// STOSW
    5708U,	// STRm
    5708U,	// STRr
    805312081U,	// ST_F32m
    939529809U,	// ST_F64m
    805312086U,	// ST_FP32m
    939529814U,	// ST_FP64m
    2147489366U,	// ST_FP80m
    134223446U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    134223441U,	// ST_Frr
    134223452U,	// SUB16i16
    272635494U,	// SUB16mi
    272635494U,	// SUB16mi8
    272635494U,	// SUB16mr
    138548838U,	// SUB16ri
    138548838U,	// SUB16ri8
    138679910U,	// SUB16rm
    138548838U,	// SUB16rr
    138548838U,	// SUB16rr_REV
    134223467U,	// SUB32i32
    406853222U,	// SUB32mi
    406853222U,	// SUB32mi8
    406853222U,	// SUB32mr
    138548838U,	// SUB32ri
    138548838U,	// SUB32ri8
    138810982U,	// SUB32rm
    138548838U,	// SUB32rr
    138548838U,	// SUB32rr_REV
    134223478U,	// SUB64i32
    541070950U,	// SUB64mi32
    541070950U,	// SUB64mi8
    541070950U,	// SUB64mr
    138548838U,	// SUB64ri32
    138548838U,	// SUB64ri8
    138942054U,	// SUB64rm
    138548838U,	// SUB64rr
    138548838U,	// SUB64rr_REV
    134223489U,	// SUB8i8
    675288678U,	// SUB8mi
    675288678U,	// SUB8mr
    138548838U,	// SUB8ri
    139073126U,	// SUB8rm
    138548838U,	// SUB8rr
    138548838U,	// SUB8rr_REV
    139204235U,	// SUBPDrm
    138548875U,	// SUBPDrr
    139204242U,	// SUBPSrm
    138548882U,	// SUBPSrr
    805312153U,	// SUBR_F32m
    939529881U,	// SUBR_F64m
    268441248U,	// SUBR_FI16m
    402658976U,	// SUBR_FI32m
    134223528U,	// SUBR_FPrST0
    134223513U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    142612121U,	// SUBR_FrST0
    139335344U,	// SUBSDrm
    139335344U,	// SUBSDrm_Int
    138548912U,	// SUBSDrr
    138548912U,	// SUBSDrr_Int
    139466423U,	// SUBSSrm
    139466423U,	// SUBSSrm_Int
    138548919U,	// SUBSSrr
    138548919U,	// SUBSSrr_Int
    805312190U,	// SUB_F32m
    939529918U,	// SUB_F64m
    268441284U,	// SUB_FI16m
    402659012U,	// SUB_FI32m
    134223563U,	// SUB_FPrST0
    134223550U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    142612158U,	// SUB_FrST0
    5842U,	// SWAPGS
    5849U,	// SYSCALL
    5857U,	// SYSENTER
    5866U,	// SYSEXIT
    5866U,	// SYSEXIT64
    5874U,	// SYSRET
    1166019469U,	// TAILJMPd
    494930829U,	// TAILJMPm
    226495373U,	// TAILJMPr
    226495373U,	// TAILJMPr64
    230692601U,	// TCRETURNdi
    230692601U,	// TCRETURNdi64
    230692601U,	// TCRETURNri
    230692601U,	// TCRETURNri64
    134223621U,	// TEST16i16
    272635664U,	// TEST16mi
    139859728U,	// TEST16ri
    139728656U,	// TEST16rm
    139859728U,	// TEST16rr
    134223638U,	// TEST32i32
    406853392U,	// TEST32mi
    139859728U,	// TEST32ri
    139990800U,	// TEST32rm
    139859728U,	// TEST32rr
    134223650U,	// TEST64i32
    541071120U,	// TEST64mi32
    139859728U,	// TEST64ri32
    140121872U,	// TEST64rm
    139859728U,	// TEST64rr
    134223662U,	// TEST8i8
    675288848U,	// TEST8mi
    139859728U,	// TEST8ri
    140252944U,	// TEST8rm
    139859728U,	// TEST8rr
    2952795961U,	// TLS_addr32
    3087013695U,	// TLS_addr64
    5969U,	// TRAP
    5973U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    140512077U,	// UCOMISDrm
    139856717U,	// UCOMISDrr
    140643158U,	// UCOMISSrm
    139856726U,	// UCOMISSrr
    134223706U,	// UCOM_FIPr
    134223723U,	// UCOM_FIr
    6011U,	// UCOM_FPPr
    134223747U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    134223755U,	// UCOM_Fr
    139204498U,	// UNPCKHPDrm
    138549138U,	// UNPCKHPDrr
    139204508U,	// UNPCKHPSrm
    138549148U,	// UNPCKHPSrr
    139204518U,	// UNPCKLPDrm
    138549158U,	// UNPCKLPDrr
    139204528U,	// UNPCKLPSrm
    138549168U,	// UNPCKLPSrr
    139876282U,	// VASTART_SAVE_XMM_REGS
    268441554U,	// VERRm
    134223826U,	// VERRr
    268441560U,	// VERWm
    134223832U,	// VERWr
    6110U,	// VMCALL
    536877029U,	// VMCLEARm
    6126U,	// VMLAUNCH
    536877047U,	// VMPTRLDm
    536877056U,	// VMPTRSTm
    406853641U,	// VMREAD32rm
    139859977U,	// VMREAD32rr
    541071369U,	// VMREAD64rm
    139859977U,	// VMREAD64rr
    6161U,	// VMRESUME
    139991066U,	// VMWRITE32rm
    139859994U,	// VMWRITE32rr
    140122138U,	// VMWRITE64rm
    139859994U,	// VMWRITE64rr
    6179U,	// VMXOFF
    6186U,	// VMXON
    0U,	// V_SET0
    0U,	// V_SETALLONES
    6193U,	// WAIT
    6198U,	// WBINVD
    536871957U,	// WINCALL64m
    1073742869U,	// WINCALL64pcrel32
    134218773U,	// WINCALL64r
    6205U,	// WRMSR
    272635971U,	// XADD16rm
    139860035U,	// XADD16rr
    406853699U,	// XADD32rm
    139860035U,	// XADD32rr
    541071427U,	// XADD64rm
    139860035U,	// XADD64rr
    675289155U,	// XADD8rm
    139860035U,	// XADD8rr
    134223945U,	// XCHG16ar
    2281707604U,	// XCHG16rm
    3221231700U,	// XCHG16rr
    134223962U,	// XCHG32ar
    2415925332U,	// XCHG32rm
    3221231700U,	// XCHG32rr
    134223974U,	// XCHG64ar
    3355449428U,	// XCHG64rm
    3221231700U,	// XCHG64rr
    2550143060U,	// XCHG8rm
    3221231700U,	// XCHG8rr
    134223986U,	// XCH_F
    6264U,	// XLAT
    134223998U,	// XOR16i16
    272636040U,	// XOR16mi
    272636040U,	// XOR16mi8
    272636040U,	// XOR16mr
    138549384U,	// XOR16ri
    138549384U,	// XOR16ri8
    138680456U,	// XOR16rm
    138549384U,	// XOR16rr
    138549384U,	// XOR16rr_REV
    134224013U,	// XOR32i32
    406853768U,	// XOR32mi
    406853768U,	// XOR32mi8
    406853768U,	// XOR32mr
    138549384U,	// XOR32ri
    138549384U,	// XOR32ri8
    138811528U,	// XOR32rm
    138549384U,	// XOR32rr
    138549384U,	// XOR32rr_REV
    134224024U,	// XOR64i32
    541071496U,	// XOR64mi32
    541071496U,	// XOR64mi8
    541071496U,	// XOR64mr
    138549384U,	// XOR64ri32
    138549384U,	// XOR64ri8
    138942600U,	// XOR64rm
    138549384U,	// XOR64rr
    138549384U,	// XOR64rr_REV
    134224035U,	// XOR8i8
    675289224U,	// XOR8mi
    675289224U,	// XOR8mr
    138549384U,	// XOR8ri
    139073672U,	// XOR8rm
    138549384U,	// XOR8rr
    138549384U,	// XOR8rr_REV
    139201054U,	// XORPDrm
    138545694U,	// XORPDrr
    139201061U,	// XORPSrm
    138545701U,	// XORPSrr
    0U
  };

  const char *AsmStrs = 
    "DBG_VALUE\000fabs\000adc\t%ax, \000adc\t\000adc\t%eax, \000adc\t%rax, \000"
    "adc\t%al, \000add\t%ax, \000add\t\000add\t%eax, \000add\t%rax, \000add\t"
    "%al, \000addpd\t\000addps\t\000addsd\t\000addss\t\000addsubpd\t\000adds"
    "ubps\t\000fadd\t\000fiadd\t\000faddp\t\000#ADJCALLSTACKDOWN\000#ADJCALL"
    "STACKUP\000and\t%ax, \000and\t\000and\t%eax, \000and\t%rax, \000and\t%a"
    "l, \000andnpd\t\000andnps\t\000andpd\t\000andps\t\000#ATOMADD6432 PSEUD"
    "O!\000#ATOMAND16 PSEUDO!\000#ATOMAND32 PSEUDO!\000#ATOMAND64 PSEUDO!\000"
    "#ATOMAND6432 PSEUDO!\000#ATOMAND8 PSEUDO!\000#ATOMMAX16 PSEUDO!\000#ATO"
    "MMAX32 PSEUDO!\000#ATOMMAX64 PSEUDO!\000#ATOMMIN16 PSEUDO!\000#ATOMMIN3"
    "2 PSEUDO!\000#ATOMMIN64 PSEUDO!\000#ATOMNAND16 PSEUDO!\000#ATOMNAND32 P"
    "SEUDO!\000#ATOMNAND64 PSEUDO!\000#ATOMNAND6432 PSEUDO!\000#ATOMNAND8 PS"
    "EUDO!\000#ATOMOR16 PSEUDO!\000#ATOMOR32 PSEUDO!\000#ATOMOR64 PSEUDO!\000"
    "#ATOMOR6432 PSEUDO!\000#ATOMOR8 PSEUDO!\000#ATOMSUB6432 PSEUDO!\000#ATO"
    "MSWAP6432 PSEUDO!\000#ATOMUMAX16 PSEUDO!\000#ATOMUMAX32 PSEUDO!\000#ATO"
    "MUMAX64 PSEUDO!\000#ATOMUMIN16 PSEUDO!\000#ATOMUMIN32 PSEUDO!\000#ATOMU"
    "MIN64 PSEUDO!\000#ATOMXOR16 PSEUDO!\000#ATOMXOR32 PSEUDO!\000#ATOMXOR64"
    " PSEUDO!\000#ATOMXOR6432 PSEUDO!\000#ATOMXOR8 PSEUDO!\000blendpd\t\000b"
    "lendps\t\000blendvpd\t\000blendvps\t\000bsf\t\000bsr\t\000bswap\t\000bt"
    "\t\000btc\t\000btr\t\000bts\t\000call\t\000cbw\000cdq\000cdqe\000fchs\000"
    "clc\000cld\000clflush\t\000cli\000clts\000cmc\000cmova\t\000cmovae\t\000"
    "cmovb\t\000cmovbe\t\000fcmovbe\t%ST(0), \000fcmovb\t%ST(0), \000cmove\t"
    "\000fcmove\t%ST(0), \000cmovg\t\000cmovge\t\000cmovl\t\000cmovle\t\000f"
    "cmovnbe\t%ST(0), \000fcmovnb\t%ST(0), \000cmovne\t\000fcmovne\t%ST(0), "
    "\000cmovno\t\000cmovnp\t\000fcmovnu\t%ST(0), \000cmovns\t\000cmovo\t\000"
    "cmovp\t\000fcmovu\t %ST(0), \000cmovs\t\000#CMOV_FR32 PSEUDO!\000#CMOV_"
    "FR64 PSEUDO!\000#CMOV_GR8 PSEUDO!\000#CMOV_V1I64 PSEUDO!\000#CMOV_V2F64"
    " PSEUDO!\000#CMOV_V2I64 PSEUDO!\000#CMOV_V4F32 PSEUDO!\000cmp\t%ax, \000"
    "cmp\t\000cmp\t%eax, \000cmp\t%rax, \000cmp\t%al, \000cmp\000cmps\000cmp"
    "xchg16b\t\000cmpxchg\t\000cmpxchg8b\t\000comisd\t\000comiss\t\000fcomp\t"
    "\000fcomip\t%ST(0), \000fcomi\t%ST(0), \000fcom\t\000fcos\000cpuid\000c"
    "qo\000crc32 \t\000cs\000cvtdq2pd\t\000cvtdq2ps\t\000cvtpd2dq\t\000cvtpd"
    "2ps\t\000cvtps2dq\t\000cvtps2pd\t\000cvtsd2si\t\000cvtsd2ss\t\000cvtsi2"
    "sd\t\000cvtsi2ss\t\000cvtss2sd\t\000cvtss2si\t\000cvttps2dq\t\000cvttsd"
    "2si\t\000cvttss2si\t\000cwd\000cwde\000dec\t\000div\t\000divpd\t\000div"
    "ps\t\000fdivr\t\000fidivr\t\000fdivrp\t\000divsd\t\000divss\t\000fdiv\t"
    "\000fidiv\t\000fdivp\t\000dppd\t\000dpps\t\000ds\000ret\t#eh_return, ad"
    "dr: \000enter\t\000es\000extractps\t\000f2xm1\000lcall\t\000ljmp\t\000f"
    "bld\t\000fbstp\t\000fcompp\000fdecstp\000ffree\t\000ficom\t\000ficomp\t"
    "\000fincstp\000fldcw\t\000fldenv\t\000fldl2e\000fldl2t\000fldlg2\000fld"
    "ln2\000fldpi\000fnclex\000fninit\000fnop\000fnstcw\t\000fnstsw %ax\000f"
    "nstsw\t\000##FP32_TO_INT16_IN_MEM PSEUDO!\000##FP32_TO_INT32_IN_MEM PSE"
    "UDO!\000##FP32_TO_INT64_IN_MEM PSEUDO!\000##FP64_TO_INT16_IN_MEM PSEUDO"
    "!\000##FP64_TO_INT32_IN_MEM PSEUDO!\000##FP64_TO_INT64_IN_MEM PSEUDO!\000"
    "##FP80_TO_INT16_IN_MEM PSEUDO!\000##FP80_TO_INT32_IN_MEM PSEUDO!\000##F"
    "P80_TO_INT64_IN_MEM PSEUDO!\000fpatan\000fprem\000fprem1\000fptan\000##"
    "FP_REG_KILL\000frndint\000frstor\t\000fnsave\t\000fscale\000fsincos\000"
    "fnstenv\t\000movl\t%fs:\000fs\000fxam\000fxrstor\t\000fxsave\t\000fxtra"
    "ct\000fyl2x\000fyl2xp1\000movapd\t\000movaps\t\000orpd\t\000orps\t\000x"
    "orpd\t\000xorps\t\000movl\t%gs:\000gs\000haddpd\t\000haddps\t\000hlt\000"
    "hsubpd\t\000hsubps\t\000idiv\t\000fild\t\000imul\t\000ins\000in\t%AX, \000"
    "in\t%AX, %DX\000in\t%EAX, \000in\t%EAX, %DX\000in\t%AL, \000in\t%AL, %D"
    "X\000inc\t\000insertps\t\000int\t\000int\t3\000invd\000invept\000invlpg"
    "\t\000invvpid\000iret\000fisttp\t\000fist\t\000fistp\t\000cvtpd2pi\t\000"
    "cvtpi2pd\t\000cvtpi2ps\t\000cvtps2pi\t\000cvttpd2dq\t\000cvttpd2pi\t\000"
    "cvttps2pi\t\000ucomisd\t\000ucomiss\t\000jae\t\000ja\t\000jbe\t\000jb\t"
    "\000jcxz\t\000je\t\000jge\t\000jg\t\000jle\t\000jl\t\000jmp\t\000jne\t\000"
    "jno\t\000jnp\t\000jns\t\000jo\t\000jp\t\000js\t\000lahf\000lar\t\000loc"
    "k\n\tcmpxchg\t\000lock\n\tcmpxchgq\t\000lock\n\tcmpxchg8b\t\000lddqu\t\000"
    "ldmxcsr\t\000lds\t\000fldz\000fld1\000fld\t\000lea\t\000leave\000les\t\000"
    "lfence\000lfs\t\000lgdt\t\000lgs\t\000lidt\t\000lldt\t\000lmsw\t\000loc"
    "k\n\tadd\t\000lock\n\tdec\t\000lock\n\tinc\t\000lock\000lock\n\tsub\t\000"
    "lodsb\000lodsd\000lodsq\000lodsw\000loop\t\000loope\t\000loopne\t\000lr"
    "et\000lret\t\000lsl\t\000lss\t\000ltr\t\000lock\n\txadd\t\000maskmovdqu"
    "\t\000maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000mfence\000# dynamic s"
    "tack allocation\000minpd\t\000minps\t\000minsd\t\000minss\t\000emms\000"
    "femms\000maskmovq\t\000movd\t\000movdq2q\t\000movntq\t\000movq2dq\t\000"
    "movq\t\000packssdw\t\000packsswb\t\000packuswb\t\000paddb\t\000paddd\t\000"
    "paddq\t\000paddsb\t\000paddsw\t\000paddusb\t\000paddusw\t\000paddw\t\000"
    "pandn\t\000pand\t\000pavgb\t\000pavgw\t\000pcmpeqb\t\000pcmpeqd\t\000pc"
    "mpeqw\t\000pcmpgtb\t\000pcmpgtd\t\000pcmpgtw\t\000pextrw\t\000pinsrw\t\000"
    "pmaddwd\t\000pmaxsw\t\000pmaxub\t\000pminsw\t\000pminub\t\000pmovmskb\t"
    "\000pmulhuw\t\000pmulhw\t\000pmullw\t\000pmuludq\t\000por\t\000psadbw\t"
    "\000pshufw\t\000pslld\t\000psllq\t\000psllw\t\000psrad\t\000psraw\t\000"
    "psrld\t\000psrlq\t\000psrlw\t\000psubb\t\000psubd\t\000psubq\t\000psubs"
    "b\t\000psubsw\t\000psubusb\t\000psubusw\t\000psubw\t\000punpckhbw\t\000"
    "punpckhdq\t\000punpckhwd\t\000punpcklbw\t\000punpckldq\t\000punpcklwd\t"
    "\000pxor\t\000monitor\000mov\t\000mov\t%ax, \000mov\t%eax, \000movq\t%f"
    "s:\000movq\t%gs:\000mov\t%rax, \000movabs\t\000mov\t%al, \000movddup\t\000"
    "movdqa\t\000movdqu\t\000movhlps\t\000movhpd\t\000movhps\t\000movlhps\t\000"
    "movlpd\t\000movlps\t\000movmskpd\t\000movmskps\t\000movntdqa\t\000movnt"
    "dq\t\000movnti\t\000movntpd\t\000movntps\t\000\000movsd\000movsd\t\000m"
    "ovshdup\t\000movsldup\t\000movss\t\000movsx\t\000movsxd\t\000movupd\t\000"
    "movups\t\000movzx\t\000mpsadbw\t\000mul\t\000mulpd\t\000mulps\t\000muls"
    "d\t\000mulss\t\000fmul\t\000fimul\t\000fmulp\t\000mwait\000neg\t\000nop"
    "\000nop\t\000not\t\000or\t%ax, \000or\t\000or\t%eax, \000or\t%rax, \000"
    "or\t%al, \000out\t\000out\t%DX, %AX\000out\t%DX, %EAX\000out\t%DX, %AL\000"
    "outsb\000outsd\000outsw\000pabsb\t\000pabsd\t\000pabsw\t\000packusdw\t\000"
    "palignr\t\000pblendvb\t\000pblendw\t\000pcmpeqq\t\000pcmpestri\t\000#PC"
    "MPESTRM128rm PSEUDO!\000#PCMPESTRM128rr PSEUDO!\000pcmpestrm\t\000pcmpg"
    "tq\t\000pcmpistri\t\000#PCMPISTRM128rm PSEUDO!\000#PCMPISTRM128rr PSEUD"
    "O!\000pcmpistrm\t\000pextrb\t\000pextrd\t\000pextrq\t\000phaddd\t\000ph"
    "addsw\t\000phaddw\t\000phminposuw\t\000phsubd\t\000phsubsw\t\000phsubw\t"
    "\000pinsrb\t\000pinsrd\t\000pinsrq\t\000pmaddubsw\t\000pmaxsb\t\000pmax"
    "sd\t\000pmaxud\t\000pmaxuw\t\000pminsb\t\000pminsd\t\000pminud\t\000pmi"
    "nuw\t\000pmovsxbd\t\000pmovsxbq\t\000pmovsxbw\t\000pmovsxdq\t\000pmovsx"
    "wd\t\000pmovsxwq\t\000pmovzxbd\t\000pmovzxbq\t\000pmovzxbw\t\000pmovzxd"
    "q\t\000pmovzxwd\t\000pmovzxwq\t\000pmuldq\t\000pmulhrsw\t\000pmulld\t\000"
    "pop\t\000popcnt\t\000popf\000pop\t%fs\000pop\t%gs\000prefetchnta\t\000p"
    "refetcht0\t\000prefetcht1\t\000prefetcht2\t\000pshufb\t\000pshufd\t\000"
    "pshufhw\t\000pshuflw\t\000psignb\t\000psignd\t\000psignw\t\000pslldq\t\000"
    "psrldq\t\000ptest \t\000punpckhqdq\t\000punpcklqdq\t\000push\t\000pushf"
    "\000push\t%fs\000push\t%gs\000rcl\t\000rcpps\t\000rcpss\t\000rcr\t\000r"
    "dmsr\000rdpmc\000rdtsc\000rdtscp\000repne\000rep movsb\000rep movsd\000"
    "rep movsq\000rep movsw\000rep\000rep stosb\000rep stosd\000rep stosq\000"
    "rep stosw\000ret\000ret\t\000rol\t\000ror\t\000roundpd\t\000roundps\t\000"
    "roundsd\t\000roundss\t\000rsm\000rsqrtps\t\000rsqrtss\t\000sahf\000sar\t"
    "\000sbb\t%ax, \000sbb\t\000sbb\t%eax, \000sbb\t%rax, \000sbb\t%al, \000"
    "scas\000setae\t\000seta\t\000setbe\t\000setb\t\000sete\t\000setge\t\000"
    "setg\t\000setle\t\000setl\t\000setne\t\000setno\t\000setnp\t\000setns\t"
    "\000seto\t\000setp\t\000sets\t\000sfence\000sgdt\t\000shl\t\000shld\t\000"
    "shr\t\000shrd\t\000shufpd\t\000shufps\t\000sidt\t\000fsin\000sldt\t\000"
    "smsw\t\000sqrtpd\t\000sqrtps\t\000sqrtsd\t\000sqrtss\t\000fsqrt\000ss\000"
    "stc\000std\000sti\000stmxcsr\t\000stosd\000str\t\000fst\t\000fstp\t\000"
    "sub\t%ax, \000sub\t\000sub\t%eax, \000sub\t%rax, \000sub\t%al, \000subp"
    "d\t\000subps\t\000fsubr\t\000fisubr\t\000fsubrp\t\000subsd\t\000subss\t"
    "\000fsub\t\000fisub\t\000fsubp\t\000swapgs\000syscall\000sysenter\000sy"
    "sexit\000sysret\000#TC_RETURN \000test\t%ax, \000test\t\000test\t%eax, "
    "\000test\t%rax, \000test\t%al, \000leal\t\000.byte\t0x66; leaq\t\000ud2"
    "\000ftst\000fucomip\t%ST(0), \000fucomi\t%ST(0), \000fucompp\000fucomp\t"
    "\000fucom\t\000unpckhpd\t\000unpckhps\t\000unpcklpd\t\000unpcklps\t\000"
    "#VASTART_SAVE_XMM_REGS \000verr\t\000verw\t\000vmcall\000vmclear\t\000v"
    "mlaunch\000vmptrld\t\000vmptrst\t\000vmread\t\000vmresume\000vmwrite\t\000"
    "vmxoff\000vmxon\t\000wait\000wbinvd\000wrmsr\000xadd\t\000xchg\t%ax, \000"
    "xchg\t\000xchg\t%eax, \000xchg\t%rax, \000fxch\t\000xlatb\000xor\t%ax, "
    "\000xor\t\000xor\t%eax, \000xor\t%rax, \000xor\t%al, \000";

  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 5 bits for 26 unique commands.
  switch ((Bits >> 27) & 31) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, ABS_F, ADJCALLSTACKDOWN32, ADJCALLSTACKDOWN64, ADJCALLSTACK...
    return;
    break;
  case 1:
    // ADC16i16, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16rr_REV, ADC32i32, ...
    printOperand(MI, 0); 
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, ADD_FI16m, AND...
    printi16mem(MI, 0); 
    break;
  case 3:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, ADD_FI32m, AND...
    printi32mem(MI, 0); 
    break;
  case 4:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0); 
    break;
  case 5:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CLFLUSH, CMP8mi, CMP8m...
    printi8mem(MI, 0); 
    break;
  case 6:
    // ADD_F32m, DIVR_F32m, DIV_F32m, EXTRACTPSmr, FBLDm, FBSTPm, FCOM32m, FC...
    printf32mem(MI, 0); 
    break;
  case 7:
    // ADD_F64m, DIVR_F64m, DIV_F64m, FCOM64m, FCOMP64m, LD_F64m, MOVHPDmr, M...
    printf64mem(MI, 0); 
    break;
  case 8:
    // CALL64pcrel32, CALLpcrel32, JAE_1, JAE_4, JA_1, JA_4, JBE_1, JBE_4, JB...
    print_pcrel_imm(MI, 0); 
    break;
  case 9:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm
    printSSECC(MI, 7); 
    break;
  case 10:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printSSECC(MI, 3); 
    break;
  case 11:
    // CMPXCHG16B, MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, MOVNTPDmr_Int, MOVNTPSmr...
    printi128mem(MI, 0); 
    break;
  case 12:
    // CRC32m16, CRC32m32, CRC32m8, CRC32r16, CRC32r32, CRC32r8, CRC64m64, CR...
    printOperand(MI, 1); 
    O << ", "; 
    break;
  case 13:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64, FXR...
    printopaquemem(MI, 0); 
    return;
    break;
  case 14:
    // FS_MOV32rm, GS_MOV32rm
    printi32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 15:
    // LCMPXCHG64
    printOperand(MI, 5); 
    O << ','; 
    printi64mem(MI, 0); 
    return;
    break;
  case 16:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0); 
    return;
    break;
  case 17:
    // LXADD16, XCHG16rm
    printi16mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 1); 
    return;
    break;
  case 18:
    // LXADD32, XCHG32rm
    printi32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 1); 
    return;
    break;
  case 19:
    // LXADD8, XCHG8rm
    printi8mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 1); 
    return;
    break;
  case 20:
    // MOV64FSrm, MOV64GSrm
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 21:
    // MOVAPDmr, MOVAPSmr, MOVNTDQ_64mr, MOVNTDQmr, MOVNTDQmr_Int, MOVNTPDmr,...
    printf128mem(MI, 0); 
    O << ", "; 
    printOperand(MI, 5); 
    return;
    break;
  case 22:
    // TLS_addr32
    printlea32mem(MI, 0); 
    O << ", %eax; call\t___tls_get_addr@PLT"; 
    return;
    break;
  case 23:
    // TLS_addr64
    printlea64mem(MI, 0); 
    O << "(%rip), %rdi; .word\t0x6666; rex64; call\t__tls_get_addr@PLT"; 
    return;
    break;
  case 24:
    // XCHG16rr, XCHG32rr, XCHG64rr, XCHG8rr
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 1); 
    return;
    break;
  case 25:
    // XCHG64rm
    printi64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 1); 
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 24 unique commands.
  switch ((Bits >> 22) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i32, ADD64i32, AD...
    return;
    break;
  case 1:
    // ADC16mi, ADC16mi8, ADC16mr, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16...
    O << ", "; 
    break;
  case 2:
    // ADD_FrST0, DIVR_FrST0, DIV_FrST0, MUL_FrST0, SUBR_FrST0, SUB_FrST0
    O << ", %ST(0)"; 
    return;
    break;
  case 3:
    // CMPPDrmi, CMPPDrri
    O << "pd\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 4:
    // CMPPSrmi, CMPPSrri
    O << "ps\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 5:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr
    O << "sd\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 6:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr
    O << "ss\t"; 
    printOperand(MI, 0); 
    O << ", "; 
    break;
  case 7:
    // CRC32m16
    printi16mem(MI, 2); 
    return;
    break;
  case 8:
    // CRC32m32
    printi32mem(MI, 2); 
    return;
    break;
  case 9:
    // CRC32m8
    printi8mem(MI, 2); 
    return;
    break;
  case 10:
    // CRC32r16, CRC32r32, CRC32r8, CRC64r64
    printOperand(MI, 2); 
    return;
    break;
  case 11:
    // CRC64m64, LXADD64
    printi64mem(MI, 2); 
    return;
    break;
  case 12:
    // MOV16ao16
    O << ", %ax"; 
    return;
    break;
  case 13:
    // MOV32ao32
    O << ", %eax"; 
    return;
    break;
  case 14:
    // MOV64ao64, MOV64ao8
    O << ", %rax"; 
    return;
    break;
  case 15:
    // MOV8ao8
    O << ", %al"; 
    return;
    break;
  case 16:
    // OUT16ir
    O << ", %AX"; 
    return;
    break;
  case 17:
    // OUT32ir
    O << ", %EAX"; 
    return;
    break;
  case 18:
    // OUT8ir
    O << ", %AL"; 
    return;
    break;
  case 19:
    // RCL16m1, RCL16r1, RCL32m1, RCL32r1, RCL64m1, RCL64r1, RCL8m1, RCL8r1, ...
    O << ", 1"; 
    return;
    break;
  case 20:
    // RCL16mCL, RCL16rCL, RCL32mCL, RCL32rCL, RCL64mCL, RCL64rCL, RCL8mCL, R...
    O << ", CL"; 
    return;
    break;
  case 21:
    // ROL64mCL, ROL64rCL, ROR64mCL, ROR64rCL, SAR64mCL, SAR64rCL, SHL64mCL, ...
    O << ", %CL"; 
    return;
    break;
  case 22:
    // TAILJMPd, TAILJMPm, TAILJMPr, TAILJMPr64
    O << "  # TAILCALL"; 
    return;
    break;
  case 23:
    // TCRETURNdi, TCRETURNdi64, TCRETURNri, TCRETURNri64
    O << ' '; 
    printOperand(MI, 1); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 23 unique commands.
  switch ((Bits >> 17) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5); 
    break;
  case 1:
    // ADC16ri, ADC16ri8, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, ADC32rr, A...
    printOperand(MI, 2); 
    break;
  case 2:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2); 
    break;
  case 3:
    // ADC32rm, ADD32rm, AND32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm, CMOVBE32r...
    printi32mem(MI, 2); 
    break;
  case 4:
    // ADC64rm, ADD64rm, AND64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm, CMOVBE64r...
    printi64mem(MI, 2); 
    break;
  case 5:
    // ADC8rm, ADD8rm, AND8rm, OR8rm, PINSRBrm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2); 
    break;
  case 6:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2); 
    break;
  case 7:
    // ADDSDrm, ADDSDrm_Int, CMPSDrm, DIVSDrm, DIVSDrm_Int, Int_CMPSDrm, Int_...
    printf64mem(MI, 2); 
    break;
  case 8:
    // ADDSSrm, ADDSSrm_Int, CMPSSrm, DIVSSrm, DIVSSrm_Int, INSERTPSrm, Int_C...
    printf32mem(MI, 2); 
    break;
  case 9:
    // BLENDPDrmi, BLENDPSrmi, BLENDVPDrm0, BLENDVPSrm0, DPPDrmi, DPPSrmi, MP...
    printi128mem(MI, 2); 
    break;
  case 10:
    // BSF16rm, BSR16rm, CMP16rm, IMUL16rmi, IMUL16rmi8, LAR16rm, LAR32rm, LA...
    printi16mem(MI, 1); 
    break;
  case 11:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 1); 
    break;
  case 12:
    // BSF32rm, BSR32rm, CMP32rm, CVTSI2SDrm, CVTSI2SSrm, IMUL32rmi, IMUL32rm...
    printi32mem(MI, 1); 
    break;
  case 13:
    // BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64rm, CVTSI2SS64rm, IMUL64rmi32, IM...
    printi64mem(MI, 1); 
    break;
  case 14:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8W, MOVSX32rm8, MOVSX64rm8, MOV...
    printi8mem(MI, 1); 
    break;
  case 15:
    // COMISDrm, COMISSrm, CVTDQ2PDrm, CVTDQ2PSrm, CVTPD2DQrm, CVTPD2PSrm, CV...
    printf128mem(MI, 1); 
    break;
  case 16:
    // CVTPS2PDrm, CVTSD2SI64rm, CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_...
    printf64mem(MI, 1); 
    return;
    break;
  case 17:
    // CVTSS2SDrm, CVTSS2SI64rm, CVTSS2SIrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_...
    printf32mem(MI, 1); 
    return;
    break;
  case 18:
    // Int_CVTDQ2PSrm, LDDQUrm, MOVDQArm, MOVDQUrm, MOVDQUrm_Int, MOVNTDQArm,...
    printi128mem(MI, 1); 
    break;
  case 19:
    // LDS16rm, LDS32rm, LES16rm, LES32rm, LFS16rm, LFS32rm, LFS64rm, LGS16rm...
    printopaquemem(MI, 1); 
    return;
    break;
  case 20:
    // LEA16r, LEA32r
    printlea32mem(MI, 1); 
    return;
    break;
  case 21:
    // LEA64_32r
    printlea64_32mem(MI, 1); 
    return;
    break;
  case 22:
    // LEA64r
    printlea64mem(MI, 1); 
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 14) & 7) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16...
    return;
    break;
  case 1:
    // BLENDPDrmi, BLENDPDrri, BLENDPSrmi, BLENDPSrri, DPPDrmi, DPPDrri, DPPS...
    O << ", "; 
    break;
  case 2:
    // BLENDVPDrm0, BLENDVPDrr0, BLENDVPSrm0, BLENDVPSrr0, PBLENDVBrm0, PBLEN...
    O << ", %xmm0"; 
    return;
    break;
  case 3:
    // MOV8mr_NOREX, MOV8rm_NOREX, MOV8rr_NOREX, MOVZX32_NOREXrm8, MOVZX32_NO...
    O << "  # NOREX"; 
    return;
    break;
  case 4:
    // SHLD16mrCL, SHLD16rrCL, SHLD32mrCL, SHLD32rrCL, SHRD16mrCL, SHRD16rrCL...
    O << ", CL"; 
    return;
    break;
  case 5:
    // SHLD64mrCL, SHLD64rrCL, SHRD64mrCL, SHRD64rrCL
    O << ", %CL"; 
    return;
    break;
  }

  switch (MI->getOpcode()) {
  case X86::BLENDPDrmi:
  case X86::BLENDPDrri:
  case X86::BLENDPSrmi:
  case X86::BLENDPSrri:
  case X86::DPPDrmi:
  case X86::DPPDrri:
  case X86::DPPSrmi:
  case X86::DPPSrri:
  case X86::EXTRACTPSmr:
  case X86::EXTRACTPSrr:
  case X86::IMUL16rmi:
  case X86::IMUL16rmi8:
  case X86::IMUL16rri:
  case X86::IMUL16rri8:
  case X86::IMUL32rmi:
  case X86::IMUL32rmi8:
  case X86::IMUL32rri:
  case X86::IMUL32rri8:
  case X86::IMUL64rmi32:
  case X86::IMUL64rmi8:
  case X86::IMUL64rri32:
  case X86::IMUL64rri8:
  case X86::INSERTPSrm:
  case X86::INSERTPSrr:
  case X86::MMX_PEXTRWri:
  case X86::MMX_PINSRWrmi:
  case X86::MMX_PINSRWrri:
  case X86::MMX_PSHUFWmi:
  case X86::MMX_PSHUFWri:
  case X86::MPSADBWrmi:
  case X86::MPSADBWrri:
  case X86::PALIGNR128rm:
  case X86::PALIGNR128rr:
  case X86::PALIGNR64rm:
  case X86::PALIGNR64rr:
  case X86::PBLENDWrmi:
  case X86::PBLENDWrri:
  case X86::PCMPESTRIArm:
  case X86::PCMPESTRIArr:
  case X86::PCMPESTRICrm:
  case X86::PCMPESTRICrr:
  case X86::PCMPESTRIOrm:
  case X86::PCMPESTRIOrr:
  case X86::PCMPESTRISrm:
  case X86::PCMPESTRISrr:
  case X86::PCMPESTRIZrm:
  case X86::PCMPESTRIZrr:
  case X86::PCMPESTRIrm:
  case X86::PCMPESTRIrr:
  case X86::PCMPESTRM128rm:
  case X86::PCMPESTRM128rr:
  case X86::PCMPISTRIArm:
  case X86::PCMPISTRIArr:
  case X86::PCMPISTRICrm:
  case X86::PCMPISTRICrr:
  case X86::PCMPISTRIOrm:
  case X86::PCMPISTRIOrr:
  case X86::PCMPISTRISrm:
  case X86::PCMPISTRISrr:
  case X86::PCMPISTRIZrm:
  case X86::PCMPISTRIZrr:
  case X86::PCMPISTRIrm:
  case X86::PCMPISTRIrr:
  case X86::PCMPISTRM128rm:
  case X86::PCMPISTRM128rr:
  case X86::PEXTRBmr:
  case X86::PEXTRBrr:
  case X86::PEXTRDmr:
  case X86::PEXTRDrr:
  case X86::PEXTRQmr:
  case X86::PEXTRQrr:
  case X86::PEXTRWmr:
  case X86::PEXTRWri:
  case X86::PINSRBrm:
  case X86::PINSRBrr:
  case X86::PINSRDrm:
  case X86::PINSRDrr:
  case X86::PINSRQrm:
  case X86::PINSRQrr:
  case X86::PINSRWrmi:
  case X86::PINSRWrri:
  case X86::PSHUFDmi:
  case X86::PSHUFDri:
  case X86::PSHUFHWmi:
  case X86::PSHUFHWri:
  case X86::PSHUFLWmi:
  case X86::PSHUFLWri:
  case X86::ROUNDPDm_Int:
  case X86::ROUNDPDr_Int:
  case X86::ROUNDPSm_Int:
  case X86::ROUNDPSr_Int:
  case X86::ROUNDSDm_Int:
  case X86::ROUNDSDr_Int:
  case X86::ROUNDSSm_Int:
  case X86::ROUNDSSr_Int:
  case X86::SHLD16mri8:
  case X86::SHLD16rri8:
  case X86::SHLD32mri8:
  case X86::SHLD32rri8:
  case X86::SHLD64mri8:
  case X86::SHLD64rri8:
  case X86::SHRD16mri8:
  case X86::SHRD16rri8:
  case X86::SHRD32mri8:
  case X86::SHRD32rri8:
  case X86::SHRD64mri8:
  case X86::SHRD64rri8:
  case X86::SHUFPDrmi:
  case X86::SHUFPDrri:
  case X86::SHUFPSrmi:
  case X86::SHUFPSrri:
  case X86::VASTART_SAVE_XMM_REGS:
    switch (MI->getOpcode()) {
    case X86::BLENDPDrmi: 
    case X86::BLENDPSrmi: 
    case X86::DPPDrmi: 
    case X86::DPPSrmi: 
    case X86::INSERTPSrm: 
    case X86::MMX_PINSRWrmi: 
    case X86::MPSADBWrmi: 
    case X86::PALIGNR128rm: 
    case X86::PALIGNR64rm: 
    case X86::PBLENDWrmi: 
    case X86::PINSRBrm: 
    case X86::PINSRDrm: 
    case X86::PINSRQrm: 
    case X86::PINSRWrmi: 
    case X86::ROUNDSDm_Int: 
    case X86::ROUNDSSm_Int: 
    case X86::SHUFPDrmi: 
    case X86::SHUFPSrmi: printOperand(MI, 7); break;
    case X86::BLENDPDrri: 
    case X86::BLENDPSrri: 
    case X86::DPPDrri: 
    case X86::DPPSrri: 
    case X86::INSERTPSrr: 
    case X86::MMX_PINSRWrri: 
    case X86::MPSADBWrri: 
    case X86::PALIGNR128rr: 
    case X86::PALIGNR64rr: 
    case X86::PBLENDWrri: 
    case X86::PINSRBrr: 
    case X86::PINSRDrr: 
    case X86::PINSRQrr: 
    case X86::PINSRWrri: 
    case X86::ROUNDSDr_Int: 
    case X86::ROUNDSSr_Int: 
    case X86::SHLD16rri8: 
    case X86::SHLD32rri8: 
    case X86::SHLD64rri8: 
    case X86::SHRD16rri8: 
    case X86::SHRD32rri8: 
    case X86::SHRD64rri8: 
    case X86::SHUFPDrri: 
    case X86::SHUFPSrri: printOperand(MI, 3); break;
    case X86::EXTRACTPSmr: 
    case X86::IMUL16rmi: 
    case X86::IMUL16rmi8: 
    case X86::IMUL32rmi: 
    case X86::IMUL32rmi8: 
    case X86::IMUL64rmi32: 
    case X86::IMUL64rmi8: 
    case X86::MMX_PSHUFWmi: 
    case X86::PCMPESTRIArm: 
    case X86::PCMPESTRICrm: 
    case X86::PCMPESTRIOrm: 
    case X86::PCMPESTRISrm: 
    case X86::PCMPESTRIZrm: 
    case X86::PCMPESTRIrm: 
    case X86::PCMPESTRM128rm: 
    case X86::PCMPISTRIArm: 
    case X86::PCMPISTRICrm: 
    case X86::PCMPISTRIOrm: 
    case X86::PCMPISTRISrm: 
    case X86::PCMPISTRIZrm: 
    case X86::PCMPISTRIrm: 
    case X86::PCMPISTRM128rm: 
    case X86::PEXTRBmr: 
    case X86::PEXTRDmr: 
    case X86::PEXTRQmr: 
    case X86::PEXTRWmr: 
    case X86::PSHUFDmi: 
    case X86::PSHUFHWmi: 
    case X86::PSHUFLWmi: 
    case X86::ROUNDPDm_Int: 
    case X86::ROUNDPSm_Int: 
    case X86::SHLD16mri8: 
    case X86::SHLD32mri8: 
    case X86::SHLD64mri8: 
    case X86::SHRD16mri8: 
    case X86::SHRD32mri8: 
    case X86::SHRD64mri8: printOperand(MI, 6); break;
    case X86::EXTRACTPSrr: 
    case X86::IMUL16rri: 
    case X86::IMUL16rri8: 
    case X86::IMUL32rri: 
    case X86::IMUL32rri8: 
    case X86::IMUL64rri32: 
    case X86::IMUL64rri8: 
    case X86::MMX_PEXTRWri: 
    case X86::MMX_PSHUFWri: 
    case X86::PCMPESTRIArr: 
    case X86::PCMPESTRICrr: 
    case X86::PCMPESTRIOrr: 
    case X86::PCMPESTRISrr: 
    case X86::PCMPESTRIZrr: 
    case X86::PCMPESTRIrr: 
    case X86::PCMPESTRM128rr: 
    case X86::PCMPISTRIArr: 
    case X86::PCMPISTRICrr: 
    case X86::PCMPISTRIOrr: 
    case X86::PCMPISTRISrr: 
    case X86::PCMPISTRIZrr: 
    case X86::PCMPISTRIrr: 
    case X86::PCMPISTRM128rr: 
    case X86::PEXTRBrr: 
    case X86::PEXTRDrr: 
    case X86::PEXTRQrr: 
    case X86::PEXTRWri: 
    case X86::PSHUFDri: 
    case X86::PSHUFHWri: 
    case X86::PSHUFLWri: 
    case X86::ROUNDPDr_Int: 
    case X86::ROUNDPSr_Int: 
    case X86::VASTART_SAVE_XMM_REGS: printOperand(MI, 2); break;
    }
    return;
    break;
  }
  return;
}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *X86IntelInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 159 && "Invalid register number!");

  static const unsigned RegAsmOffset[] = {
    0, 3, 6, 9, 12, 15, 18, 22, 25, 28, 31, 34, 37, 40, 
    43, 47, 50, 54, 58, 62, 66, 70, 74, 78, 82, 85, 88, 92, 
    96, 100, 105, 110, 115, 120, 125, 130, 135, 140, 144, 148, 152, 158, 
    162, 165, 169, 173, 177, 181, 185, 189, 193, 197, 201, 204, 207, 210, 
    214, 218, 222, 226, 230, 234, 238, 242, 246, 251, 256, 261, 265, 270, 
    275, 280, 284, 289, 294, 299, 303, 308, 313, 318, 322, 327, 332, 337, 
    341, 346, 351, 356, 359, 363, 367, 371, 374, 378, 382, 386, 390, 394, 
    398, 403, 408, 413, 418, 423, 428, 433, 438, 443, 447, 451, 455, 459, 
    463, 467, 470, 474, 477, 481, 484, 490, 496, 502, 508, 514, 520, 526, 
    532, 537, 542, 548, 554, 560, 566, 572, 578, 583, 588, 593, 598, 603, 
    608, 613, 618, 623, 628, 634, 640, 646, 652, 658, 664, 669, 674, 679, 
    684, 689, 694, 699, 0
  };

  const char *AsmStrs =
    "ah\000al\000ax\000bh\000bl\000bp\000bpl\000bx\000ch\000cl\000cs\000cx\000"
    "dh\000di\000dil\000dl\000dr0\000dr1\000dr2\000dr3\000dr4\000dr5\000dr6\000"
    "dr7\000ds\000dx\000eax\000ebp\000ebx\000ecr0\000ecr1\000ecr2\000ecr3\000"
    "ecr4\000ecr5\000ecr6\000ecr7\000ecx\000edi\000edx\000flags\000eip\000es"
    "\000esi\000esp\000fp0\000fp1\000fp2\000fp3\000fp4\000fp5\000fp6\000fs\000"
    "gs\000ip\000mm0\000mm1\000mm2\000mm3\000mm4\000mm5\000mm6\000mm7\000r10"
    "\000r10b\000r10d\000r10w\000r11\000r11b\000r11d\000r11w\000r12\000r12b\000"
    "r12d\000r12w\000r13\000r13b\000r13d\000r13w\000r14\000r14b\000r14d\000r"
    "14w\000r15\000r15b\000r15d\000r15w\000r8\000r8b\000r8d\000r8w\000r9\000"
    "r9b\000r9d\000r9w\000rax\000rbp\000rbx\000rcr0\000rcr1\000rcr2\000rcr3\000"
    "rcr4\000rcr5\000rcr6\000rcr7\000rcr8\000rcx\000rdi\000rdx\000rip\000rsi"
    "\000rsp\000si\000sil\000sp\000spl\000ss\000st(0)\000st(1)\000st(2)\000s"
    "t(3)\000st(4)\000st(5)\000st(6)\000st(7)\000xmm0\000xmm1\000xmm10\000xm"
    "m11\000xmm12\000xmm13\000xmm14\000xmm15\000xmm2\000xmm3\000xmm4\000xmm5"
    "\000xmm6\000xmm7\000xmm8\000xmm9\000ymm0\000ymm1\000ymm10\000ymm11\000y"
    "mm12\000ymm13\000ymm14\000ymm15\000ymm2\000ymm3\000ymm4\000ymm5\000ymm6"
    "\000ymm7\000ymm8\000ymm9\000";
  return AsmStrs+RegAsmOffset[RegNo-1];
}


#ifdef GET_INSTRUCTION_NAME
#undef GET_INSTRUCTION_NAME

/// getInstructionName: This method is automatically generated by tblgen
/// from the instruction set description.  This returns the enum name of the
/// specified instruction.
const char *X86IntelInstPrinter::getInstructionName(unsigned Opcode) {
  assert(Opcode < 2525 && "Invalid instruction number!");

  static const unsigned InstAsmOffset[] = {
    0, 4, 14, 24, 33, 42, 47, 62, 76, 89, 103, 120, 130, 136, 
    145, 154, 163, 172, 180, 189, 197, 205, 214, 222, 230, 242, 251, 259, 
    268, 276, 284, 293, 301, 309, 321, 330, 340, 349, 357, 367, 376, 384, 
    392, 404, 411, 418, 425, 432, 439, 446, 457, 466, 474, 483, 491, 502, 
    510, 519, 527, 535, 544, 552, 561, 569, 580, 588, 597, 605, 613, 622, 
    632, 641, 649, 660, 670, 679, 687, 695, 702, 709, 716, 726, 733, 740, 
    747, 755, 763, 771, 779, 787, 799, 807, 819, 827, 839, 847, 859, 870, 
    881, 892, 903, 912, 921, 931, 941, 952, 962, 971, 981, 990, 1000, 1012, 
    1021, 1033, 1045, 1058, 1071, 1084, 1097, 1110, 1123, 1133, 1152, 1171, 1188, 1205, 
    1214, 1222, 1231, 1239, 1247, 1256, 1264, 1272, 1284, 1293, 1301, 1310, 1318, 1326, 
    1335, 1343, 1351, 1363, 1372, 1382, 1391, 1399, 1409, 1418, 1426, 1434, 1446, 1453, 
    1460, 1467, 1474, 1481, 1488, 1499, 1508, 1517, 1526, 1535, 1543, 1551, 1559, 1567, 
    1579, 1589, 1599, 1609, 1621, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1701, 1712, 
    1723, 1736, 1746, 1755, 1764, 1773, 1784, 1792, 1804, 1817, 1828, 1839, 1850, 1861, 
    1872, 1883, 1893, 1903, 1913, 1925, 1934, 1945, 1956, 1967, 1978, 1990, 2002, 2014, 
    2026, 2034, 2042, 2050, 2058, 2066, 2074, 2082, 2090, 2098, 2106, 2114, 2122, 2131, 
    2140, 2148, 2155, 2163, 2170, 2178, 2185, 2193, 2200, 2208, 2215, 2223, 2230, 2239, 
    2247, 2256, 2264, 2273, 2281, 2290, 2298, 2307, 2315, 2324, 2332, 2341, 2349, 2358, 
    2366, 2375, 2383, 2392, 2400, 2409, 2417, 2426, 2434, 2443, 2451, 2460, 2468, 2477, 
    2485, 2494, 2502, 2511, 2519, 2528, 2536, 2544, 2552, 2560, 2574, 2582, 2594, 2598, 
    2602, 2607, 2613, 2622, 2631, 2640, 2644, 2648, 2656, 2660, 2665, 2669, 2679, 2689, 
    2699, 2709, 2719, 2729, 2740, 2751, 2762, 2773, 2784, 2795, 2805, 2815, 2825, 2835, 
    2845, 2855, 2866, 2877, 2888, 2899, 2910, 2921, 2930, 2942, 2954, 2966, 2974, 2985, 
    2996, 3007, 3017, 3027, 3037, 3047, 3057, 3067, 3075, 3086, 3097, 3108, 3118, 3128, 
    3138, 3148, 3158, 3168, 3179, 3190, 3201, 3212, 3223, 3234, 3244, 3254, 3264, 3274, 
    3284, 3294, 3305, 3316, 3327, 3338, 3349, 3360, 3370, 3383, 3396, 3409, 3418, 3430, 
    3442, 3454, 3465, 3476, 3487, 3498, 3509, 3520, 3529, 3541, 3553, 3565, 3576, 3587, 
    3598, 3609, 3620, 3631, 3642, 3653, 3664, 3675, 3686, 3697, 3706, 3718, 3730, 3742, 
    3753, 3764, 3775, 3786, 3797, 3808, 3818, 3828, 3838, 3848, 3858, 3868, 3878, 3888, 
    3898, 3908, 3918, 3928, 3936, 3947, 3958, 3969, 3979, 3989, 3999, 4009, 4019, 4029, 
    4039, 4049, 4058, 4069, 4080, 4091, 4102, 4111, 4119, 4128, 4136, 4147, 4155, 4164, 
    4172, 4180, 4189, 4197, 4206, 4214, 4225, 4233, 4242, 4250, 4258, 4267, 4277, 4286, 
    4294, 4305, 4315, 4324, 4332, 4340, 4347, 4354, 4361, 4371, 4378, 4385, 4392, 4401, 
    4410, 4419, 4428, 4435, 4442, 4449, 4455, 4463, 4471, 4479, 4487, 4498, 4510, 4522, 
    4534, 4546, 4558, 4570, 4580, 4591, 4602, 4611, 4620, 4629, 4638, 4649, 4658, 4666, 
    4676, 4682, 4691, 4700, 4709, 4715, 4719, 4728, 4737, 4745, 4754, 4763, 4771, 4780, 
    4789, 4799, 4810, 4821, 4832, 4843, 4854, 4865, 4876, 4887, 4898, 4909, 4920, 4931, 
    4944, 4957, 4968, 4979, 4992, 5005, 5016, 5027, 5040, 5053, 5064, 5075, 5086, 5097, 
    5110, 5123, 5134, 5145, 5157, 5169, 5183, 5197, 5209, 5221, 5235, 5249, 5261, 5273, 
    5277, 5282, 5289, 5296, 5303, 5310, 5320, 5330, 5340, 5350, 5357, 5364, 5370, 5376, 
    5383, 5390, 5397, 5404, 5411, 5418, 5424, 5430, 5438, 5446, 5454, 5462, 5472, 5482, 
    5493, 5504, 5516, 5527, 5538, 5549, 5562, 5575, 5588, 5602, 5616, 5630, 5644, 5658, 
    5672, 5683, 5691, 5703, 5711, 5723, 5731, 5743, 5751, 5763, 5772, 5781, 5791, 5801, 
    5812, 5822, 5831, 5841, 5850, 5860, 5872, 5881, 5893, 5905, 5918, 5931, 5944, 5957, 
    5970, 5983, 5993, 6001, 6009, 6017, 6025, 6035, 6045, 6057, 6063, 6073, 6085, 6097, 
    6103, 6114, 6125, 6136, 6147, 6157, 6167, 6177, 6187, 6197, 6206, 6212, 6219, 6227, 
    6235, 6244, 6253, 6260, 6268, 6274, 6283, 6292, 6302, 6312, 6320, 6329, 6337, 6344, 
    6351, 6358, 6365, 6371, 6378, 6385, 6390, 6400, 6409, 6417, 6438, 6459, 6480, 6501, 
    6522, 6543, 6564, 6585, 6606, 6613, 6619, 6626, 6632, 6644, 6652, 6660, 6667, 6674, 
    6682, 6690, 6701, 6711, 6716, 6724, 6731, 6739, 6745, 6753, 6766, 6779, 6792, 6805, 
    6818, 6831, 6844, 6857, 6870, 6883, 6896, 6909, 6920, 6931, 6942, 6953, 6963, 6973, 
    6983, 6993, 7002, 7011, 7022, 7033, 7044, 7055, 7064, 7073, 7082, 7091, 7101, 7111, 
    7121, 7131, 7142, 7152, 7161, 7170, 7179, 7188, 7192, 7201, 7210, 7219, 7228, 7236, 
    7244, 7252, 7260, 7268, 7276, 7283, 7290, 7299, 7308, 7317, 7329, 7341, 7353, 7365, 
    7377, 7389, 7401, 7413, 7425, 7433, 7441, 7450, 7460, 7471, 7480, 7490, 7501, 7509, 
    7517, 7526, 7536, 7547, 7556, 7566, 7577, 7585, 7593, 7602, 7614, 7625, 7634, 7646, 
    7657, 7664, 7671, 7676, 7683, 7690, 7695, 7702, 7709, 7713, 7719, 7725, 7732, 7739, 
    7746, 7753, 7763, 7773, 7783, 7793, 7800, 7807, 7813, 7819, 7830, 7841, 7845, 7850, 
    7855, 7862, 7869, 7877, 7884, 7891, 7898, 7909, 7920, 7931, 7944, 7957, 7970, 7983, 
    7996, 8009, 8022, 8035, 8048, 8057, 8066, 8076, 8086, 8096, 8108, 8120, 8132, 8144, 
    8156, 8168, 8180, 8192, 8204, 8216, 8228, 8240, 8252, 8265, 8278, 8291, 8304, 8319, 
    8334, 8349, 8364, 8379, 8394, 8409, 8424, 8439, 8454, 8469, 8484, 8499, 8514, 8529, 
    8544, 8559, 8574, 8589, 8604, 8621, 8638, 8653, 8668, 8683, 8698, 8715, 8732, 8747, 
    8762, 8779, 8796, 8811, 8826, 8841, 8856, 8873, 8890, 8905, 8920, 8936, 8952, 8968, 
    8984, 9000, 9016, 9032, 9048, 9066, 9084, 9100, 9116, 9134, 9152, 9168, 9184, 9198, 
    9212, 9226, 9240, 9246, 9252, 9257, 9262, 9268, 9274, 9279, 9284, 9290, 9295, 9300, 
    9306, 9312, 9317, 9322, 9328, 9334, 9339, 9344, 9351, 9358, 9365, 9378, 9385, 9391, 
    9397, 9403, 9409, 9415, 9421, 9427, 9433, 9439, 9445, 9450, 9455, 9460, 9465, 9470, 
    9475, 9480, 9488, 9496, 9504, 9512, 9520, 9528, 9539, 9550, 9561, 9571, 9582, 9590, 
    9598, 9606, 9614, 9620, 9626, 9634, 9642, 9650, 9659, 9668, 9677, 9686, 9695, 9704, 
    9713, 9724, 9735, 9744, 9755, 9764, 9771, 9778, 9785, 9795, 9802, 9808, 9816, 9824, 
    9832, 9839, 9847, 9855, 9863, 9869, 9877, 9885, 9893, 9899, 9907, 9915, 9923, 9931, 
    9944, 9958, 9971, 9984, 9998, 10011, 10026, 10040, 10053, 10065, 10077, 10089, 10101, 10113, 
    10124, 10136, 10148, 10160, 10171, 10183, 10196, 10210, 10223, 10236, 10250, 10263, 10278, 10292, 
    10305, 10317, 10329, 10335, 10341, 10347, 10353, 10358, 10364, 10371, 10376, 10382, 10390, 10398, 
    10406, 10414, 10422, 10430, 10438, 10446, 10454, 10459, 10464, 10472, 10480, 10488, 10495, 10506, 
    10519, 10527, 10539, 10547, 10559, 10567, 10579, 10587, 10599, 10607, 10619, 10627, 10639, 10647, 
    10659, 10667, 10679, 10686, 10699, 10707, 10719, 10727, 10739, 10747, 10759, 10767, 10779, 10787, 
    10799, 10807, 10819, 10827, 10839, 10847, 10859, 10874, 10889, 10904, 10919, 10934, 10949, 10964, 
    10979, 10995, 11011, 11027, 11043, 11052, 11062, 11075, 11090, 11109, 11123, 11136, 11149, 11162, 
    11179, 11196, 11210, 11223, 11237, 11253, 11267, 11280, 11293, 11306, 11323, 11340, 11355, 11370, 
    11385, 11400, 11415, 11430, 11442, 11454, 11466, 11478, 11490, 11502, 11515, 11528, 11541, 11554, 
    11568, 11582, 11596, 11610, 11622, 11634, 11646, 11658, 11669, 11680, 11692, 11704, 11716, 11728, 
    11742, 11756, 11770, 11784, 11798, 11812, 11826, 11840, 11854, 11868, 11882, 11896, 11909, 11923, 
    11937, 11951, 11965, 11978, 11991, 12004, 12017, 12030, 12043, 12056, 12069, 12084, 12098, 12112, 
    12125, 12138, 12151, 12164, 12178, 12192, 12202, 12212, 12225, 12238, 12251, 12264, 12276, 12288, 
    12300, 12312, 12324, 12336, 12348, 12360, 12372, 12384, 12396, 12408, 12420, 12432, 12444, 12456, 
    12468, 12480, 12492, 12504, 12516, 12528, 12540, 12552, 12564, 12576, 12588, 12600, 12612, 12624, 
    12637, 12650, 12663, 12676, 12690, 12704, 12718, 12732, 12744, 12756, 12772, 12788, 12804, 12820, 
    12836, 12852, 12868, 12884, 12900, 12916, 12932, 12948, 12959, 12970, 12981, 12998, 13006, 13016, 
    13024, 13032, 13040, 13050, 13058, 13066, 13074, 13082, 13094, 13102, 13110, 13118, 13128, 13136, 
    13144, 13152, 13160, 13170, 13178, 13186, 13194, 13202, 13210, 13218, 13230, 13240, 13250, 13260, 
    13269, 13277, 13285, 13295, 13303, 13311, 13321, 13330, 13338, 13346, 13354, 13362, 13372, 13385, 
    13393, 13401, 13413, 13421, 13429, 13437, 13450, 13462, 13474, 13482, 13489, 13496, 13509, 13517, 
    13524, 13531, 13538, 13551, 13558, 13571, 13582, 13591, 13600, 13609, 13618, 13627, 13636, 13646, 
    13656, 13668, 13680, 13691, 13702, 13711, 13720, 13729, 13738, 13751, 13760, 13773, 13783, 13792, 
    13801, 13810, 13819, 13829, 13838, 13847, 13856, 13865, 13876, 13887, 13898, 13909, 13922, 13932, 
    13946, 13958, 13967, 13980, 13990, 14004, 14014, 14028, 14037, 14049, 14061, 14073, 14086, 14098, 
    14107, 14113, 14119, 14127, 14135, 14143, 14155, 14167, 14178, 14189, 14200, 14211, 14222, 14233, 
    14241, 14249, 14257, 14263, 14274, 14286, 14297, 14309, 14321, 14332, 14344, 14355, 14367, 14379, 
    14390, 14402, 14414, 14425, 14434, 14447, 14456, 14469, 14478, 14487, 14500, 14509, 14522, 14531, 
    14544, 14557, 14573, 14589, 14602, 14615, 14626, 14638, 14649, 14661, 14678, 14695, 14707, 14718, 
    14730, 14741, 14753, 14767, 14779, 14790, 14803, 14815, 14829, 14841, 14852, 14865, 14876, 14887, 
    14898, 14909, 14920, 14931, 14942, 14953, 14964, 14975, 14986, 14993, 15000, 15007, 15014, 15021, 
    15028, 15034, 15040, 15048, 15056, 15064, 15072, 15080, 15092, 15100, 15112, 15120, 15132, 15140, 
    15152, 15161, 15170, 15180, 15190, 15201, 15211, 15220, 15230, 15239, 15249, 15261, 15270, 15282, 
    15294, 15307, 15320, 15333, 15346, 15359, 15372, 15382, 15388, 15395, 15402, 15409, 15416, 15423, 
    15430, 15436, 15442, 15447, 15453, 15459, 15466, 15473, 15480, 15487, 15494, 15501, 15507, 15513, 
    15521, 15528, 15536, 15543, 15550, 15558, 15565, 15572, 15583, 15591, 15598, 15606, 15613, 15620, 
    15628, 15635, 15642, 15653, 15661, 15670, 15678, 15685, 15694, 15702, 15709, 15716, 15727, 15733, 
    15739, 15745, 15751, 15757, 15763, 15773, 15780, 15787, 15794, 15801, 15809, 15817, 15825, 15833, 
    15840, 15847, 15853, 15859, 15865, 15876, 15886, 15897, 15907, 15918, 15928, 15939, 15949, 15960, 
    15970, 15981, 15991, 16002, 16013, 16024, 16035, 16046, 16057, 16068, 16079, 16087, 16095, 16103, 
    16111, 16119, 16127, 16136, 16145, 16154, 16163, 16173, 16183, 16193, 16203, 16211, 16219, 16232, 
    16245, 16257, 16269, 16277, 16285, 16292, 16299, 16307, 16315, 16323, 16331, 16343, 16355, 16366, 
    16377, 16387, 16397, 16407, 16417, 16427, 16437, 16447, 16457, 16470, 16483, 16496, 16509, 16522, 
    16535, 16548, 16561, 16574, 16587, 16599, 16611, 16627, 16643, 16658, 16673, 16683, 16693, 16703, 
    16713, 16723, 16733, 16743, 16753, 16766, 16779, 16792, 16805, 16818, 16831, 16844, 16857, 16870, 
    16883, 16895, 16907, 16923, 16939, 16954, 16969, 16978, 16987, 16996, 17005, 17014, 17023, 17032, 
    17041, 17053, 17064, 17076, 17087, 17100, 17112, 17125, 17137, 17149, 17160, 17172, 17183, 17199, 
    17215, 17227, 17238, 17250, 17261, 17274, 17286, 17299, 17311, 17323, 17334, 17346, 17357, 17366, 
    17375, 17384, 17393, 17402, 17411, 17421, 17431, 17446, 17460, 17475, 17489, 17499, 17509, 17518, 
    17527, 17536, 17545, 17554, 17563, 17572, 17581, 17590, 17599, 17608, 17617, 17626, 17635, 17644, 
    17653, 17662, 17671, 17680, 17689, 17698, 17707, 17716, 17725, 17736, 17747, 17758, 17769, 17780, 
    17791, 17802, 17813, 17824, 17835, 17846, 17857, 17868, 17879, 17890, 17901, 17912, 17923, 17934, 
    17945, 17956, 17967, 17978, 17989, 18000, 18009, 18018, 18032, 18045, 18059, 18072, 18082, 18092, 
    18101, 18110, 18119, 18132, 18141, 18154, 18163, 18172, 18182, 18192, 18199, 18208, 18217, 18224, 
    18233, 18242, 18249, 18258, 18267, 18278, 18289, 18300, 18311, 18322, 18333, 18338, 18344, 18350, 
    18358, 18366, 18374, 18382, 18390, 18398, 18404, 18410, 18422, 18433, 18444, 18455, 18464, 18473, 
    18485, 18496, 18508, 18519, 18528, 18537, 18547, 18557, 18567, 18577, 18589, 18600, 18612, 18623, 
    18635, 18646, 18658, 18669, 18681, 18692, 18704, 18715, 18724, 18732, 18740, 18748, 18756, 18764, 
    18772, 18780, 18788, 18796, 18804, 18812, 18820, 18828, 18836, 18844, 18853, 18861, 18869, 18877, 
    18885, 18893, 18901, 18909, 18917, 18925, 18933, 18941, 18949, 18957, 18965, 18973, 18982, 18991, 
    19000, 19009, 19019, 19029, 19039, 19049, 19057, 19065, 19073, 19081, 19093, 19105, 19117, 19129, 
    19142, 19155, 19167, 19179, 19191, 19203, 19215, 19227, 19240, 19253, 19265, 19277, 19285, 19295, 
    19305, 19315, 19325, 19334, 19342, 19352, 19362, 19372, 19382, 19391, 19399, 19409, 19419, 19425, 
    19432, 19441, 19450, 19459, 19468, 19477, 19486, 19495, 19502, 19509, 19517, 19526, 19534, 19542, 
    19551, 19559, 19567, 19576, 19584, 19592, 19601, 19609, 19617, 19626, 19634, 19642, 19651, 19659, 
    19666, 19674, 19681, 19688, 19696, 19703, 19710, 19721, 19728, 19739, 19746, 19757, 19764, 19775, 
    19783, 19792, 19800, 19808, 19817, 19825, 19833, 19842, 19850, 19858, 19867, 19875, 19883, 19892, 
    19900, 19908, 19917, 19925, 19932, 19940, 19947, 19954, 19962, 19969, 19975, 19981, 19987, 19994, 
    20007, 20017, 20027, 20037, 20047, 20058, 20068, 20078, 20088, 20098, 20102, 20107, 20115, 20124, 
    20132, 20140, 20149, 20157, 20165, 20174, 20182, 20190, 20199, 20207, 20215, 20224, 20232, 20240, 
    20249, 20257, 20264, 20272, 20279, 20286, 20294, 20301, 20309, 20318, 20326, 20334, 20343, 20351, 
    20359, 20368, 20376, 20384, 20393, 20401, 20409, 20418, 20426, 20434, 20443, 20451, 20458, 20466, 
    20473, 20480, 20488, 20495, 20508, 20521, 20534, 20547, 20560, 20573, 20586, 20599, 20603, 20612, 
    20625, 20634, 20647, 20656, 20669, 20678, 20691, 20696, 20704, 20713, 20721, 20729, 20738, 20746, 
    20754, 20763, 20771, 20779, 20788, 20796, 20804, 20813, 20821, 20829, 20838, 20846, 20853, 20861, 
    20868, 20875, 20883, 20890, 20899, 20907, 20916, 20924, 20932, 20941, 20949, 20957, 20969, 20978, 
    20986, 20995, 21003, 21011, 21020, 21028, 21036, 21048, 21057, 21067, 21076, 21084, 21094, 21103, 
    21111, 21119, 21131, 21138, 21145, 21152, 21159, 21166, 21173, 21184, 21191, 21198, 21205, 21211, 
    21218, 21225, 21231, 21237, 21244, 21251, 21261, 21271, 21281, 21290, 21296, 21302, 21308, 21314, 
    21321, 21328, 21334, 21340, 21347, 21354, 21360, 21366, 21373, 21380, 21387, 21394, 21401, 21408, 
    21415, 21422, 21428, 21434, 21440, 21446, 21452, 21458, 21465, 21471, 21479, 21488, 21496, 21504, 
    21513, 21521, 21529, 21538, 21546, 21554, 21563, 21571, 21579, 21588, 21596, 21604, 21613, 21621, 
    21628, 21636, 21643, 21650, 21658, 21665, 21676, 21687, 21698, 21709, 21720, 21731, 21742, 21753, 
    21764, 21775, 21786, 21797, 21805, 21814, 21822, 21830, 21839, 21847, 21855, 21864, 21872, 21880, 
    21889, 21897, 21905, 21914, 21922, 21930, 21939, 21947, 21954, 21962, 21969, 21976, 21984, 21991, 
    22002, 22013, 22024, 22035, 22046, 22057, 22068, 22079, 22090, 22101, 22112, 22123, 22133, 22143, 
    22153, 22163, 22169, 22175, 22184, 22193, 22202, 22210, 22218, 22226, 22234, 22242, 22250, 22258, 
    22266, 22274, 22286, 22294, 22306, 22314, 22326, 22334, 22346, 22354, 22366, 22374, 22386, 22394, 
    22406, 22414, 22426, 22433, 22443, 22453, 22463, 22473, 22477, 22481, 22485, 22493, 22499, 22505, 
    22511, 22516, 22521, 22529, 22537, 22546, 22555, 22564, 22572, 22581, 22590, 22601, 22612, 22623, 
    22633, 22643, 22655, 22665, 22677, 22689, 22696, 22705, 22713, 22722, 22730, 22738, 22747, 22755, 
    22763, 22775, 22784, 22792, 22801, 22809, 22817, 22826, 22834, 22842, 22854, 22863, 22873, 22882, 
    22890, 22900, 22909, 22917, 22925, 22937, 22944, 22951, 22958, 22965, 22972, 22979, 22990, 22998, 
    23006, 23014, 23022, 23032, 23042, 23053, 23064, 23076, 23087, 23098, 23109, 23122, 23135, 23148, 
    23162, 23176, 23190, 23204, 23218, 23232, 23243, 23251, 23263, 23271, 23283, 23291, 23303, 23311, 
    23323, 23332, 23341, 23351, 23361, 23372, 23382, 23391, 23401, 23410, 23420, 23432, 23441, 23453, 
    23465, 23478, 23491, 23504, 23517, 23530, 23543, 23553, 23560, 23568, 23577, 23585, 23595, 23602, 
    23611, 23620, 23629, 23640, 23651, 23664, 23675, 23688, 23698, 23707, 23716, 23725, 23734, 23744, 
    23753, 23762, 23771, 23780, 23790, 23801, 23812, 23821, 23830, 23838, 23846, 23854, 23862, 23870, 
    23881, 23892, 23897, 23903, 23912, 23921, 23930, 23940, 23950, 23960, 23970, 23980, 23989, 23999, 
    24008, 24020, 24032, 24044, 24055, 24066, 24077, 24085, 24096, 24107, 24118, 24129, 24140, 24151, 
    24162, 24173, 24195, 24201, 24207, 24213, 24219, 24226, 24235, 24244, 24253, 24262, 24273, 24284, 
    24295, 24306, 24315, 24327, 24339, 24351, 24363, 24370, 24376, 24383, 24396, 24401, 24408, 24419, 
    24436, 24447, 24453, 24462, 24471, 24480, 24489, 24498, 24507, 24515, 24523, 24532, 24541, 24550, 
    24559, 24568, 24577, 24586, 24595, 24604, 24612, 24620, 24626, 24631, 24640, 24648, 24657, 24665, 
    24673, 24682, 24690, 24698, 24710, 24719, 24727, 24736, 24744, 24752, 24761, 24769, 24777, 24789, 
    24798, 24808, 24817, 24825, 24835, 24844, 24852, 24860, 24872, 24879, 24886, 24893, 24900, 24907, 
    24914, 24925, 24933, 24941, 24949, 0
  };

  const char *Strs =
    "PHI\000INLINEASM\000DBG_LABEL\000EH_LABEL\000GC_LABEL\000KILL\000EXTRAC"
    "T_SUBREG\000INSERT_SUBREG\000IMPLICIT_DEF\000SUBREG_TO_REG\000COPY_TO_R"
    "EGCLASS\000DBG_VALUE\000ABS_F\000ABS_Fp32\000ABS_Fp64\000ABS_Fp80\000AD"
    "C16i16\000ADC16mi\000ADC16mi8\000ADC16mr\000ADC16ri\000ADC16ri8\000ADC1"
    "6rm\000ADC16rr\000ADC16rr_REV\000ADC32i32\000ADC32mi\000ADC32mi8\000ADC"
    "32mr\000ADC32ri\000ADC32ri8\000ADC32rm\000ADC32rr\000ADC32rr_REV\000ADC"
    "64i32\000ADC64mi32\000ADC64mi8\000ADC64mr\000ADC64ri32\000ADC64ri8\000A"
    "DC64rm\000ADC64rr\000ADC64rr_REV\000ADC8i8\000ADC8mi\000ADC8mr\000ADC8r"
    "i\000ADC8rm\000ADC8rr\000ADC8rr_REV\000ADD16i16\000ADD16mi\000ADD16mi8\000"
    "ADD16mr\000ADD16mrmrr\000ADD16ri\000ADD16ri8\000ADD16rm\000ADD16rr\000A"
    "DD32i32\000ADD32mi\000ADD32mi8\000ADD32mr\000ADD32mrmrr\000ADD32ri\000A"
    "DD32ri8\000ADD32rm\000ADD32rr\000ADD64i32\000ADD64mi32\000ADD64mi8\000A"
    "DD64mr\000ADD64mrmrr\000ADD64ri32\000ADD64ri8\000ADD64rm\000ADD64rr\000"
    "ADD8i8\000ADD8mi\000ADD8mr\000ADD8mrmrr\000ADD8ri\000ADD8rm\000ADD8rr\000"
    "ADDPDrm\000ADDPDrr\000ADDPSrm\000ADDPSrr\000ADDSDrm\000ADDSDrm_Int\000A"
    "DDSDrr\000ADDSDrr_Int\000ADDSSrm\000ADDSSrm_Int\000ADDSSrr\000ADDSSrr_I"
    "nt\000ADDSUBPDrm\000ADDSUBPDrr\000ADDSUBPSrm\000ADDSUBPSrr\000ADD_F32m\000"
    "ADD_F64m\000ADD_FI16m\000ADD_FI32m\000ADD_FPrST0\000ADD_FST0r\000ADD_Fp"
    "32\000ADD_Fp32m\000ADD_Fp64\000ADD_Fp64m\000ADD_Fp64m32\000ADD_Fp80\000"
    "ADD_Fp80m32\000ADD_Fp80m64\000ADD_FpI16m32\000ADD_FpI16m64\000ADD_FpI16"
    "m80\000ADD_FpI32m32\000ADD_FpI32m64\000ADD_FpI32m80\000ADD_FrST0\000ADJ"
    "CALLSTACKDOWN32\000ADJCALLSTACKDOWN64\000ADJCALLSTACKUP32\000ADJCALLSTA"
    "CKUP64\000AND16i16\000AND16mi\000AND16mi8\000AND16mr\000AND16ri\000AND1"
    "6ri8\000AND16rm\000AND16rr\000AND16rr_REV\000AND32i32\000AND32mi\000AND"
    "32mi8\000AND32mr\000AND32ri\000AND32ri8\000AND32rm\000AND32rr\000AND32r"
    "r_REV\000AND64i32\000AND64mi32\000AND64mi8\000AND64mr\000AND64ri32\000A"
    "ND64ri8\000AND64rm\000AND64rr\000AND64rr_REV\000AND8i8\000AND8mi\000AND"
    "8mr\000AND8ri\000AND8rm\000AND8rr\000AND8rr_REV\000ANDNPDrm\000ANDNPDrr"
    "\000ANDNPSrm\000ANDNPSrr\000ANDPDrm\000ANDPDrr\000ANDPSrm\000ANDPSrr\000"
    "ATOMADD6432\000ATOMAND16\000ATOMAND32\000ATOMAND64\000ATOMAND6432\000AT"
    "OMAND8\000ATOMMAX16\000ATOMMAX32\000ATOMMAX64\000ATOMMIN16\000ATOMMIN32"
    "\000ATOMMIN64\000ATOMNAND16\000ATOMNAND32\000ATOMNAND64\000ATOMNAND6432"
    "\000ATOMNAND8\000ATOMOR16\000ATOMOR32\000ATOMOR64\000ATOMOR6432\000ATOM"
    "OR8\000ATOMSUB6432\000ATOMSWAP6432\000ATOMUMAX16\000ATOMUMAX32\000ATOMU"
    "MAX64\000ATOMUMIN16\000ATOMUMIN32\000ATOMUMIN64\000ATOMXOR16\000ATOMXOR"
    "32\000ATOMXOR64\000ATOMXOR6432\000ATOMXOR8\000BLENDPDrmi\000BLENDPDrri\000"
    "BLENDPSrmi\000BLENDPSrri\000BLENDVPDrm0\000BLENDVPDrr0\000BLENDVPSrm0\000"
    "BLENDVPSrr0\000BSF16rm\000BSF16rr\000BSF32rm\000BSF32rr\000BSF64rm\000B"
    "SF64rr\000BSR16rm\000BSR16rr\000BSR32rm\000BSR32rr\000BSR64rm\000BSR64r"
    "r\000BSWAP32r\000BSWAP64r\000BT16mi8\000BT16mr\000BT16ri8\000BT16rr\000"
    "BT32mi8\000BT32mr\000BT32ri8\000BT32rr\000BT64mi8\000BT64mr\000BT64ri8\000"
    "BT64rr\000BTC16mi8\000BTC16mr\000BTC16ri8\000BTC16rr\000BTC32mi8\000BTC"
    "32mr\000BTC32ri8\000BTC32rr\000BTC64mi8\000BTC64mr\000BTC64ri8\000BTC64"
    "rr\000BTR16mi8\000BTR16mr\000BTR16ri8\000BTR16rr\000BTR32mi8\000BTR32mr"
    "\000BTR32ri8\000BTR32rr\000BTR64mi8\000BTR64mr\000BTR64ri8\000BTR64rr\000"
    "BTS16mi8\000BTS16mr\000BTS16ri8\000BTS16rr\000BTS32mi8\000BTS32mr\000BT"
    "S32ri8\000BTS32rr\000BTS64mi8\000BTS64mr\000BTS64ri8\000BTS64rr\000CALL"
    "32m\000CALL32r\000CALL64m\000CALL64pcrel32\000CALL64r\000CALLpcrel32\000"
    "CBW\000CDQ\000CDQE\000CHS_F\000CHS_Fp32\000CHS_Fp64\000CHS_Fp80\000CLC\000"
    "CLD\000CLFLUSH\000CLI\000CLTS\000CMC\000CMOVA16rm\000CMOVA16rr\000CMOVA"
    "32rm\000CMOVA32rr\000CMOVA64rm\000CMOVA64rr\000CMOVAE16rm\000CMOVAE16rr"
    "\000CMOVAE32rm\000CMOVAE32rr\000CMOVAE64rm\000CMOVAE64rr\000CMOVB16rm\000"
    "CMOVB16rr\000CMOVB32rm\000CMOVB32rr\000CMOVB64rm\000CMOVB64rr\000CMOVBE"
    "16rm\000CMOVBE16rr\000CMOVBE32rm\000CMOVBE32rr\000CMOVBE64rm\000CMOVBE6"
    "4rr\000CMOVBE_F\000CMOVBE_Fp32\000CMOVBE_Fp64\000CMOVBE_Fp80\000CMOVB_F"
    "\000CMOVB_Fp32\000CMOVB_Fp64\000CMOVB_Fp80\000CMOVE16rm\000CMOVE16rr\000"
    "CMOVE32rm\000CMOVE32rr\000CMOVE64rm\000CMOVE64rr\000CMOVE_F\000CMOVE_Fp"
    "32\000CMOVE_Fp64\000CMOVE_Fp80\000CMOVG16rm\000CMOVG16rr\000CMOVG32rm\000"
    "CMOVG32rr\000CMOVG64rm\000CMOVG64rr\000CMOVGE16rm\000CMOVGE16rr\000CMOV"
    "GE32rm\000CMOVGE32rr\000CMOVGE64rm\000CMOVGE64rr\000CMOVL16rm\000CMOVL1"
    "6rr\000CMOVL32rm\000CMOVL32rr\000CMOVL64rm\000CMOVL64rr\000CMOVLE16rm\000"
    "CMOVLE16rr\000CMOVLE32rm\000CMOVLE32rr\000CMOVLE64rm\000CMOVLE64rr\000C"
    "MOVNBE_F\000CMOVNBE_Fp32\000CMOVNBE_Fp64\000CMOVNBE_Fp80\000CMOVNB_F\000"
    "CMOVNB_Fp32\000CMOVNB_Fp64\000CMOVNB_Fp80\000CMOVNE16rm\000CMOVNE16rr\000"
    "CMOVNE32rm\000CMOVNE32rr\000CMOVNE64rm\000CMOVNE64rr\000CMOVNE_F\000CMO"
    "VNE_Fp32\000CMOVNE_Fp64\000CMOVNE_Fp80\000CMOVNO16rm\000CMOVNO16rr\000C"
    "MOVNO32rm\000CMOVNO32rr\000CMOVNO64rm\000CMOVNO64rr\000CMOVNP16rm\000CM"
    "OVNP16rr\000CMOVNP32rm\000CMOVNP32rr\000CMOVNP64rm\000CMOVNP64rr\000CMO"
    "VNP_F\000CMOVNP_Fp32\000CMOVNP_Fp64\000CMOVNP_Fp80\000CMOVNS16rm\000CMO"
    "VNS16rr\000CMOVNS32rm\000CMOVNS32rr\000CMOVNS64rm\000CMOVNS64rr\000CMOV"
    "O16rm\000CMOVO16rr\000CMOVO32rm\000CMOVO32rr\000CMOVO64rm\000CMOVO64rr\000"
    "CMOVP16rm\000CMOVP16rr\000CMOVP32rm\000CMOVP32rr\000CMOVP64rm\000CMOVP6"
    "4rr\000CMOVP_F\000CMOVP_Fp32\000CMOVP_Fp64\000CMOVP_Fp80\000CMOVS16rm\000"
    "CMOVS16rr\000CMOVS32rm\000CMOVS32rr\000CMOVS64rm\000CMOVS64rr\000CMOV_F"
    "R32\000CMOV_FR64\000CMOV_GR8\000CMOV_V1I64\000CMOV_V2F64\000CMOV_V2I64\000"
    "CMOV_V4F32\000CMP16i16\000CMP16mi\000CMP16mi8\000CMP16mr\000CMP16mrmrr\000"
    "CMP16ri\000CMP16ri8\000CMP16rm\000CMP16rr\000CMP32i32\000CMP32mi\000CMP"
    "32mi8\000CMP32mr\000CMP32mrmrr\000CMP32ri\000CMP32ri8\000CMP32rm\000CMP"
    "32rr\000CMP64i32\000CMP64mi32\000CMP64mi8\000CMP64mr\000CMP64mrmrr\000C"
    "MP64ri32\000CMP64ri8\000CMP64rm\000CMP64rr\000CMP8i8\000CMP8mi\000CMP8m"
    "r\000CMP8mrmrr\000CMP8ri\000CMP8rm\000CMP8rr\000CMPPDrmi\000CMPPDrri\000"
    "CMPPSrmi\000CMPPSrri\000CMPS16\000CMPS32\000CMPS64\000CMPS8\000CMPSDrm\000"
    "CMPSDrr\000CMPSSrm\000CMPSSrr\000CMPXCHG16B\000CMPXCHG16rm\000CMPXCHG16"
    "rr\000CMPXCHG32rm\000CMPXCHG32rr\000CMPXCHG64rm\000CMPXCHG64rr\000CMPXC"
    "HG8B\000CMPXCHG8rm\000CMPXCHG8rr\000COMISDrm\000COMISDrr\000COMISSrm\000"
    "COMISSrr\000COMP_FST0r\000COM_FIPr\000COM_FIr\000COM_FST0r\000COS_F\000"
    "COS_Fp32\000COS_Fp64\000COS_Fp80\000CPUID\000CQO\000CRC32m16\000CRC32m3"
    "2\000CRC32m8\000CRC32r16\000CRC32r32\000CRC32r8\000CRC64m64\000CRC64r64"
    "\000CS_PREFIX\000CVTDQ2PDrm\000CVTDQ2PDrr\000CVTDQ2PSrm\000CVTDQ2PSrr\000"
    "CVTPD2DQrm\000CVTPD2DQrr\000CVTPD2PSrm\000CVTPD2PSrr\000CVTPS2DQrm\000C"
    "VTPS2DQrr\000CVTPS2PDrm\000CVTPS2PDrr\000CVTSD2SI64rm\000CVTSD2SI64rr\000"
    "CVTSD2SSrm\000CVTSD2SSrr\000CVTSI2SD64rm\000CVTSI2SD64rr\000CVTSI2SDrm\000"
    "CVTSI2SDrr\000CVTSI2SS64rm\000CVTSI2SS64rr\000CVTSI2SSrm\000CVTSI2SSrr\000"
    "CVTSS2SDrm\000CVTSS2SDrr\000CVTSS2SI64rm\000CVTSS2SI64rr\000CVTSS2SIrm\000"
    "CVTSS2SIrr\000CVTTPS2DQrm\000CVTTPS2DQrr\000CVTTSD2SI64rm\000CVTTSD2SI6"
    "4rr\000CVTTSD2SIrm\000CVTTSD2SIrr\000CVTTSS2SI64rm\000CVTTSS2SI64rr\000"
    "CVTTSS2SIrm\000CVTTSS2SIrr\000CWD\000CWDE\000DEC16m\000DEC16r\000DEC32m"
    "\000DEC32r\000DEC64_16m\000DEC64_16r\000DEC64_32m\000DEC64_32r\000DEC64"
    "m\000DEC64r\000DEC8m\000DEC8r\000DIV16m\000DIV16r\000DIV32m\000DIV32r\000"
    "DIV64m\000DIV64r\000DIV8m\000DIV8r\000DIVPDrm\000DIVPDrr\000DIVPSrm\000"
    "DIVPSrr\000DIVR_F32m\000DIVR_F64m\000DIVR_FI16m\000DIVR_FI32m\000DIVR_F"
    "PrST0\000DIVR_FST0r\000DIVR_Fp32m\000DIVR_Fp64m\000DIVR_Fp64m32\000DIVR"
    "_Fp80m32\000DIVR_Fp80m64\000DIVR_FpI16m32\000DIVR_FpI16m64\000DIVR_FpI1"
    "6m80\000DIVR_FpI32m32\000DIVR_FpI32m64\000DIVR_FpI32m80\000DIVR_FrST0\000"
    "DIVSDrm\000DIVSDrm_Int\000DIVSDrr\000DIVSDrr_Int\000DIVSSrm\000DIVSSrm_"
    "Int\000DIVSSrr\000DIVSSrr_Int\000DIV_F32m\000DIV_F64m\000DIV_FI16m\000D"
    "IV_FI32m\000DIV_FPrST0\000DIV_FST0r\000DIV_Fp32\000DIV_Fp32m\000DIV_Fp6"
    "4\000DIV_Fp64m\000DIV_Fp64m32\000DIV_Fp80\000DIV_Fp80m32\000DIV_Fp80m64"
    "\000DIV_FpI16m32\000DIV_FpI16m64\000DIV_FpI16m80\000DIV_FpI32m32\000DIV"
    "_FpI32m64\000DIV_FpI32m80\000DIV_FrST0\000DPPDrmi\000DPPDrri\000DPPSrmi"
    "\000DPPSrri\000DS_PREFIX\000EH_RETURN\000EH_RETURN64\000ENTER\000ES_PRE"
    "FIX\000EXTRACTPSmr\000EXTRACTPSrr\000F2XM1\000FARCALL16i\000FARCALL16m\000"
    "FARCALL32i\000FARCALL32m\000FARCALL64\000FARJMP16i\000FARJMP16m\000FARJ"
    "MP32i\000FARJMP32m\000FARJMP64\000FBLDm\000FBSTPm\000FCOM32m\000FCOM64m"
    "\000FCOMP32m\000FCOMP64m\000FCOMPP\000FDECSTP\000FFREE\000FICOM16m\000F"
    "ICOM32m\000FICOMP16m\000FICOMP32m\000FINCSTP\000FLDCW16m\000FLDENVm\000"
    "FLDL2E\000FLDL2T\000FLDLG2\000FLDLN2\000FLDPI\000FNCLEX\000FNINIT\000FN"
    "OP\000FNSTCW16m\000FNSTSW8r\000FNSTSWm\000FP32_TO_INT16_IN_MEM\000FP32_"
    "TO_INT32_IN_MEM\000FP32_TO_INT64_IN_MEM\000FP64_TO_INT16_IN_MEM\000FP64"
    "_TO_INT32_IN_MEM\000FP64_TO_INT64_IN_MEM\000FP80_TO_INT16_IN_MEM\000FP8"
    "0_TO_INT32_IN_MEM\000FP80_TO_INT64_IN_MEM\000FPATAN\000FPREM\000FPREM1\000"
    "FPTAN\000FP_REG_KILL\000FRNDINT\000FRSTORm\000FSAVEm\000FSCALE\000FSINC"
    "OS\000FSTENVm\000FS_MOV32rm\000FS_PREFIX\000FXAM\000FXRSTOR\000FXSAVE\000"
    "FXTRACT\000FYL2X\000FYL2XP1\000FpGET_ST0_32\000FpGET_ST0_64\000FpGET_ST"
    "0_80\000FpGET_ST1_32\000FpGET_ST1_64\000FpGET_ST1_80\000FpSET_ST0_32\000"
    "FpSET_ST0_64\000FpSET_ST0_80\000FpSET_ST1_32\000FpSET_ST1_64\000FpSET_S"
    "T1_80\000FsANDNPDrm\000FsANDNPDrr\000FsANDNPSrm\000FsANDNPSrr\000FsANDP"
    "Drm\000FsANDPDrr\000FsANDPSrm\000FsANDPSrr\000FsFLD0SD\000FsFLD0SS\000F"
    "sMOVAPDrm\000FsMOVAPDrr\000FsMOVAPSrm\000FsMOVAPSrr\000FsORPDrm\000FsOR"
    "PDrr\000FsORPSrm\000FsORPSrr\000FsXORPDrm\000FsXORPDrr\000FsXORPSrm\000"
    "FsXORPSrr\000GS_MOV32rm\000GS_PREFIX\000HADDPDrm\000HADDPDrr\000HADDPSr"
    "m\000HADDPSrr\000HLT\000HSUBPDrm\000HSUBPDrr\000HSUBPSrm\000HSUBPSrr\000"
    "IDIV16m\000IDIV16r\000IDIV32m\000IDIV32r\000IDIV64m\000IDIV64r\000IDIV8"
    "m\000IDIV8r\000ILD_F16m\000ILD_F32m\000ILD_F64m\000ILD_Fp16m32\000ILD_F"
    "p16m64\000ILD_Fp16m80\000ILD_Fp32m32\000ILD_Fp32m64\000ILD_Fp32m80\000I"
    "LD_Fp64m32\000ILD_Fp64m64\000ILD_Fp64m80\000IMUL16m\000IMUL16r\000IMUL1"
    "6rm\000IMUL16rmi\000IMUL16rmi8\000IMUL16rr\000IMUL16rri\000IMUL16rri8\000"
    "IMUL32m\000IMUL32r\000IMUL32rm\000IMUL32rmi\000IMUL32rmi8\000IMUL32rr\000"
    "IMUL32rri\000IMUL32rri8\000IMUL64m\000IMUL64r\000IMUL64rm\000IMUL64rmi3"
    "2\000IMUL64rmi8\000IMUL64rr\000IMUL64rri32\000IMUL64rri8\000IMUL8m\000I"
    "MUL8r\000IN16\000IN16ri\000IN16rr\000IN32\000IN32ri\000IN32rr\000IN8\000"
    "IN8ri\000IN8rr\000INC16m\000INC16r\000INC32m\000INC32r\000INC64_16m\000"
    "INC64_16r\000INC64_32m\000INC64_32r\000INC64m\000INC64r\000INC8m\000INC"
    "8r\000INSERTPSrm\000INSERTPSrr\000INT\000INT3\000INVD\000INVEPT\000INVL"
    "PG\000INVVPID\000IRET16\000IRET32\000IRET64\000ISTT_FP16m\000ISTT_FP32m"
    "\000ISTT_FP64m\000ISTT_Fp16m32\000ISTT_Fp16m64\000ISTT_Fp16m80\000ISTT_"
    "Fp32m32\000ISTT_Fp32m64\000ISTT_Fp32m80\000ISTT_Fp64m32\000ISTT_Fp64m64"
    "\000ISTT_Fp64m80\000IST_F16m\000IST_F32m\000IST_FP16m\000IST_FP32m\000I"
    "ST_FP64m\000IST_Fp16m32\000IST_Fp16m64\000IST_Fp16m80\000IST_Fp32m32\000"
    "IST_Fp32m64\000IST_Fp32m80\000IST_Fp64m32\000IST_Fp64m64\000IST_Fp64m80"
    "\000Int_CMPSDrm\000Int_CMPSDrr\000Int_CMPSSrm\000Int_CMPSSrr\000Int_COM"
    "ISDrm\000Int_COMISDrr\000Int_COMISSrm\000Int_COMISSrr\000Int_CVTDQ2PDrm"
    "\000Int_CVTDQ2PDrr\000Int_CVTDQ2PSrm\000Int_CVTDQ2PSrr\000Int_CVTPD2DQr"
    "m\000Int_CVTPD2DQrr\000Int_CVTPD2PIrm\000Int_CVTPD2PIrr\000Int_CVTPD2PS"
    "rm\000Int_CVTPD2PSrr\000Int_CVTPI2PDrm\000Int_CVTPI2PDrr\000Int_CVTPI2P"
    "Srm\000Int_CVTPI2PSrr\000Int_CVTPS2DQrm\000Int_CVTPS2DQrr\000Int_CVTPS2"
    "PDrm\000Int_CVTPS2PDrr\000Int_CVTPS2PIrm\000Int_CVTPS2PIrr\000Int_CVTSD"
    "2SI64rm\000Int_CVTSD2SI64rr\000Int_CVTSD2SIrm\000Int_CVTSD2SIrr\000Int_"
    "CVTSD2SSrm\000Int_CVTSD2SSrr\000Int_CVTSI2SD64rm\000Int_CVTSI2SD64rr\000"
    "Int_CVTSI2SDrm\000Int_CVTSI2SDrr\000Int_CVTSI2SS64rm\000Int_CVTSI2SS64r"
    "r\000Int_CVTSI2SSrm\000Int_CVTSI2SSrr\000Int_CVTSS2SDrm\000Int_CVTSS2SD"
    "rr\000Int_CVTSS2SI64rm\000Int_CVTSS2SI64rr\000Int_CVTSS2SIrm\000Int_CVT"
    "SS2SIrr\000Int_CVTTPD2DQrm\000Int_CVTTPD2DQrr\000Int_CVTTPD2PIrm\000Int"
    "_CVTTPD2PIrr\000Int_CVTTPS2DQrm\000Int_CVTTPS2DQrr\000Int_CVTTPS2PIrm\000"
    "Int_CVTTPS2PIrr\000Int_CVTTSD2SI64rm\000Int_CVTTSD2SI64rr\000Int_CVTTSD"
    "2SIrm\000Int_CVTTSD2SIrr\000Int_CVTTSS2SI64rm\000Int_CVTTSS2SI64rr\000I"
    "nt_CVTTSS2SIrm\000Int_CVTTSS2SIrr\000Int_UCOMISDrm\000Int_UCOMISDrr\000"
    "Int_UCOMISSrm\000Int_UCOMISSrr\000JAE_1\000JAE_4\000JA_1\000JA_4\000JBE"
    "_1\000JBE_4\000JB_1\000JB_4\000JCXZ8\000JE_1\000JE_4\000JGE_1\000JGE_4\000"
    "JG_1\000JG_4\000JLE_1\000JLE_4\000JL_1\000JL_4\000JMP32m\000JMP32r\000J"
    "MP64m\000JMP64pcrel32\000JMP64r\000JMP_1\000JMP_4\000JNE_1\000JNE_4\000"
    "JNO_1\000JNO_4\000JNP_1\000JNP_4\000JNS_1\000JNS_4\000JO_1\000JO_4\000J"
    "P_1\000JP_4\000JS_1\000JS_4\000LAHF\000LAR16rm\000LAR16rr\000LAR32rm\000"
    "LAR32rr\000LAR64rm\000LAR64rr\000LCMPXCHG16\000LCMPXCHG32\000LCMPXCHG64"
    "\000LCMPXCHG8\000LCMPXCHG8B\000LDDQUrm\000LDMXCSR\000LDS16rm\000LDS32rm"
    "\000LD_F0\000LD_F1\000LD_F32m\000LD_F64m\000LD_F80m\000LD_Fp032\000LD_F"
    "p064\000LD_Fp080\000LD_Fp132\000LD_Fp164\000LD_Fp180\000LD_Fp32m\000LD_"
    "Fp32m64\000LD_Fp32m80\000LD_Fp64m\000LD_Fp64m80\000LD_Fp80m\000LD_Frr\000"
    "LEA16r\000LEA32r\000LEA64_32r\000LEA64r\000LEAVE\000LEAVE64\000LES16rm\000"
    "LES32rm\000LFENCE\000LFS16rm\000LFS32rm\000LFS64rm\000LGDTm\000LGS16rm\000"
    "LGS32rm\000LGS64rm\000LIDTm\000LLDT16m\000LLDT16r\000LMSW16m\000LMSW16r"
    "\000LOCK_ADD16mi\000LOCK_ADD16mi8\000LOCK_ADD16mr\000LOCK_ADD32mi\000LO"
    "CK_ADD32mi8\000LOCK_ADD32mr\000LOCK_ADD64mi32\000LOCK_ADD64mi8\000LOCK_"
    "ADD64mr\000LOCK_ADD8mi\000LOCK_ADD8mr\000LOCK_DEC16m\000LOCK_DEC32m\000"
    "LOCK_DEC64m\000LOCK_DEC8m\000LOCK_INC16m\000LOCK_INC32m\000LOCK_INC64m\000"
    "LOCK_INC8m\000LOCK_PREFIX\000LOCK_SUB16mi\000LOCK_SUB16mi8\000LOCK_SUB1"
    "6mr\000LOCK_SUB32mi\000LOCK_SUB32mi8\000LOCK_SUB32mr\000LOCK_SUB64mi32\000"
    "LOCK_SUB64mi8\000LOCK_SUB64mr\000LOCK_SUB8mi\000LOCK_SUB8mr\000LODSB\000"
    "LODSD\000LODSQ\000LODSW\000LOOP\000LOOPE\000LOOPNE\000LRET\000LRETI\000"
    "LSL16rm\000LSL16rr\000LSL32rm\000LSL32rr\000LSL64rm\000LSL64rr\000LSS16"
    "rm\000LSS32rm\000LSS64rm\000LTRm\000LTRr\000LXADD16\000LXADD32\000LXADD"
    "64\000LXADD8\000MASKMOVDQU\000MASKMOVDQU64\000MAXPDrm\000MAXPDrm_Int\000"
    "MAXPDrr\000MAXPDrr_Int\000MAXPSrm\000MAXPSrm_Int\000MAXPSrr\000MAXPSrr_"
    "Int\000MAXSDrm\000MAXSDrm_Int\000MAXSDrr\000MAXSDrr_Int\000MAXSSrm\000M"
    "AXSSrm_Int\000MAXSSrr\000MAXSSrr_Int\000MFENCE\000MINGW_ALLOCA\000MINPD"
    "rm\000MINPDrm_Int\000MINPDrr\000MINPDrr_Int\000MINPSrm\000MINPSrm_Int\000"
    "MINPSrr\000MINPSrr_Int\000MINSDrm\000MINSDrm_Int\000MINSDrr\000MINSDrr_"
    "Int\000MINSSrm\000MINSSrm_Int\000MINSSrr\000MINSSrr_Int\000MMX_CVTPD2PI"
    "rm\000MMX_CVTPD2PIrr\000MMX_CVTPI2PDrm\000MMX_CVTPI2PDrr\000MMX_CVTPI2P"
    "Srm\000MMX_CVTPI2PSrr\000MMX_CVTPS2PIrm\000MMX_CVTPS2PIrr\000MMX_CVTTPD"
    "2PIrm\000MMX_CVTTPD2PIrr\000MMX_CVTTPS2PIrm\000MMX_CVTTPS2PIrr\000MMX_E"
    "MMS\000MMX_FEMMS\000MMX_MASKMOVQ\000MMX_MASKMOVQ64\000MMX_MOVD64from64r"
    "r\000MMX_MOVD64grr\000MMX_MOVD64mr\000MMX_MOVD64rm\000MMX_MOVD64rr\000M"
    "MX_MOVD64rrv164\000MMX_MOVD64to64rr\000MMX_MOVDQ2Qrr\000MMX_MOVNTQmr\000"
    "MMX_MOVQ2DQrr\000MMX_MOVQ2FR64rr\000MMX_MOVQ64gmr\000MMX_MOVQ64mr\000MM"
    "X_MOVQ64rm\000MMX_MOVQ64rr\000MMX_MOVZDI2PDIrm\000MMX_MOVZDI2PDIrr\000M"
    "MX_PACKSSDWrm\000MMX_PACKSSDWrr\000MMX_PACKSSWBrm\000MMX_PACKSSWBrr\000"
    "MMX_PACKUSWBrm\000MMX_PACKUSWBrr\000MMX_PADDBrm\000MMX_PADDBrr\000MMX_P"
    "ADDDrm\000MMX_PADDDrr\000MMX_PADDQrm\000MMX_PADDQrr\000MMX_PADDSBrm\000"
    "MMX_PADDSBrr\000MMX_PADDSWrm\000MMX_PADDSWrr\000MMX_PADDUSBrm\000MMX_PA"
    "DDUSBrr\000MMX_PADDUSWrm\000MMX_PADDUSWrr\000MMX_PADDWrm\000MMX_PADDWrr"
    "\000MMX_PANDNrm\000MMX_PANDNrr\000MMX_PANDrm\000MMX_PANDrr\000MMX_PAVGB"
    "rm\000MMX_PAVGBrr\000MMX_PAVGWrm\000MMX_PAVGWrr\000MMX_PCMPEQBrm\000MMX"
    "_PCMPEQBrr\000MMX_PCMPEQDrm\000MMX_PCMPEQDrr\000MMX_PCMPEQWrm\000MMX_PC"
    "MPEQWrr\000MMX_PCMPGTBrm\000MMX_PCMPGTBrr\000MMX_PCMPGTDrm\000MMX_PCMPG"
    "TDrr\000MMX_PCMPGTWrm\000MMX_PCMPGTWrr\000MMX_PEXTRWri\000MMX_PINSRWrmi"
    "\000MMX_PINSRWrri\000MMX_PMADDWDrm\000MMX_PMADDWDrr\000MMX_PMAXSWrm\000"
    "MMX_PMAXSWrr\000MMX_PMAXUBrm\000MMX_PMAXUBrr\000MMX_PMINSWrm\000MMX_PMI"
    "NSWrr\000MMX_PMINUBrm\000MMX_PMINUBrr\000MMX_PMOVMSKBrr\000MMX_PMULHUWr"
    "m\000MMX_PMULHUWrr\000MMX_PMULHWrm\000MMX_PMULHWrr\000MMX_PMULLWrm\000M"
    "MX_PMULLWrr\000MMX_PMULUDQrm\000MMX_PMULUDQrr\000MMX_PORrm\000MMX_PORrr"
    "\000MMX_PSADBWrm\000MMX_PSADBWrr\000MMX_PSHUFWmi\000MMX_PSHUFWri\000MMX"
    "_PSLLDri\000MMX_PSLLDrm\000MMX_PSLLDrr\000MMX_PSLLQri\000MMX_PSLLQrm\000"
    "MMX_PSLLQrr\000MMX_PSLLWri\000MMX_PSLLWrm\000MMX_PSLLWrr\000MMX_PSRADri"
    "\000MMX_PSRADrm\000MMX_PSRADrr\000MMX_PSRAWri\000MMX_PSRAWrm\000MMX_PSR"
    "AWrr\000MMX_PSRLDri\000MMX_PSRLDrm\000MMX_PSRLDrr\000MMX_PSRLQri\000MMX"
    "_PSRLQrm\000MMX_PSRLQrr\000MMX_PSRLWri\000MMX_PSRLWrm\000MMX_PSRLWrr\000"
    "MMX_PSUBBrm\000MMX_PSUBBrr\000MMX_PSUBDrm\000MMX_PSUBDrr\000MMX_PSUBQrm"
    "\000MMX_PSUBQrr\000MMX_PSUBSBrm\000MMX_PSUBSBrr\000MMX_PSUBSWrm\000MMX_"
    "PSUBSWrr\000MMX_PSUBUSBrm\000MMX_PSUBUSBrr\000MMX_PSUBUSWrm\000MMX_PSUB"
    "USWrr\000MMX_PSUBWrm\000MMX_PSUBWrr\000MMX_PUNPCKHBWrm\000MMX_PUNPCKHBW"
    "rr\000MMX_PUNPCKHDQrm\000MMX_PUNPCKHDQrr\000MMX_PUNPCKHWDrm\000MMX_PUNP"
    "CKHWDrr\000MMX_PUNPCKLBWrm\000MMX_PUNPCKLBWrr\000MMX_PUNPCKLDQrm\000MMX"
    "_PUNPCKLDQrr\000MMX_PUNPCKLWDrm\000MMX_PUNPCKLWDrr\000MMX_PXORrm\000MMX"
    "_PXORrr\000MMX_V_SET0\000MMX_V_SETALLONES\000MONITOR\000MOV16ao16\000MO"
    "V16mi\000MOV16mr\000MOV16ms\000MOV16o16a\000MOV16r0\000MOV16ri\000MOV16"
    "rm\000MOV16rr\000MOV16rr_REV\000MOV16rs\000MOV16sm\000MOV16sr\000MOV32a"
    "o32\000MOV32cr\000MOV32dr\000MOV32mi\000MOV32mr\000MOV32o32a\000MOV32r0"
    "\000MOV32rc\000MOV32rd\000MOV32ri\000MOV32rm\000MOV32rr\000MOV32rr_REV\000"
    "MOV64FSrm\000MOV64GSrm\000MOV64ao64\000MOV64ao8\000MOV64cr\000MOV64dr\000"
    "MOV64mi32\000MOV64mr\000MOV64ms\000MOV64o64a\000MOV64o8a\000MOV64r0\000"
    "MOV64rc\000MOV64rd\000MOV64ri\000MOV64ri32\000MOV64ri64i32\000MOV64rm\000"
    "MOV64rr\000MOV64rr_REV\000MOV64rs\000MOV64sm\000MOV64sr\000MOV64toPQIrr"
    "\000MOV64toSDrm\000MOV64toSDrr\000MOV8ao8\000MOV8mi\000MOV8mr\000MOV8mr"
    "_NOREX\000MOV8o8a\000MOV8r0\000MOV8ri\000MOV8rm\000MOV8rm_NOREX\000MOV8"
    "rr\000MOV8rr_NOREX\000MOV8rr_REV\000MOVAPDmr\000MOVAPDrm\000MOVAPDrr\000"
    "MOVAPSmr\000MOVAPSrm\000MOVAPSrr\000MOVDDUPrm\000MOVDDUPrr\000MOVDI2PDI"
    "rm\000MOVDI2PDIrr\000MOVDI2SSrm\000MOVDI2SSrr\000MOVDQAmr\000MOVDQArm\000"
    "MOVDQArr\000MOVDQUmr\000MOVDQUmr_Int\000MOVDQUrm\000MOVDQUrm_Int\000MOV"
    "HLPSrr\000MOVHPDmr\000MOVHPDrm\000MOVHPSmr\000MOVHPSrm\000MOVLHPSrr\000"
    "MOVLPDmr\000MOVLPDrm\000MOVLPSmr\000MOVLPSrm\000MOVLQ128mr\000MOVMSKPDr"
    "r\000MOVMSKPSrr\000MOVNTDQArm\000MOVNTDQ_64mr\000MOVNTDQmr\000MOVNTDQmr"
    "_Int\000MOVNTI_64mr\000MOVNTImr\000MOVNTImr_Int\000MOVNTPDmr\000MOVNTPD"
    "mr_Int\000MOVNTPSmr\000MOVNTPSmr_Int\000MOVPC32r\000MOVPDI2DImr\000MOVP"
    "DI2DIrr\000MOVPQI2QImr\000MOVPQIto64rr\000MOVQI2PQIrm\000MOVQxrxr\000MO"
    "VSB\000MOVSD\000MOVSDmr\000MOVSDrm\000MOVSDrr\000MOVSDto64mr\000MOVSDto"
    "64rr\000MOVSHDUPrm\000MOVSHDUPrr\000MOVSLDUPrm\000MOVSLDUPrr\000MOVSS2D"
    "Imr\000MOVSS2DIrr\000MOVSSmr\000MOVSSrm\000MOVSSrr\000MOVSW\000MOVSX16r"
    "m8\000MOVSX16rm8W\000MOVSX16rr8\000MOVSX16rr8W\000MOVSX32rm16\000MOVSX3"
    "2rm8\000MOVSX32rr16\000MOVSX32rr8\000MOVSX64rm16\000MOVSX64rm32\000MOVS"
    "X64rm8\000MOVSX64rr16\000MOVSX64rr32\000MOVSX64rr8\000MOVUPDmr\000MOVUP"
    "Dmr_Int\000MOVUPDrm\000MOVUPDrm_Int\000MOVUPDrr\000MOVUPSmr\000MOVUPSmr"
    "_Int\000MOVUPSrm\000MOVUPSrm_Int\000MOVUPSrr\000MOVZDI2PDIrm\000MOVZDI2"
    "PDIrr\000MOVZPQILo2PQIrm\000MOVZPQILo2PQIrr\000MOVZQI2PQIrm\000MOVZQI2P"
    "QIrr\000MOVZX16rm8\000MOVZX16rm8W\000MOVZX16rr8\000MOVZX16rr8W\000MOVZX"
    "32_NOREXrm8\000MOVZX32_NOREXrr8\000MOVZX32rm16\000MOVZX32rm8\000MOVZX32"
    "rr16\000MOVZX32rr8\000MOVZX64rm16\000MOVZX64rm16_Q\000MOVZX64rm32\000MO"
    "VZX64rm8\000MOVZX64rm8_Q\000MOVZX64rr16\000MOVZX64rr16_Q\000MOVZX64rr32"
    "\000MOVZX64rr8\000MOVZX64rr8_Q\000MOV_Fp3232\000MOV_Fp3264\000MOV_Fp328"
    "0\000MOV_Fp6432\000MOV_Fp6464\000MOV_Fp6480\000MOV_Fp8032\000MOV_Fp8064"
    "\000MOV_Fp8080\000MPSADBWrmi\000MPSADBWrri\000MUL16m\000MUL16r\000MUL32"
    "m\000MUL32r\000MUL64m\000MUL64r\000MUL8m\000MUL8r\000MULPDrm\000MULPDrr"
    "\000MULPSrm\000MULPSrr\000MULSDrm\000MULSDrm_Int\000MULSDrr\000MULSDrr_"
    "Int\000MULSSrm\000MULSSrm_Int\000MULSSrr\000MULSSrr_Int\000MUL_F32m\000"
    "MUL_F64m\000MUL_FI16m\000MUL_FI32m\000MUL_FPrST0\000MUL_FST0r\000MUL_Fp"
    "32\000MUL_Fp32m\000MUL_Fp64\000MUL_Fp64m\000MUL_Fp64m32\000MUL_Fp80\000"
    "MUL_Fp80m32\000MUL_Fp80m64\000MUL_FpI16m32\000MUL_FpI16m64\000MUL_FpI16"
    "m80\000MUL_FpI32m32\000MUL_FpI32m64\000MUL_FpI32m80\000MUL_FrST0\000MWA"
    "IT\000NEG16m\000NEG16r\000NEG32m\000NEG32r\000NEG64m\000NEG64r\000NEG8m"
    "\000NEG8r\000NOOP\000NOOPL\000NOOPW\000NOT16m\000NOT16r\000NOT32m\000NO"
    "T32r\000NOT64m\000NOT64r\000NOT8m\000NOT8r\000OR16i16\000OR16mi\000OR16"
    "mi8\000OR16mr\000OR16ri\000OR16ri8\000OR16rm\000OR16rr\000OR16rr_REV\000"
    "OR32i32\000OR32mi\000OR32mi8\000OR32mr\000OR32ri\000OR32ri8\000OR32rm\000"
    "OR32rr\000OR32rr_REV\000OR64i32\000OR64mi32\000OR64mi8\000OR64mr\000OR6"
    "4ri32\000OR64ri8\000OR64rm\000OR64rr\000OR64rr_REV\000OR8i8\000OR8mi\000"
    "OR8mr\000OR8ri\000OR8rm\000OR8rr\000OR8rr_REV\000ORPDrm\000ORPDrr\000OR"
    "PSrm\000ORPSrr\000OUT16ir\000OUT16rr\000OUT32ir\000OUT32rr\000OUT8ir\000"
    "OUT8rr\000OUTSB\000OUTSD\000OUTSW\000PABSBrm128\000PABSBrm64\000PABSBrr"
    "128\000PABSBrr64\000PABSDrm128\000PABSDrm64\000PABSDrr128\000PABSDrr64\000"
    "PABSWrm128\000PABSWrm64\000PABSWrr128\000PABSWrr64\000PACKSSDWrm\000PAC"
    "KSSDWrr\000PACKSSWBrm\000PACKSSWBrr\000PACKUSDWrm\000PACKUSDWrr\000PACK"
    "USWBrm\000PACKUSWBrr\000PADDBrm\000PADDBrr\000PADDDrm\000PADDDrr\000PAD"
    "DQrm\000PADDQrr\000PADDSBrm\000PADDSBrr\000PADDSWrm\000PADDSWrr\000PADD"
    "USBrm\000PADDUSBrr\000PADDUSWrm\000PADDUSWrr\000PADDWrm\000PADDWrr\000P"
    "ALIGNR128rm\000PALIGNR128rr\000PALIGNR64rm\000PALIGNR64rr\000PANDNrm\000"
    "PANDNrr\000PANDrm\000PANDrr\000PAVGBrm\000PAVGBrr\000PAVGWrm\000PAVGWrr"
    "\000PBLENDVBrm0\000PBLENDVBrr0\000PBLENDWrmi\000PBLENDWrri\000PCMPEQBrm"
    "\000PCMPEQBrr\000PCMPEQDrm\000PCMPEQDrr\000PCMPEQQrm\000PCMPEQQrr\000PC"
    "MPEQWrm\000PCMPEQWrr\000PCMPESTRIArm\000PCMPESTRIArr\000PCMPESTRICrm\000"
    "PCMPESTRICrr\000PCMPESTRIOrm\000PCMPESTRIOrr\000PCMPESTRISrm\000PCMPEST"
    "RISrr\000PCMPESTRIZrm\000PCMPESTRIZrr\000PCMPESTRIrm\000PCMPESTRIrr\000"
    "PCMPESTRM128MEM\000PCMPESTRM128REG\000PCMPESTRM128rm\000PCMPESTRM128rr\000"
    "PCMPGTBrm\000PCMPGTBrr\000PCMPGTDrm\000PCMPGTDrr\000PCMPGTQrm\000PCMPGT"
    "Qrr\000PCMPGTWrm\000PCMPGTWrr\000PCMPISTRIArm\000PCMPISTRIArr\000PCMPIS"
    "TRICrm\000PCMPISTRICrr\000PCMPISTRIOrm\000PCMPISTRIOrr\000PCMPISTRISrm\000"
    "PCMPISTRISrr\000PCMPISTRIZrm\000PCMPISTRIZrr\000PCMPISTRIrm\000PCMPISTR"
    "Irr\000PCMPISTRM128MEM\000PCMPISTRM128REG\000PCMPISTRM128rm\000PCMPISTR"
    "M128rr\000PEXTRBmr\000PEXTRBrr\000PEXTRDmr\000PEXTRDrr\000PEXTRQmr\000P"
    "EXTRQrr\000PEXTRWmr\000PEXTRWri\000PHADDDrm128\000PHADDDrm64\000PHADDDr"
    "r128\000PHADDDrr64\000PHADDSWrm128\000PHADDSWrm64\000PHADDSWrr128\000PH"
    "ADDSWrr64\000PHADDWrm128\000PHADDWrm64\000PHADDWrr128\000PHADDWrr64\000"
    "PHMINPOSUWrm128\000PHMINPOSUWrr128\000PHSUBDrm128\000PHSUBDrm64\000PHSU"
    "BDrr128\000PHSUBDrr64\000PHSUBSWrm128\000PHSUBSWrm64\000PHSUBSWrr128\000"
    "PHSUBSWrr64\000PHSUBWrm128\000PHSUBWrm64\000PHSUBWrr128\000PHSUBWrr64\000"
    "PINSRBrm\000PINSRBrr\000PINSRDrm\000PINSRDrr\000PINSRQrm\000PINSRQrr\000"
    "PINSRWrmi\000PINSRWrri\000PMADDUBSWrm128\000PMADDUBSWrm64\000PMADDUBSWr"
    "r128\000PMADDUBSWrr64\000PMADDWDrm\000PMADDWDrr\000PMAXSBrm\000PMAXSBrr"
    "\000PMAXSDrm\000PMAXSDrr\000PMAXSWrm\000PMAXSWrr\000PMAXUBrm\000PMAXUBr"
    "r\000PMAXUDrm\000PMAXUDrr\000PMAXUWrm\000PMAXUWrr\000PMINSBrm\000PMINSB"
    "rr\000PMINSDrm\000PMINSDrr\000PMINSWrm\000PMINSWrr\000PMINUBrm\000PMINU"
    "Brr\000PMINUDrm\000PMINUDrr\000PMINUWrm\000PMINUWrr\000PMOVMSKBrr\000PM"
    "OVSXBDrm\000PMOVSXBDrr\000PMOVSXBQrm\000PMOVSXBQrr\000PMOVSXBWrm\000PMO"
    "VSXBWrr\000PMOVSXDQrm\000PMOVSXDQrr\000PMOVSXWDrm\000PMOVSXWDrr\000PMOV"
    "SXWQrm\000PMOVSXWQrr\000PMOVZXBDrm\000PMOVZXBDrr\000PMOVZXBQrm\000PMOVZ"
    "XBQrr\000PMOVZXBWrm\000PMOVZXBWrr\000PMOVZXDQrm\000PMOVZXDQrr\000PMOVZX"
    "WDrm\000PMOVZXWDrr\000PMOVZXWQrm\000PMOVZXWQrr\000PMULDQrm\000PMULDQrr\000"
    "PMULHRSWrm128\000PMULHRSWrm64\000PMULHRSWrr128\000PMULHRSWrr64\000PMULH"
    "UWrm\000PMULHUWrr\000PMULHWrm\000PMULHWrr\000PMULLDrm\000PMULLDrm_int\000"
    "PMULLDrr\000PMULLDrr_int\000PMULLWrm\000PMULLWrr\000PMULUDQrm\000PMULUD"
    "Qrr\000POP16r\000POP16rmm\000POP16rmr\000POP32r\000POP32rmm\000POP32rmr"
    "\000POP64r\000POP64rmm\000POP64rmr\000POPCNT16rm\000POPCNT16rr\000POPCN"
    "T32rm\000POPCNT32rr\000POPCNT64rm\000POPCNT64rr\000POPF\000POPFD\000POP"
    "FQ\000POPFS16\000POPFS32\000POPFS64\000POPGS16\000POPGS32\000POPGS64\000"
    "PORrm\000PORrr\000PREFETCHNTA\000PREFETCHT0\000PREFETCHT1\000PREFETCHT2"
    "\000PSADBWrm\000PSADBWrr\000PSHUFBrm128\000PSHUFBrm64\000PSHUFBrr128\000"
    "PSHUFBrr64\000PSHUFDmi\000PSHUFDri\000PSHUFHWmi\000PSHUFHWri\000PSHUFLW"
    "mi\000PSHUFLWri\000PSIGNBrm128\000PSIGNBrm64\000PSIGNBrr128\000PSIGNBrr"
    "64\000PSIGNDrm128\000PSIGNDrm64\000PSIGNDrr128\000PSIGNDrr64\000PSIGNWr"
    "m128\000PSIGNWrm64\000PSIGNWrr128\000PSIGNWrr64\000PSLLDQri\000PSLLDri\000"
    "PSLLDrm\000PSLLDrr\000PSLLQri\000PSLLQrm\000PSLLQrr\000PSLLWri\000PSLLW"
    "rm\000PSLLWrr\000PSRADri\000PSRADrm\000PSRADrr\000PSRAWri\000PSRAWrm\000"
    "PSRAWrr\000PSRLDQri\000PSRLDri\000PSRLDrm\000PSRLDrr\000PSRLQri\000PSRL"
    "Qrm\000PSRLQrr\000PSRLWri\000PSRLWrm\000PSRLWrr\000PSUBBrm\000PSUBBrr\000"
    "PSUBDrm\000PSUBDrr\000PSUBQrm\000PSUBQrr\000PSUBSBrm\000PSUBSBrr\000PSU"
    "BSWrm\000PSUBSWrr\000PSUBUSBrm\000PSUBUSBrr\000PSUBUSWrm\000PSUBUSWrr\000"
    "PSUBWrm\000PSUBWrr\000PTESTrm\000PTESTrr\000PUNPCKHBWrm\000PUNPCKHBWrr\000"
    "PUNPCKHDQrm\000PUNPCKHDQrr\000PUNPCKHQDQrm\000PUNPCKHQDQrr\000PUNPCKHWD"
    "rm\000PUNPCKHWDrr\000PUNPCKLBWrm\000PUNPCKLBWrr\000PUNPCKLDQrm\000PUNPC"
    "KLDQrr\000PUNPCKLQDQrm\000PUNPCKLQDQrr\000PUNPCKLWDrm\000PUNPCKLWDrr\000"
    "PUSH16r\000PUSH16rmm\000PUSH16rmr\000PUSH32i16\000PUSH32i32\000PUSH32i8"
    "\000PUSH32r\000PUSH32rmm\000PUSH32rmr\000PUSH64i16\000PUSH64i32\000PUSH"
    "64i8\000PUSH64r\000PUSH64rmm\000PUSH64rmr\000PUSHF\000PUSHFD\000PUSHFQ6"
    "4\000PUSHFS16\000PUSHFS32\000PUSHFS64\000PUSHGS16\000PUSHGS32\000PUSHGS"
    "64\000PXORrm\000PXORrr\000RCL16m1\000RCL16mCL\000RCL16mi\000RCL16r1\000"
    "RCL16rCL\000RCL16ri\000RCL32m1\000RCL32mCL\000RCL32mi\000RCL32r1\000RCL"
    "32rCL\000RCL32ri\000RCL64m1\000RCL64mCL\000RCL64mi\000RCL64r1\000RCL64r"
    "CL\000RCL64ri\000RCL8m1\000RCL8mCL\000RCL8mi\000RCL8r1\000RCL8rCL\000RC"
    "L8ri\000RCPPSm\000RCPPSm_Int\000RCPPSr\000RCPPSr_Int\000RCPSSm\000RCPSS"
    "m_Int\000RCPSSr\000RCPSSr_Int\000RCR16m1\000RCR16mCL\000RCR16mi\000RCR1"
    "6r1\000RCR16rCL\000RCR16ri\000RCR32m1\000RCR32mCL\000RCR32mi\000RCR32r1"
    "\000RCR32rCL\000RCR32ri\000RCR64m1\000RCR64mCL\000RCR64mi\000RCR64r1\000"
    "RCR64rCL\000RCR64ri\000RCR8m1\000RCR8mCL\000RCR8mi\000RCR8r1\000RCR8rCL"
    "\000RCR8ri\000RDMSR\000RDPMC\000RDTSC\000RDTSCP\000REPNE_PREFIX\000REP_"
    "MOVSB\000REP_MOVSD\000REP_MOVSQ\000REP_MOVSW\000REP_PREFIX\000REP_STOSB"
    "\000REP_STOSD\000REP_STOSQ\000REP_STOSW\000RET\000RETI\000ROL16m1\000RO"
    "L16mCL\000ROL16mi\000ROL16r1\000ROL16rCL\000ROL16ri\000ROL32m1\000ROL32"
    "mCL\000ROL32mi\000ROL32r1\000ROL32rCL\000ROL32ri\000ROL64m1\000ROL64mCL"
    "\000ROL64mi\000ROL64r1\000ROL64rCL\000ROL64ri\000ROL8m1\000ROL8mCL\000R"
    "OL8mi\000ROL8r1\000ROL8rCL\000ROL8ri\000ROR16m1\000ROR16mCL\000ROR16mi\000"
    "ROR16r1\000ROR16rCL\000ROR16ri\000ROR32m1\000ROR32mCL\000ROR32mi\000ROR"
    "32r1\000ROR32rCL\000ROR32ri\000ROR64m1\000ROR64mCL\000ROR64mi\000ROR64r"
    "1\000ROR64rCL\000ROR64ri\000ROR8m1\000ROR8mCL\000ROR8mi\000ROR8r1\000RO"
    "R8rCL\000ROR8ri\000ROUNDPDm_Int\000ROUNDPDr_Int\000ROUNDPSm_Int\000ROUN"
    "DPSr_Int\000ROUNDSDm_Int\000ROUNDSDr_Int\000ROUNDSSm_Int\000ROUNDSSr_In"
    "t\000RSM\000RSQRTPSm\000RSQRTPSm_Int\000RSQRTPSr\000RSQRTPSr_Int\000RSQ"
    "RTSSm\000RSQRTSSm_Int\000RSQRTSSr\000RSQRTSSr_Int\000SAHF\000SAR16m1\000"
    "SAR16mCL\000SAR16mi\000SAR16r1\000SAR16rCL\000SAR16ri\000SAR32m1\000SAR"
    "32mCL\000SAR32mi\000SAR32r1\000SAR32rCL\000SAR32ri\000SAR64m1\000SAR64m"
    "CL\000SAR64mi\000SAR64r1\000SAR64rCL\000SAR64ri\000SAR8m1\000SAR8mCL\000"
    "SAR8mi\000SAR8r1\000SAR8rCL\000SAR8ri\000SBB16i16\000SBB16mi\000SBB16mi"
    "8\000SBB16mr\000SBB16ri\000SBB16ri8\000SBB16rm\000SBB16rr\000SBB16rr_RE"
    "V\000SBB32i32\000SBB32mi\000SBB32mi8\000SBB32mr\000SBB32ri\000SBB32ri8\000"
    "SBB32rm\000SBB32rr\000SBB32rr_REV\000SBB64i32\000SBB64mi32\000SBB64mi8\000"
    "SBB64mr\000SBB64ri32\000SBB64ri8\000SBB64rm\000SBB64rr\000SBB64rr_REV\000"
    "SBB8i8\000SBB8mi\000SBB8mr\000SBB8ri\000SBB8rm\000SBB8rr\000SBB8rr_REV\000"
    "SCAS16\000SCAS32\000SCAS64\000SCAS8\000SETAEm\000SETAEr\000SETAm\000SET"
    "Ar\000SETBEm\000SETBEr\000SETB_C16r\000SETB_C32r\000SETB_C64r\000SETB_C"
    "8r\000SETBm\000SETBr\000SETEm\000SETEr\000SETGEm\000SETGEr\000SETGm\000"
    "SETGr\000SETLEm\000SETLEr\000SETLm\000SETLr\000SETNEm\000SETNEr\000SETN"
    "Om\000SETNOr\000SETNPm\000SETNPr\000SETNSm\000SETNSr\000SETOm\000SETOr\000"
    "SETPm\000SETPr\000SETSm\000SETSr\000SFENCE\000SGDTm\000SHL16m1\000SHL16"
    "mCL\000SHL16mi\000SHL16r1\000SHL16rCL\000SHL16ri\000SHL32m1\000SHL32mCL"
    "\000SHL32mi\000SHL32r1\000SHL32rCL\000SHL32ri\000SHL64m1\000SHL64mCL\000"
    "SHL64mi\000SHL64r1\000SHL64rCL\000SHL64ri\000SHL8m1\000SHL8mCL\000SHL8m"
    "i\000SHL8r1\000SHL8rCL\000SHL8ri\000SHLD16mrCL\000SHLD16mri8\000SHLD16r"
    "rCL\000SHLD16rri8\000SHLD32mrCL\000SHLD32mri8\000SHLD32rrCL\000SHLD32rr"
    "i8\000SHLD64mrCL\000SHLD64mri8\000SHLD64rrCL\000SHLD64rri8\000SHR16m1\000"
    "SHR16mCL\000SHR16mi\000SHR16r1\000SHR16rCL\000SHR16ri\000SHR32m1\000SHR"
    "32mCL\000SHR32mi\000SHR32r1\000SHR32rCL\000SHR32ri\000SHR64m1\000SHR64m"
    "CL\000SHR64mi\000SHR64r1\000SHR64rCL\000SHR64ri\000SHR8m1\000SHR8mCL\000"
    "SHR8mi\000SHR8r1\000SHR8rCL\000SHR8ri\000SHRD16mrCL\000SHRD16mri8\000SH"
    "RD16rrCL\000SHRD16rri8\000SHRD32mrCL\000SHRD32mri8\000SHRD32rrCL\000SHR"
    "D32rri8\000SHRD64mrCL\000SHRD64mri8\000SHRD64rrCL\000SHRD64rri8\000SHUF"
    "PDrmi\000SHUFPDrri\000SHUFPSrmi\000SHUFPSrri\000SIDTm\000SIN_F\000SIN_F"
    "p32\000SIN_Fp64\000SIN_Fp80\000SLDT16m\000SLDT16r\000SLDT64m\000SLDT64r"
    "\000SMSW16m\000SMSW16r\000SMSW32r\000SMSW64r\000SQRTPDm\000SQRTPDm_Int\000"
    "SQRTPDr\000SQRTPDr_Int\000SQRTPSm\000SQRTPSm_Int\000SQRTPSr\000SQRTPSr_"
    "Int\000SQRTSDm\000SQRTSDm_Int\000SQRTSDr\000SQRTSDr_Int\000SQRTSSm\000S"
    "QRTSSm_Int\000SQRTSSr\000SQRTSSr_Int\000SQRT_F\000SQRT_Fp32\000SQRT_Fp6"
    "4\000SQRT_Fp80\000SS_PREFIX\000STC\000STD\000STI\000STMXCSR\000STOSB\000"
    "STOSD\000STOSW\000STRm\000STRr\000ST_F32m\000ST_F64m\000ST_FP32m\000ST_"
    "FP64m\000ST_FP80m\000ST_FPrr\000ST_Fp32m\000ST_Fp64m\000ST_Fp64m32\000S"
    "T_Fp80m32\000ST_Fp80m64\000ST_FpP32m\000ST_FpP64m\000ST_FpP64m32\000ST_"
    "FpP80m\000ST_FpP80m32\000ST_FpP80m64\000ST_Frr\000SUB16i16\000SUB16mi\000"
    "SUB16mi8\000SUB16mr\000SUB16ri\000SUB16ri8\000SUB16rm\000SUB16rr\000SUB"
    "16rr_REV\000SUB32i32\000SUB32mi\000SUB32mi8\000SUB32mr\000SUB32ri\000SU"
    "B32ri8\000SUB32rm\000SUB32rr\000SUB32rr_REV\000SUB64i32\000SUB64mi32\000"
    "SUB64mi8\000SUB64mr\000SUB64ri32\000SUB64ri8\000SUB64rm\000SUB64rr\000S"
    "UB64rr_REV\000SUB8i8\000SUB8mi\000SUB8mr\000SUB8ri\000SUB8rm\000SUB8rr\000"
    "SUB8rr_REV\000SUBPDrm\000SUBPDrr\000SUBPSrm\000SUBPSrr\000SUBR_F32m\000"
    "SUBR_F64m\000SUBR_FI16m\000SUBR_FI32m\000SUBR_FPrST0\000SUBR_FST0r\000S"
    "UBR_Fp32m\000SUBR_Fp64m\000SUBR_Fp64m32\000SUBR_Fp80m32\000SUBR_Fp80m64"
    "\000SUBR_FpI16m32\000SUBR_FpI16m64\000SUBR_FpI16m80\000SUBR_FpI32m32\000"
    "SUBR_FpI32m64\000SUBR_FpI32m80\000SUBR_FrST0\000SUBSDrm\000SUBSDrm_Int\000"
    "SUBSDrr\000SUBSDrr_Int\000SUBSSrm\000SUBSSrm_Int\000SUBSSrr\000SUBSSrr_"
    "Int\000SUB_F32m\000SUB_F64m\000SUB_FI16m\000SUB_FI32m\000SUB_FPrST0\000"
    "SUB_FST0r\000SUB_Fp32\000SUB_Fp32m\000SUB_Fp64\000SUB_Fp64m\000SUB_Fp64"
    "m32\000SUB_Fp80\000SUB_Fp80m32\000SUB_Fp80m64\000SUB_FpI16m32\000SUB_Fp"
    "I16m64\000SUB_FpI16m80\000SUB_FpI32m32\000SUB_FpI32m64\000SUB_FpI32m80\000"
    "SUB_FrST0\000SWAPGS\000SYSCALL\000SYSENTER\000SYSEXIT\000SYSEXIT64\000S"
    "YSRET\000TAILJMPd\000TAILJMPm\000TAILJMPr\000TAILJMPr64\000TCRETURNdi\000"
    "TCRETURNdi64\000TCRETURNri\000TCRETURNri64\000TEST16i16\000TEST16mi\000"
    "TEST16ri\000TEST16rm\000TEST16rr\000TEST32i32\000TEST32mi\000TEST32ri\000"
    "TEST32rm\000TEST32rr\000TEST64i32\000TEST64mi32\000TEST64ri32\000TEST64"
    "rm\000TEST64rr\000TEST8i8\000TEST8mi\000TEST8ri\000TEST8rm\000TEST8rr\000"
    "TLS_addr32\000TLS_addr64\000TRAP\000TST_F\000TST_Fp32\000TST_Fp64\000TS"
    "T_Fp80\000UCOMISDrm\000UCOMISDrr\000UCOMISSrm\000UCOMISSrr\000UCOM_FIPr"
    "\000UCOM_FIr\000UCOM_FPPr\000UCOM_FPr\000UCOM_FpIr32\000UCOM_FpIr64\000"
    "UCOM_FpIr80\000UCOM_Fpr32\000UCOM_Fpr64\000UCOM_Fpr80\000UCOM_Fr\000UNP"
    "CKHPDrm\000UNPCKHPDrr\000UNPCKHPSrm\000UNPCKHPSrr\000UNPCKLPDrm\000UNPC"
    "KLPDrr\000UNPCKLPSrm\000UNPCKLPSrr\000VASTART_SAVE_XMM_REGS\000VERRm\000"
    "VERRr\000VERWm\000VERWr\000VMCALL\000VMCLEARm\000VMLAUNCH\000VMPTRLDm\000"
    "VMPTRSTm\000VMREAD32rm\000VMREAD32rr\000VMREAD64rm\000VMREAD64rr\000VMR"
    "ESUME\000VMWRITE32rm\000VMWRITE32rr\000VMWRITE64rm\000VMWRITE64rr\000VM"
    "XOFF\000VMXON\000V_SET0\000V_SETALLONES\000WAIT\000WBINVD\000WINCALL64m"
    "\000WINCALL64pcrel32\000WINCALL64r\000WRMSR\000XADD16rm\000XADD16rr\000"
    "XADD32rm\000XADD32rr\000XADD64rm\000XADD64rr\000XADD8rm\000XADD8rr\000X"
    "CHG16ar\000XCHG16rm\000XCHG16rr\000XCHG32ar\000XCHG32rm\000XCHG32rr\000"
    "XCHG64ar\000XCHG64rm\000XCHG64rr\000XCHG8rm\000XCHG8rr\000XCH_F\000XLAT"
    "\000XOR16i16\000XOR16mi\000XOR16mi8\000XOR16mr\000XOR16ri\000XOR16ri8\000"
    "XOR16rm\000XOR16rr\000XOR16rr_REV\000XOR32i32\000XOR32mi\000XOR32mi8\000"
    "XOR32mr\000XOR32ri\000XOR32ri8\000XOR32rm\000XOR32rr\000XOR32rr_REV\000"
    "XOR64i32\000XOR64mi32\000XOR64mi8\000XOR64mr\000XOR64ri32\000XOR64ri8\000"
    "XOR64rm\000XOR64rr\000XOR64rr_REV\000XOR8i8\000XOR8mi\000XOR8mr\000XOR8"
    "ri\000XOR8rm\000XOR8rr\000XOR8rr_REV\000XORPDrm\000XORPDrr\000XORPSrm\000"
    "XORPSrr\000";
  return Strs+InstAsmOffset[Opcode];
}

#endif
