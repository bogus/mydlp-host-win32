//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Assembly Writer Source Fragment
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void X86ATTInstPrinter::printInstruction(const MachineInstr *MI) {
  static const unsigned OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// DBG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1U,	// DBG_VALUE
    11U,	// ABS_F
    0U,	// ABS_Fp32
    0U,	// ABS_Fp64
    0U,	// ABS_Fp80
    67108880U,	// ADC16i16
    136314896U,	// ADC16mi
    136314896U,	// ADC16mi8
    136314896U,	// ADC16mr
    205651984U,	// ADC16ri
    205651984U,	// ADC16ri8
    272760848U,	// ADC16rm
    205651984U,	// ADC16rr
    205651984U,	// ADC16rr_REV
    73400342U,	// ADC32i32
    136577046U,	// ADC32mi
    136577046U,	// ADC32mi8
    136577046U,	// ADC32mr
    205651990U,	// ADC32ri
    205651990U,	// ADC32ri8
    339869718U,	// ADC32rm
    205651990U,	// ADC32rr
    205651990U,	// ADC32rr_REV
    75497500U,	// ADC64i32
    136708124U,	// ADC64mi32
    136708124U,	// ADC64mi8
    136708124U,	// ADC64mr
    205651996U,	// ADC64ri32
    205651996U,	// ADC64ri8
    406978588U,	// ADC64rm
    205651996U,	// ADC64rr
    205651996U,	// ADC64rr_REV
    77594658U,	// ADC8i8
    136839202U,	// ADC8mi
    136839202U,	// ADC8mr
    205652002U,	// ADC8ri
    474087458U,	// ADC8rm
    205652002U,	// ADC8rr
    205652002U,	// ADC8rr_REV
    67108904U,	// ADD16i16
    136314920U,	// ADD16mi
    136314920U,	// ADD16mi8
    136314920U,	// ADD16mr
    205652008U,	// ADD16mrmrr
    205652008U,	// ADD16ri
    205652008U,	// ADD16ri8
    272760872U,	// ADD16rm
    205652008U,	// ADD16rr
    73400366U,	// ADD32i32
    136577070U,	// ADD32mi
    136577070U,	// ADD32mi8
    136577070U,	// ADD32mr
    205652014U,	// ADD32mrmrr
    205652014U,	// ADD32ri
    205652014U,	// ADD32ri8
    339869742U,	// ADD32rm
    205652014U,	// ADD32rr
    75497524U,	// ADD64i32
    136708148U,	// ADD64mi32
    136708148U,	// ADD64mi8
    136708148U,	// ADD64mr
    205652014U,	// ADD64mrmrr
    205652020U,	// ADD64ri32
    205652020U,	// ADD64ri8
    406978612U,	// ADD64rm
    205652020U,	// ADD64rr
    77594682U,	// ADD8i8
    136839226U,	// ADD8mi
    136839226U,	// ADD8mr
    205652026U,	// ADD8mrmrr
    205652026U,	// ADD8ri
    474087482U,	// ADD8rm
    205652026U,	// ADD8rr
    536870976U,	// ADDPDrm
    205652032U,	// ADDPDrr
    536870983U,	// ADDPSrm
    205652039U,	// ADDPSrr
    603979854U,	// ADDSDrm
    603979854U,	// ADDSDrm_Int
    205652046U,	// ADDSDrr
    205652046U,	// ADDSDrr_Int
    671088725U,	// ADDSSrm
    671088725U,	// ADDSSrm_Int
    205652053U,	// ADDSSrr
    205652053U,	// ADDSSrr_Int
    536871004U,	// ADDSUBPDrm
    205652060U,	// ADDSUBPDrr
    536871014U,	// ADDSUBPSrm
    205652070U,	// ADDSUBPSrr
    738197616U,	// ADD_F32m
    805306487U,	// ADD_F64m
    872415358U,	// ADD_FI16m
    952107142U,	// ADD_FI32m
    79691918U,	// ADD_FPrST0
    79691925U,	// ADD_FST0r
    0U,	// ADD_Fp32
    0U,	// ADD_Fp32m
    0U,	// ADD_Fp64
    0U,	// ADD_Fp64m
    0U,	// ADD_Fp64m32
    0U,	// ADD_Fp80
    0U,	// ADD_Fp80m32
    0U,	// ADD_Fp80m64
    0U,	// ADD_FpI16m32
    0U,	// ADD_FpI16m64
    0U,	// ADD_FpI16m80
    0U,	// ADD_FpI32m32
    0U,	// ADD_FpI32m64
    0U,	// ADD_FpI32m80
    79691931U,	// ADD_FrST0
    169U,	// ADJCALLSTACKDOWN32
    169U,	// ADJCALLSTACKDOWN64
    187U,	// ADJCALLSTACKUP32
    187U,	// ADJCALLSTACKUP64
    67109067U,	// AND16i16
    136315083U,	// AND16mi
    136315083U,	// AND16mi8
    136315083U,	// AND16mr
    205652171U,	// AND16ri
    205652171U,	// AND16ri8
    272761035U,	// AND16rm
    205652171U,	// AND16rr
    205652171U,	// AND16rr_REV
    73400529U,	// AND32i32
    136577233U,	// AND32mi
    136577233U,	// AND32mi8
    136577233U,	// AND32mr
    205652177U,	// AND32ri
    205652177U,	// AND32ri8
    339869905U,	// AND32rm
    205652177U,	// AND32rr
    205652177U,	// AND32rr_REV
    75497687U,	// AND64i32
    136708311U,	// AND64mi32
    136708311U,	// AND64mi8
    136708311U,	// AND64mr
    205652183U,	// AND64ri32
    205652183U,	// AND64ri8
    406978775U,	// AND64rm
    205652183U,	// AND64rr
    205652183U,	// AND64rr_REV
    77594845U,	// AND8i8
    136839389U,	// AND8mi
    136839389U,	// AND8mr
    205652189U,	// AND8ri
    474087645U,	// AND8rm
    205652189U,	// AND8rr
    205652189U,	// AND8rr_REV
    536871139U,	// ANDNPDrm
    205652195U,	// ANDNPDrr
    536871147U,	// ANDNPSrm
    205652203U,	// ANDNPSrr
    536871155U,	// ANDPDrm
    205652211U,	// ANDPDrr
    536871162U,	// ANDPSrm
    205652218U,	// ANDPSrr
    257U,	// ATOMADD6432
    278U,	// ATOMAND16
    297U,	// ATOMAND32
    316U,	// ATOMAND64
    335U,	// ATOMAND6432
    356U,	// ATOMAND8
    374U,	// ATOMMAX16
    393U,	// ATOMMAX32
    412U,	// ATOMMAX64
    431U,	// ATOMMIN16
    450U,	// ATOMMIN32
    469U,	// ATOMMIN64
    488U,	// ATOMNAND16
    508U,	// ATOMNAND32
    528U,	// ATOMNAND64
    548U,	// ATOMNAND6432
    570U,	// ATOMNAND8
    589U,	// ATOMOR16
    607U,	// ATOMOR32
    625U,	// ATOMOR64
    643U,	// ATOMOR6432
    663U,	// ATOMOR8
    680U,	// ATOMSUB6432
    701U,	// ATOMSWAP6432
    723U,	// ATOMUMAX16
    743U,	// ATOMUMAX32
    763U,	// ATOMUMAX64
    783U,	// ATOMUMIN16
    803U,	// ATOMUMIN32
    823U,	// ATOMUMIN64
    843U,	// ATOMXOR16
    862U,	// ATOMXOR32
    881U,	// ATOMXOR64
    900U,	// ATOMXOR6432
    921U,	// ATOMXOR8
    1021313963U,	// BLENDPDrmi
    1073742763U,	// BLENDPDrri
    1021313972U,	// BLENDPSrmi
    1073742772U,	// BLENDPSrri
    1140851645U,	// BLENDVPDrm0
    205652925U,	// BLENDVPDrr0
    1140851662U,	// BLENDVPSrm0
    205652942U,	// BLENDVPSrr0
    1207960543U,	// BSF16rm
    1279394783U,	// BSF16rr
    1342178277U,	// BSF32rm
    1279394789U,	// BSF32rr
    1409287147U,	// BSF64rm
    1279394795U,	// BSF64rr
    1207960561U,	// BSR16rm
    1279394801U,	// BSR16rr
    1342178295U,	// BSR32rm
    1279394807U,	// BSR32rr
    1409287165U,	// BSR64rm
    1279394813U,	// BSR64rr
    79692803U,	// BSWAP32r
    79692811U,	// BSWAP64r
    136315923U,	// BT16mi8
    136315923U,	// BT16mr
    1279394835U,	// BT16ri8
    1279394835U,	// BT16rr
    136578072U,	// BT32mi8
    136578072U,	// BT32mr
    1279394840U,	// BT32ri8
    1279394840U,	// BT32rr
    136709149U,	// BT64mi8
    136709149U,	// BT64mr
    1279394845U,	// BT64ri8
    1279394845U,	// BT64rr
    136315938U,	// BTC16mi8
    136315938U,	// BTC16mr
    1279394850U,	// BTC16ri8
    1279394850U,	// BTC16rr
    136578088U,	// BTC32mi8
    136578088U,	// BTC32mr
    1279394856U,	// BTC32ri8
    1279394856U,	// BTC32rr
    136709166U,	// BTC64mi8
    136709166U,	// BTC64mr
    1279394862U,	// BTC64ri8
    1279394862U,	// BTC64rr
    136315956U,	// BTR16mi8
    136315956U,	// BTR16mr
    1279394868U,	// BTR16ri8
    1279394868U,	// BTR16rr
    136578106U,	// BTR32mi8
    136578106U,	// BTR32mr
    1279394874U,	// BTR32ri8
    1279394874U,	// BTR32rr
    136709184U,	// BTR64mi8
    136709184U,	// BTR64mr
    1279394880U,	// BTR64ri8
    1279394880U,	// BTR64rr
    136315974U,	// BTS16mi8
    136315974U,	// BTS16mr
    1279394886U,	// BTS16ri8
    1279394886U,	// BTS16rr
    136578124U,	// BTS32mi8
    136578124U,	// BTS32mr
    1279394892U,	// BTS32ri8
    1279394892U,	// BTS32rr
    136709202U,	// BTS64mi8
    136709202U,	// BTS64mr
    1279394898U,	// BTS64ri8
    1279394898U,	// BTS64rr
    952108120U,	// CALL32m
    79692888U,	// CALL32r
    1476396127U,	// CALL64m
    1556087911U,	// CALL64pcrel32
    79692895U,	// CALL64r
    1556087918U,	// CALLpcrel32
    1140U,	// CBW
    1145U,	// CDQ
    1150U,	// CDQE
    1155U,	// CHS_F
    0U,	// CHS_Fp32
    0U,	// CHS_Fp64
    0U,	// CHS_Fp80
    1160U,	// CLC
    1164U,	// CLD
    1610613904U,	// CLFLUSH
    1177U,	// CLI
    1181U,	// CLTS
    1186U,	// CMC
    272762022U,	// CMOVA16rm
    205653158U,	// CMOVA16rr
    339870894U,	// CMOVA32rm
    205653166U,	// CMOVA32rr
    406979766U,	// CMOVA64rm
    205653174U,	// CMOVA64rr
    272762046U,	// CMOVAE16rm
    205653182U,	// CMOVAE16rr
    339870919U,	// CMOVAE32rm
    205653191U,	// CMOVAE32rr
    406979792U,	// CMOVAE64rm
    205653200U,	// CMOVAE64rr
    272762073U,	// CMOVB16rm
    205653209U,	// CMOVB16rr
    339870945U,	// CMOVB32rm
    205653217U,	// CMOVB32rr
    406979817U,	// CMOVB64rm
    205653225U,	// CMOVB64rr
    272762097U,	// CMOVBE16rm
    205653233U,	// CMOVBE16rr
    339870970U,	// CMOVBE32rm
    205653242U,	// CMOVBE32rr
    406979843U,	// CMOVBE64rm
    205653251U,	// CMOVBE64rr
    83887372U,	// CMOVBE_F
    0U,	// CMOVBE_Fp32
    0U,	// CMOVBE_Fp64
    0U,	// CMOVBE_Fp80
    83887381U,	// CMOVB_F
    0U,	// CMOVB_Fp32
    0U,	// CMOVB_Fp64
    0U,	// CMOVB_Fp80
    272762141U,	// CMOVE16rm
    205653277U,	// CMOVE16rr
    339871013U,	// CMOVE32rm
    205653285U,	// CMOVE32rr
    406979885U,	// CMOVE64rm
    205653293U,	// CMOVE64rr
    83887413U,	// CMOVE_F
    0U,	// CMOVE_Fp32
    0U,	// CMOVE_Fp64
    0U,	// CMOVE_Fp80
    272762173U,	// CMOVG16rm
    205653309U,	// CMOVG16rr
    339871045U,	// CMOVG32rm
    205653317U,	// CMOVG32rr
    406979917U,	// CMOVG64rm
    205653325U,	// CMOVG64rr
    272762197U,	// CMOVGE16rm
    205653333U,	// CMOVGE16rr
    339871070U,	// CMOVGE32rm
    205653342U,	// CMOVGE32rr
    406979943U,	// CMOVGE64rm
    205653351U,	// CMOVGE64rr
    272762224U,	// CMOVL16rm
    205653360U,	// CMOVL16rr
    339871096U,	// CMOVL32rm
    205653368U,	// CMOVL32rr
    406979968U,	// CMOVL64rm
    205653376U,	// CMOVL64rr
    272762248U,	// CMOVLE16rm
    205653384U,	// CMOVLE16rr
    339871121U,	// CMOVLE32rm
    205653393U,	// CMOVLE32rr
    406979994U,	// CMOVLE64rm
    205653402U,	// CMOVLE64rr
    83887523U,	// CMOVNBE_F
    0U,	// CMOVNBE_Fp32
    0U,	// CMOVNBE_Fp64
    0U,	// CMOVNBE_Fp80
    83887533U,	// CMOVNB_F
    0U,	// CMOVNB_Fp32
    0U,	// CMOVNB_Fp64
    0U,	// CMOVNB_Fp80
    272762294U,	// CMOVNE16rm
    205653430U,	// CMOVNE16rr
    339871167U,	// CMOVNE32rm
    205653439U,	// CMOVNE32rr
    406980040U,	// CMOVNE64rm
    205653448U,	// CMOVNE64rr
    83887569U,	// CMOVNE_F
    0U,	// CMOVNE_Fp32
    0U,	// CMOVNE_Fp64
    0U,	// CMOVNE_Fp80
    272762330U,	// CMOVNO16rm
    205653466U,	// CMOVNO16rr
    339871203U,	// CMOVNO32rm
    205653475U,	// CMOVNO32rr
    406980076U,	// CMOVNO64rm
    205653484U,	// CMOVNO64rr
    272762357U,	// CMOVNP16rm
    205653493U,	// CMOVNP16rr
    339871230U,	// CMOVNP32rm
    205653502U,	// CMOVNP32rr
    406980103U,	// CMOVNP64rm
    205653511U,	// CMOVNP64rr
    83887632U,	// CMOVNP_F
    0U,	// CMOVNP_Fp32
    0U,	// CMOVNP_Fp64
    0U,	// CMOVNP_Fp80
    272762393U,	// CMOVNS16rm
    205653529U,	// CMOVNS16rr
    339871266U,	// CMOVNS32rm
    205653538U,	// CMOVNS32rr
    406980139U,	// CMOVNS64rm
    205653547U,	// CMOVNS64rr
    272762420U,	// CMOVO16rm
    205653556U,	// CMOVO16rr
    339871292U,	// CMOVO32rm
    205653564U,	// CMOVO32rr
    406980164U,	// CMOVO64rm
    205653572U,	// CMOVO64rr
    272762444U,	// CMOVP16rm
    205653580U,	// CMOVP16rr
    339871316U,	// CMOVP32rm
    205653588U,	// CMOVP32rr
    406980188U,	// CMOVP64rm
    205653596U,	// CMOVP64rr
    83887716U,	// CMOVP_F
    0U,	// CMOVP_Fp32
    0U,	// CMOVP_Fp64
    0U,	// CMOVP_Fp80
    272762477U,	// CMOVS16rm
    205653613U,	// CMOVS16rr
    339871349U,	// CMOVS32rm
    205653621U,	// CMOVS32rr
    406980221U,	// CMOVS64rm
    205653629U,	// CMOVS64rr
    1669U,	// CMOV_FR32
    1688U,	// CMOV_FR64
    1707U,	// CMOV_GR8
    1725U,	// CMOV_V1I64
    1745U,	// CMOV_V2F64
    1765U,	// CMOV_V2I64
    1785U,	// CMOV_V4F32
    67110669U,	// CMP16i16
    136316685U,	// CMP16mi
    136316685U,	// CMP16mi8
    136316685U,	// CMP16mr
    1279395597U,	// CMP16mrmrr
    1279395597U,	// CMP16ri
    1279395597U,	// CMP16ri8
    1207961357U,	// CMP16rm
    1279395597U,	// CMP16rr
    73402131U,	// CMP32i32
    136578835U,	// CMP32mi
    136578835U,	// CMP32mi8
    136578835U,	// CMP32mr
    1279395603U,	// CMP32mrmrr
    1279395603U,	// CMP32ri
    1279395603U,	// CMP32ri8
    1342179091U,	// CMP32rm
    1279395603U,	// CMP32rr
    75499289U,	// CMP64i32
    136709913U,	// CMP64mi32
    136709913U,	// CMP64mi8
    136709913U,	// CMP64mr
    1279395609U,	// CMP64mrmrr
    1279395609U,	// CMP64ri32
    1279395609U,	// CMP64ri8
    1409287961U,	// CMP64rm
    1279395609U,	// CMP64rr
    77596447U,	// CMP8i8
    136840991U,	// CMP8mi
    136840991U,	// CMP8mr
    1279395615U,	// CMP8mrmrr
    1279395615U,	// CMP8ri
    1690306335U,	// CMP8rm
    1279395615U,	// CMP8rr
    1764362021U,	// CMPPDrmi
    1831601957U,	// CMPPDrri
    1766459173U,	// CMPPSrmi
    1833699109U,	// CMPPSrri
    1833U,	// CMPS16
    1839U,	// CMPS32
    1845U,	// CMPS64
    1851U,	// CMPS8
    1768818469U,	// CMPSDrm
    1835796261U,	// CMPSDrr
    1771046693U,	// CMPSSrm
    1837893413U,	// CMPSSrr
    1879050049U,	// CMPXCHG16B
    136316749U,	// CMPXCHG16rm
    1279395661U,	// CMPXCHG16rr
    136578903U,	// CMPXCHG32rm
    1279395671U,	// CMPXCHG32rr
    136709985U,	// CMPXCHG64rm
    1279395681U,	// CMPXCHG64rr
    1476396907U,	// CMPXCHG8B
    136841078U,	// CMPXCHG8rm
    1279395702U,	// CMPXCHG8rr
    1946158976U,	// COMISDrm
    1279395712U,	// COMISDrr
    1946158984U,	// COMISSrm
    1279395720U,	// COMISSrr
    79693712U,	// COMP_FST0r
    83888023U,	// COM_FIPr
    83888031U,	// COM_FIr
    79693734U,	// COM_FST0r
    1964U,	// COS_F
    0U,	// COS_Fp32
    0U,	// COS_Fp64
    0U,	// COS_Fp80
    1969U,	// CPUID
    1975U,	// CQO
    295831484U,	// CRC32m16
    362940348U,	// CRC32m32
    497158076U,	// CRC32m8
    228722620U,	// CRC32r16
    228722620U,	// CRC32r32
    228722620U,	// CRC32r8
    430049212U,	// CRC64m64
    228722620U,	// CRC64r64
    1988U,	// CS_PREFIX
    1946159047U,	// CVTDQ2PDrm
    1279395783U,	// CVTDQ2PDrr
    1946159057U,	// CVTDQ2PSrm
    1279395793U,	// CVTDQ2PSrr
    1946159067U,	// CVTPD2DQrm
    1279395803U,	// CVTPD2DQrr
    1946159077U,	// CVTPD2PSrm
    1279395813U,	// CVTPD2PSrr
    1946159087U,	// CVTPS2DQrm
    1279395823U,	// CVTPS2DQrr
    2013267961U,	// CVTPS2PDrm
    1279395833U,	// CVTPS2PDrr
    2013267971U,	// CVTSD2SI64rm
    1279395843U,	// CVTSD2SI64rr
    2013267982U,	// CVTSD2SSrm
    1279395854U,	// CVTSD2SSrr
    1409288216U,	// CVTSI2SD64rm
    1279395864U,	// CVTSI2SD64rr
    1342179363U,	// CVTSI2SDrm
    1279395875U,	// CVTSI2SDrr
    1409288237U,	// CVTSI2SS64rm
    1279395885U,	// CVTSI2SS64rr
    1342179384U,	// CVTSI2SSrm
    1279395896U,	// CVTSI2SSrr
    2080376898U,	// CVTSS2SDrm
    1279395906U,	// CVTSS2SDrr
    2080376908U,	// CVTSS2SI64rm
    1279395916U,	// CVTSS2SI64rr
    2080376919U,	// CVTSS2SIrm
    1279395927U,	// CVTSS2SIrr
    1946159202U,	// CVTTPS2DQrm
    1279395938U,	// CVTTPS2DQrr
    2013268077U,	// CVTTSD2SI64rm
    1279395949U,	// CVTTSD2SI64rr
    2013268089U,	// CVTTSD2SIrm
    1279395961U,	// CVTTSD2SIrr
    2080376964U,	// CVTTSS2SI64rm
    1279395972U,	// CVTTSS2SI64rr
    2080376976U,	// CVTTSS2SIrm
    1279395984U,	// CVTTSS2SIrr
    2203U,	// CWD
    2208U,	// CWDE
    872417445U,	// DEC16m
    79693989U,	// DEC16r
    952109227U,	// DEC32m
    79693995U,	// DEC32r
    872417445U,	// DEC64_16m
    79693989U,	// DEC64_16r
    952109227U,	// DEC64_32m
    79693995U,	// DEC64_32r
    1476397233U,	// DEC64m
    79694001U,	// DEC64r
    1610614967U,	// DEC8m
    79694007U,	// DEC8r
    872417469U,	// DIV16m
    79694013U,	// DIV16r
    952109251U,	// DIV32m
    79694019U,	// DIV32r
    1476397257U,	// DIV64m
    79694025U,	// DIV64r
    1610614991U,	// DIV8m
    79694031U,	// DIV8r
    536873173U,	// DIVPDrm
    205654229U,	// DIVPDrr
    536873180U,	// DIVPSrm
    205654236U,	// DIVPSrr
    738199779U,	// DIVR_F32m
    805308651U,	// DIVR_F64m
    872417523U,	// DIVR_FI16m
    952109308U,	// DIVR_FI32m
    79694085U,	// DIVR_FPrST0
    79694092U,	// DIVR_FST0r
    0U,	// DIVR_Fp32m
    0U,	// DIVR_Fp64m
    0U,	// DIVR_Fp64m32
    0U,	// DIVR_Fp80m32
    0U,	// DIVR_Fp80m64
    0U,	// DIVR_FpI16m32
    0U,	// DIVR_FpI16m64
    0U,	// DIVR_FpI16m80
    0U,	// DIVR_FpI32m32
    0U,	// DIVR_FpI32m64
    0U,	// DIVR_FpI32m80
    79694099U,	// DIVR_FrST0
    603982113U,	// DIVSDrm
    603982113U,	// DIVSDrm_Int
    205654305U,	// DIVSDrr
    205654305U,	// DIVSDrr_Int
    671090984U,	// DIVSSrm
    671090984U,	// DIVSSrm_Int
    205654312U,	// DIVSSrr
    205654312U,	// DIVSSrr_Int
    738199855U,	// DIV_F32m
    805308726U,	// DIV_F64m
    872417597U,	// DIV_FI16m
    952109381U,	// DIV_FI32m
    79694157U,	// DIV_FPrST0
    79694165U,	// DIV_FST0r
    0U,	// DIV_Fp32
    0U,	// DIV_Fp32m
    0U,	// DIV_Fp64
    0U,	// DIV_Fp64m
    0U,	// DIV_Fp64m32
    0U,	// DIV_Fp80
    0U,	// DIV_Fp80m32
    0U,	// DIV_Fp80m64
    0U,	// DIV_FpI16m32
    0U,	// DIV_FpI16m64
    0U,	// DIV_FpI16m80
    0U,	// DIV_FpI32m32
    0U,	// DIV_FpI32m64
    0U,	// DIV_FpI32m80
    79694171U,	// DIV_FrST0
    1021315434U,	// DPPDrmi
    1073744234U,	// DPPDrri
    1021315440U,	// DPPSrmi
    1073744240U,	// DPPSrri
    2422U,	// DS_PREFIX
    79694201U,	// EH_RETURN
    79694201U,	// EH_RETURN64
    70388112U,	// ENTER
    2455U,	// ES_PREFIX
    2178156954U,	// EXTRACTPSmr
    230033818U,	// EXTRACTPSrr
    2469U,	// F2XM1
    70388139U,	// FARCALL16i
    2214594995U,	// FARCALL16m
    70388156U,	// FARCALL32i
    2214595012U,	// FARCALL32m
    2214595021U,	// FARCALL64
    70388182U,	// FARJMP16i
    2214595037U,	// FARJMP16m
    70388197U,	// FARJMP32i
    2214595052U,	// FARJMP32m
    2214595060U,	// FARJMP64
    738200060U,	// FBLDm
    738200066U,	// FBSTPm
    738200073U,	// FCOM32m
    805308944U,	// FCOM64m
    738200088U,	// FCOMP32m
    805308960U,	// FCOMP64m
    2601U,	// FCOMPP
    2608U,	// FDECSTP
    79694392U,	// FFREE
    872417855U,	// FICOM16m
    952109639U,	// FICOM32m
    872417871U,	// FICOMP16m
    952109656U,	// FICOMP32m
    2657U,	// FINCSTP
    872417897U,	// FLDCW16m
    738200176U,	// FLDENVm
    2680U,	// FLDL2E
    2687U,	// FLDL2T
    2694U,	// FLDLG2
    2701U,	// FLDLN2
    2708U,	// FLDPI
    2714U,	// FNCLEX
    2721U,	// FNINIT
    2728U,	// FNOP
    872417965U,	// FNSTCW16m
    2741U,	// FNSTSW8r
    738200256U,	// FNSTSWm
    2760U,	// FP32_TO_INT16_IN_MEM
    2791U,	// FP32_TO_INT32_IN_MEM
    2822U,	// FP32_TO_INT64_IN_MEM
    2853U,	// FP64_TO_INT16_IN_MEM
    2884U,	// FP64_TO_INT32_IN_MEM
    2915U,	// FP64_TO_INT64_IN_MEM
    2946U,	// FP80_TO_INT16_IN_MEM
    2977U,	// FP80_TO_INT32_IN_MEM
    3008U,	// FP80_TO_INT64_IN_MEM
    3039U,	// FPATAN
    3046U,	// FPREM
    3052U,	// FPREM1
    3059U,	// FPTAN
    3065U,	// FP_REG_KILL
    3079U,	// FRNDINT
    738200591U,	// FRSTORm
    738200599U,	// FSAVEm
    3103U,	// FSCALE
    3110U,	// FSINCOS
    738200622U,	// FSTENVm
    1342180407U,	// FS_MOV32rm
    3137U,	// FS_PREFIX
    3140U,	// FXAM
    2214595657U,	// FXRSTOR
    2214595666U,	// FXSAVE
    3162U,	// FXTRACT
    3170U,	// FYL2X
    3176U,	// FYL2XP1
    0U,	// FpGET_ST0_32
    0U,	// FpGET_ST0_64
    0U,	// FpGET_ST0_80
    0U,	// FpGET_ST1_32
    0U,	// FpGET_ST1_64
    0U,	// FpGET_ST1_80
    0U,	// FpSET_ST0_32
    0U,	// FpSET_ST0_64
    0U,	// FpSET_ST0_80
    0U,	// FpSET_ST1_32
    0U,	// FpSET_ST1_64
    0U,	// FpSET_ST1_80
    536871139U,	// FsANDNPDrm
    205652195U,	// FsANDNPDrr
    536871147U,	// FsANDNPSrm
    205652203U,	// FsANDNPSrr
    536871155U,	// FsANDPDrm
    205652211U,	// FsANDPDrr
    536871162U,	// FsANDPSrm
    205652218U,	// FsANDPSrr
    0U,	// FsFLD0SD
    0U,	// FsFLD0SS
    1946160240U,	// FsMOVAPDrm
    1279396976U,	// FsMOVAPDrr
    1946160248U,	// FsMOVAPSrm
    1279396984U,	// FsMOVAPSrr
    536874112U,	// FsORPDrm
    205655168U,	// FsORPDrr
    536874118U,	// FsORPSrm
    205655174U,	// FsORPSrr
    536874124U,	// FsXORPDrm
    205655180U,	// FsXORPDrr
    536874131U,	// FsXORPSrm
    205655187U,	// FsXORPSrr
    1342180506U,	// GS_MOV32rm
    3236U,	// GS_PREFIX
    536874151U,	// HADDPDrm
    205655207U,	// HADDPDrr
    536874159U,	// HADDPSrm
    205655215U,	// HADDPSrr
    3255U,	// HLT
    536874171U,	// HSUBPDrm
    205655227U,	// HSUBPDrr
    536874179U,	// HSUBPSrm
    205655235U,	// HSUBPSrr
    872418507U,	// IDIV16m
    79695051U,	// IDIV16r
    952110290U,	// IDIV32m
    79695058U,	// IDIV32r
    1476398297U,	// IDIV64m
    79695065U,	// IDIV64r
    1610616032U,	// IDIV8m
    79695072U,	// IDIV8r
    872418535U,	// ILD_F16m
    952110318U,	// ILD_F32m
    1476398325U,	// ILD_F64m
    0U,	// ILD_Fp16m32
    0U,	// ILD_Fp16m64
    0U,	// ILD_Fp16m80
    0U,	// ILD_Fp32m32
    0U,	// ILD_Fp32m64
    0U,	// ILD_Fp32m80
    0U,	// ILD_Fp64m32
    0U,	// ILD_Fp64m64
    0U,	// ILD_Fp64m80
    872418557U,	// IMUL16m
    79695101U,	// IMUL16r
    272764157U,	// IMUL16rm
    2178944253U,	// IMUL16rmi
    2178944253U,	// IMUL16rmi8
    205655293U,	// IMUL16rr
    230034685U,	// IMUL16rri
    230034685U,	// IMUL16rri8
    952110340U,	// IMUL32m
    79695108U,	// IMUL32r
    339873028U,	// IMUL32rm
    2181041412U,	// IMUL32rmi
    2181041412U,	// IMUL32rmi8
    205655300U,	// IMUL32rr
    230034692U,	// IMUL32rri
    230034692U,	// IMUL32rri8
    1476398347U,	// IMUL64m
    79695115U,	// IMUL64r
    406981899U,	// IMUL64rm
    2183138571U,	// IMUL64rmi32
    2183138571U,	// IMUL64rmi8
    205655307U,	// IMUL64rr
    230034699U,	// IMUL64rri32
    230034699U,	// IMUL64rri8
    1610616082U,	// IMUL8m
    79695122U,	// IMUL8r
    3353U,	// IN16
    67112222U,	// IN16ri
    3363U,	// IN16rr
    3376U,	// IN32
    73403701U,	// IN32ri
    3386U,	// IN32rr
    3400U,	// IN8
    77598029U,	// IN8ri
    3410U,	// IN8rr
    872418655U,	// INC16m
    79695199U,	// INC16r
    952110437U,	// INC32m
    79695205U,	// INC32r
    872418655U,	// INC64_16m
    79695199U,	// INC64_16r
    952110437U,	// INC64_32m
    79695205U,	// INC64_32r
    1476398443U,	// INC64m
    79695211U,	// INC64r
    1610616177U,	// INC8m
    79695217U,	// INC8r
    1044385143U,	// INSERTPSrm
    1073745271U,	// INSERTPSrr
    79695233U,	// INT
    3462U,	// INT3
    3468U,	// INVD
    3473U,	// INVEPT
    1610616216U,	// INVLPG
    3488U,	// INVVPID
    3496U,	// IRET16
    3502U,	// IRET32
    3508U,	// IRET64
    872418746U,	// ISTT_FP16m
    952110531U,	// ISTT_FP32m
    1476398540U,	// ISTT_FP64m
    0U,	// ISTT_Fp16m32
    0U,	// ISTT_Fp16m64
    0U,	// ISTT_Fp16m80
    0U,	// ISTT_Fp32m32
    0U,	// ISTT_Fp32m64
    0U,	// ISTT_Fp32m80
    0U,	// ISTT_Fp64m32
    0U,	// ISTT_Fp64m64
    0U,	// ISTT_Fp64m80
    872418774U,	// IST_F16m
    952110557U,	// IST_F32m
    872418788U,	// IST_FP16m
    952110572U,	// IST_FP32m
    1476398580U,	// IST_FP64m
    0U,	// IST_Fp16m32
    0U,	// IST_Fp16m64
    0U,	// IST_Fp16m80
    0U,	// IST_Fp32m32
    0U,	// IST_Fp32m64
    0U,	// IST_Fp32m80
    0U,	// IST_Fp64m32
    0U,	// IST_Fp64m64
    0U,	// IST_Fp64m80
    1768818469U,	// Int_CMPSDrm
    1835796261U,	// Int_CMPSDrr
    1771046693U,	// Int_CMPSSrm
    1837893413U,	// Int_CMPSSrr
    1946158976U,	// Int_COMISDrm
    1279395712U,	// Int_COMISDrr
    1946158984U,	// Int_COMISSrm
    1279395720U,	// Int_COMISSrr
    1409288135U,	// Int_CVTDQ2PDrm
    1279395783U,	// Int_CVTDQ2PDrr
    2281703377U,	// Int_CVTDQ2PSrm
    1279395793U,	// Int_CVTDQ2PSrr
    1946159067U,	// Int_CVTPD2DQrm
    1279395803U,	// Int_CVTPD2DQrr
    1946160637U,	// Int_CVTPD2PIrm
    1279397373U,	// Int_CVTPD2PIrr
    1946159077U,	// Int_CVTPD2PSrm
    1279395813U,	// Int_CVTPD2PSrr
    1409289735U,	// Int_CVTPI2PDrm
    1279397383U,	// Int_CVTPI2PDrr
    406982161U,	// Int_CVTPI2PSrm
    205655569U,	// Int_CVTPI2PSrr
    1946159087U,	// Int_CVTPS2DQrm
    1279395823U,	// Int_CVTPS2DQrr
    2013267961U,	// Int_CVTPS2PDrm
    1279395833U,	// Int_CVTPS2PDrr
    2013269531U,	// Int_CVTPS2PIrm
    1279397403U,	// Int_CVTPS2PIrr
    1946159107U,	// Int_CVTSD2SI64rm
    1279395843U,	// Int_CVTSD2SI64rr
    1946160677U,	// Int_CVTSD2SIrm
    1279397413U,	// Int_CVTSD2SIrr
    603981838U,	// Int_CVTSD2SSrm
    205654030U,	// Int_CVTSD2SSrr
    406980632U,	// Int_CVTSI2SD64rm
    205654040U,	// Int_CVTSI2SD64rr
    339871779U,	// Int_CVTSI2SDrm
    205654051U,	// Int_CVTSI2SDrr
    406980653U,	// Int_CVTSI2SS64rm
    205654061U,	// Int_CVTSI2SS64rr
    339871800U,	// Int_CVTSI2SSrm
    205654072U,	// Int_CVTSI2SSrr
    671090754U,	// Int_CVTSS2SDrm
    205654082U,	// Int_CVTSS2SDrr
    2080376908U,	// Int_CVTSS2SI64rm
    1279395916U,	// Int_CVTSS2SI64rr
    2080378415U,	// Int_CVTSS2SIrm
    1279397423U,	// Int_CVTSS2SIrr
    1946160697U,	// Int_CVTTPD2DQrm
    1279397433U,	// Int_CVTTPD2DQrr
    1946160708U,	// Int_CVTTPD2PIrm
    1279397444U,	// Int_CVTTPD2PIrr
    1946159202U,	// Int_CVTTPS2DQrm
    1279395938U,	// Int_CVTTPS2DQrr
    2013269583U,	// Int_CVTTPS2PIrm
    1279397455U,	// Int_CVTTPS2PIrr
    1946159213U,	// Int_CVTTSD2SI64rm
    1279395949U,	// Int_CVTTSD2SI64rr
    1946159225U,	// Int_CVTTSD2SIrm
    1279395961U,	// Int_CVTTSD2SIrr
    2080376964U,	// Int_CVTTSS2SI64rm
    1279395972U,	// Int_CVTTSS2SI64rr
    2080376976U,	// Int_CVTTSS2SIrm
    1279395984U,	// Int_CVTTSS2SIrr
    1946160730U,	// Int_UCOMISDrm
    1279397466U,	// Int_UCOMISDrr
    1946160739U,	// Int_UCOMISSrm
    1279397475U,	// Int_UCOMISSrr
    1556090476U,	// JAE_1
    1556090476U,	// JAE_4
    1556090481U,	// JA_1
    1556090481U,	// JA_4
    1556090485U,	// JBE_1
    1556090485U,	// JBE_4
    1556090490U,	// JB_1
    1556090490U,	// JB_4
    1556090494U,	// JCXZ8
    1556090500U,	// JE_1
    1556090500U,	// JE_4
    1556090504U,	// JGE_1
    1556090504U,	// JGE_4
    1556090509U,	// JG_1
    1556090509U,	// JG_4
    1556090513U,	// JLE_1
    1556090513U,	// JLE_4
    1556090518U,	// JL_1
    1556090518U,	// JL_4
    952110746U,	// JMP32m
    79695514U,	// JMP32r
    1476398753U,	// JMP64m
    1556090536U,	// JMP64pcrel32
    79695521U,	// JMP64r
    1556090542U,	// JMP_1
    1556090542U,	// JMP_4
    1556090547U,	// JNE_1
    1556090547U,	// JNE_4
    1556090552U,	// JNO_1
    1556090552U,	// JNO_4
    1556090557U,	// JNP_1
    1556090557U,	// JNP_4
    1556090562U,	// JNS_1
    1556090562U,	// JNS_4
    1556090567U,	// JO_1
    1556090567U,	// JO_4
    1556090571U,	// JP_1
    1556090571U,	// JP_4
    1556090575U,	// JS_1
    1556090575U,	// JS_4
    3795U,	// LAHF
    1207963352U,	// LAR16rm
    1279397592U,	// LAR16rr
    1207963358U,	// LAR32rm
    1279397598U,	// LAR32rr
    1207963364U,	// LAR64rm
    1279397604U,	// LAR64rr
    136318698U,	// LCMPXCHG16
    136580858U,	// LCMPXCHG32
    174067466U,	// LCMPXCHG64
    136843034U,	// LCMPXCHG8
    1476398890U,	// LCMPXCHG8B
    2281705275U,	// LDDQUrm
    952110914U,	// LDMXCSR
    2348814155U,	// LDS16rm
    2348814161U,	// LDS32rm
    3927U,	// LD_F0
    3932U,	// LD_F1
    738201441U,	// LD_F32m
    805310311U,	// LD_F64m
    2415923053U,	// LD_F80m
    0U,	// LD_Fp032
    0U,	// LD_Fp064
    0U,	// LD_Fp080
    0U,	// LD_Fp132
    0U,	// LD_Fp164
    0U,	// LD_Fp180
    0U,	// LD_Fp32m
    0U,	// LD_Fp32m64
    0U,	// LD_Fp32m80
    0U,	// LD_Fp64m
    0U,	// LD_Fp64m80
    0U,	// LD_Fp80m
    79695731U,	// LD_Frr
    2483031928U,	// LEA16r
    2483031934U,	// LEA32r
    2550140798U,	// LEA64_32r
    2617249668U,	// LEA64r
    3978U,	// LEAVE
    3978U,	// LEAVE64
    2348814224U,	// LES16rm
    2348814230U,	// LES32rm
    3996U,	// LFENCE
    2348814243U,	// LFS16rm
    2348814249U,	// LFS32rm
    2348814255U,	// LFS64rm
    2214596533U,	// LGDTm
    2348814267U,	// LGS16rm
    2348814273U,	// LGS32rm
    2348814279U,	// LGS64rm
    2214596557U,	// LIDTm
    872419283U,	// LLDT16m
    79695827U,	// LLDT16r
    872419290U,	// LMSW16m
    79695834U,	// LMSW16r
    136318945U,	// LOCK_ADD16mi
    136318945U,	// LOCK_ADD16mi8
    136318945U,	// LOCK_ADD16mr
    136581101U,	// LOCK_ADD32mi
    136581101U,	// LOCK_ADD32mi8
    136581101U,	// LOCK_ADD32mr
    136712185U,	// LOCK_ADD64mi32
    136712185U,	// LOCK_ADD64mi8
    136712185U,	// LOCK_ADD64mr
    136843269U,	// LOCK_ADD8mi
    136843269U,	// LOCK_ADD8mr
    872419345U,	// LOCK_DEC16m
    952111133U,	// LOCK_DEC32m
    1476399145U,	// LOCK_DEC64m
    1610616885U,	// LOCK_DEC8m
    872419393U,	// LOCK_INC16m
    952111181U,	// LOCK_INC32m
    1476399193U,	// LOCK_INC64m
    1610616933U,	// LOCK_INC8m
    4209U,	// LOCK_PREFIX
    136319094U,	// LOCK_SUB16mi
    136319094U,	// LOCK_SUB16mi8
    136319094U,	// LOCK_SUB16mr
    136581250U,	// LOCK_SUB32mi
    136581250U,	// LOCK_SUB32mi8
    136581250U,	// LOCK_SUB32mr
    136712334U,	// LOCK_SUB64mi32
    136712334U,	// LOCK_SUB64mi8
    136712334U,	// LOCK_SUB64mr
    136843418U,	// LOCK_SUB8mi
    136843418U,	// LOCK_SUB8mr
    4262U,	// LODSB
    4268U,	// LODSD
    4274U,	// LODSQ
    4280U,	// LODSW
    1556091070U,	// LOOP
    1556091076U,	// LOOPE
    1556091083U,	// LOOPNE
    4307U,	// LRET
    79696088U,	// LRETI
    1207963870U,	// LSL16rm
    1279398110U,	// LSL16rr
    1342181604U,	// LSL32rm
    1279398116U,	// LSL32rr
    1409290474U,	// LSL64rm
    1279398122U,	// LSL64rr
    2348814576U,	// LSS16rm
    2348814582U,	// LSS32rm
    2348814588U,	// LSS64rm
    872419586U,	// LTRm
    79696130U,	// LTRr
    1317146888U,	// LXADD16
    1319244053U,	// LXADD32
    1321341218U,	// LXADD64
    1323438382U,	// LXADD8
    1279398203U,	// MASKMOVDQU
    1279398203U,	// MASKMOVDQU64
    536875335U,	// MAXPDrm
    536875335U,	// MAXPDrm_Int
    205656391U,	// MAXPDrr
    205656391U,	// MAXPDrr_Int
    536875342U,	// MAXPSrm
    536875342U,	// MAXPSrm_Int
    205656398U,	// MAXPSrr
    205656398U,	// MAXPSrr_Int
    603984213U,	// MAXSDrm
    603984213U,	// MAXSDrm_Int
    205656405U,	// MAXSDrr
    205656405U,	// MAXSDrr_Int
    671093084U,	// MAXSSrm
    671093084U,	// MAXSSrm_Int
    205656412U,	// MAXSSrr
    205656412U,	// MAXSSrr_Int
    4451U,	// MFENCE
    4458U,	// MINGW_ALLOCA
    536875397U,	// MINPDrm
    536875397U,	// MINPDrm_Int
    205656453U,	// MINPDrr
    205656453U,	// MINPDrr_Int
    536875404U,	// MINPSrm
    536875404U,	// MINPSrm_Int
    205656460U,	// MINPSrr
    205656460U,	// MINPSrr_Int
    603984275U,	// MINSDrm
    603984275U,	// MINSDrm_Int
    205656467U,	// MINSDrr
    205656467U,	// MINSDrr_Int
    671093146U,	// MINSSrm
    671093146U,	// MINSSrm_Int
    205656474U,	// MINSSrr
    205656474U,	// MINSSrr_Int
    1946160637U,	// MMX_CVTPD2PIrm
    1279397373U,	// MMX_CVTPD2PIrr
    1409289735U,	// MMX_CVTPI2PDrm
    1279397383U,	// MMX_CVTPI2PDrr
    1409289745U,	// MMX_CVTPI2PSrm
    1279397393U,	// MMX_CVTPI2PSrr
    2013269531U,	// MMX_CVTPS2PIrm
    1279397403U,	// MMX_CVTPS2PIrr
    1946160708U,	// MMX_CVTTPD2PIrm
    1279397444U,	// MMX_CVTTPD2PIrr
    2013269583U,	// MMX_CVTTPS2PIrm
    1279397455U,	// MMX_CVTTPS2PIrr
    4513U,	// MMX_EMMS
    4518U,	// MMX_FEMMS
    1279398316U,	// MMX_MASKMOVQ
    1279398316U,	// MMX_MASKMOVQ64
    1279398326U,	// MMX_MOVD64from64rr
    1279398326U,	// MMX_MOVD64grr
    136581558U,	// MMX_MOVD64mr
    1342181814U,	// MMX_MOVD64rm
    1279398326U,	// MMX_MOVD64rr
    1279398326U,	// MMX_MOVD64rrv164
    1279398326U,	// MMX_MOVD64to64rr
    1279398332U,	// MMX_MOVDQ2Qrr
    136712645U,	// MMX_MOVNTQmr
    1279398349U,	// MMX_MOVQ2DQrr
    1279398349U,	// MMX_MOVQ2FR64rr
    136712662U,	// MMX_MOVQ64gmr
    136712662U,	// MMX_MOVQ64mr
    1409290710U,	// MMX_MOVQ64rm
    1279398358U,	// MMX_MOVQ64rr
    1342181814U,	// MMX_MOVZDI2PDIrm
    1279398326U,	// MMX_MOVZDI2PDIrr
    406983132U,	// MMX_PACKSSDWrm
    205656540U,	// MMX_PACKSSDWrr
    406983142U,	// MMX_PACKSSWBrm
    205656550U,	// MMX_PACKSSWBrr
    406983152U,	// MMX_PACKUSWBrm
    205656560U,	// MMX_PACKUSWBrr
    406983162U,	// MMX_PADDBrm
    205656570U,	// MMX_PADDBrr
    406983169U,	// MMX_PADDDrm
    205656577U,	// MMX_PADDDrr
    406983176U,	// MMX_PADDQrm
    205656584U,	// MMX_PADDQrr
    406983183U,	// MMX_PADDSBrm
    205656591U,	// MMX_PADDSBrr
    406983191U,	// MMX_PADDSWrm
    205656599U,	// MMX_PADDSWrr
    406983199U,	// MMX_PADDUSBrm
    205656607U,	// MMX_PADDUSBrr
    406983208U,	// MMX_PADDUSWrm
    205656616U,	// MMX_PADDUSWrr
    406983217U,	// MMX_PADDWrm
    205656625U,	// MMX_PADDWrr
    406983224U,	// MMX_PANDNrm
    205656632U,	// MMX_PANDNrr
    406983231U,	// MMX_PANDrm
    205656639U,	// MMX_PANDrr
    406983237U,	// MMX_PAVGBrm
    205656645U,	// MMX_PAVGBrr
    406983244U,	// MMX_PAVGWrm
    205656652U,	// MMX_PAVGWrr
    406983251U,	// MMX_PCMPEQBrm
    205656659U,	// MMX_PCMPEQBrr
    406983260U,	// MMX_PCMPEQDrm
    205656668U,	// MMX_PCMPEQDrr
    406983269U,	// MMX_PCMPEQWrm
    205656677U,	// MMX_PCMPEQWrr
    406983278U,	// MMX_PCMPGTBrm
    205656686U,	// MMX_PCMPGTBrr
    406983287U,	// MMX_PCMPGTDrm
    205656695U,	// MMX_PCMPGTDrr
    406983296U,	// MMX_PCMPGTWrm
    205656704U,	// MMX_PCMPGTWrr
    230036105U,	// MMX_PEXTRWri
    1050022545U,	// MMX_PINSRWrmi
    1073746577U,	// MMX_PINSRWrri
    406983321U,	// MMX_PMADDWDrm
    205656729U,	// MMX_PMADDWDrr
    406983330U,	// MMX_PMAXSWrm
    205656738U,	// MMX_PMAXSWrr
    406983338U,	// MMX_PMAXUBrm
    205656746U,	// MMX_PMAXUBrr
    406983346U,	// MMX_PMINSWrm
    205656754U,	// MMX_PMINSWrr
    406983354U,	// MMX_PMINUBrm
    205656762U,	// MMX_PMINUBrr
    1279398594U,	// MMX_PMOVMSKBrr
    406983372U,	// MMX_PMULHUWrm
    205656780U,	// MMX_PMULHUWrr
    406983381U,	// MMX_PMULHWrm
    205656789U,	// MMX_PMULHWrr
    406983389U,	// MMX_PMULLWrm
    205656797U,	// MMX_PMULLWrr
    406983397U,	// MMX_PMULUDQrm
    205656805U,	// MMX_PMULUDQrr
    406983406U,	// MMX_PORrm
    205656814U,	// MMX_PORrr
    406983411U,	// MMX_PSADBWrm
    205656819U,	// MMX_PSADBWrr
    2183140091U,	// MMX_PSHUFWmi
    230036219U,	// MMX_PSHUFWri
    205656835U,	// MMX_PSLLDri
    406983427U,	// MMX_PSLLDrm
    205656835U,	// MMX_PSLLDrr
    205656842U,	// MMX_PSLLQri
    406983434U,	// MMX_PSLLQrm
    205656842U,	// MMX_PSLLQrr
    205656849U,	// MMX_PSLLWri
    406983441U,	// MMX_PSLLWrm
    205656849U,	// MMX_PSLLWrr
    205656856U,	// MMX_PSRADri
    406983448U,	// MMX_PSRADrm
    205656856U,	// MMX_PSRADrr
    205656863U,	// MMX_PSRAWri
    406983455U,	// MMX_PSRAWrm
    205656863U,	// MMX_PSRAWrr
    205656870U,	// MMX_PSRLDri
    406983462U,	// MMX_PSRLDrm
    205656870U,	// MMX_PSRLDrr
    205656877U,	// MMX_PSRLQri
    406983469U,	// MMX_PSRLQrm
    205656877U,	// MMX_PSRLQrr
    205656884U,	// MMX_PSRLWri
    406983476U,	// MMX_PSRLWrm
    205656884U,	// MMX_PSRLWrr
    406983483U,	// MMX_PSUBBrm
    205656891U,	// MMX_PSUBBrr
    406983490U,	// MMX_PSUBDrm
    205656898U,	// MMX_PSUBDrr
    406983497U,	// MMX_PSUBQrm
    205656905U,	// MMX_PSUBQrr
    406983504U,	// MMX_PSUBSBrm
    205656912U,	// MMX_PSUBSBrr
    406983512U,	// MMX_PSUBSWrm
    205656920U,	// MMX_PSUBSWrr
    406983520U,	// MMX_PSUBUSBrm
    205656928U,	// MMX_PSUBUSBrr
    406983529U,	// MMX_PSUBUSWrm
    205656937U,	// MMX_PSUBUSWrr
    406983538U,	// MMX_PSUBWrm
    205656946U,	// MMX_PSUBWrr
    406983545U,	// MMX_PUNPCKHBWrm
    205656953U,	// MMX_PUNPCKHBWrr
    406983556U,	// MMX_PUNPCKHDQrm
    205656964U,	// MMX_PUNPCKHDQrr
    406983567U,	// MMX_PUNPCKHWDrm
    205656975U,	// MMX_PUNPCKHWDrr
    406983578U,	// MMX_PUNPCKLBWrm
    205656986U,	// MMX_PUNPCKLBWrr
    406983589U,	// MMX_PUNPCKLDQrm
    205656997U,	// MMX_PUNPCKLDQrr
    406983600U,	// MMX_PUNPCKLWDrm
    205657008U,	// MMX_PUNPCKLWDrr
    406983611U,	// MMX_PXORrm
    205657019U,	// MMX_PXORrr
    0U,	// MMX_V_SET0
    0U,	// MMX_V_SETALLONES
    5057U,	// MONITOR
    1556091849U,	// MOV16ao16
    136319956U,	// MOV16mi
    136319956U,	// MOV16mr
    136319956U,	// MOV16ms
    1543508948U,	// MOV16o16a
    0U,	// MOV16r0
    1279398868U,	// MOV16ri
    1207964628U,	// MOV16rm
    1279398868U,	// MOV16rr
    1279398868U,	// MOV16rr_REV
    1279398868U,	// MOV16rs
    1207964628U,	// MOV16sm
    1279398868U,	// MOV16sr
    1556091866U,	// MOV32ao32
    1279398358U,	// MOV32cr
    1279398886U,	// MOV32dr
    136582118U,	// MOV32mi
    136582118U,	// MOV32mr
    1549800422U,	// MOV32o32a
    0U,	// MOV32r0
    1279398358U,	// MOV32rc
    1279398886U,	// MOV32rd
    1279398886U,	// MOV32ri
    1342182374U,	// MOV32rm
    1279398886U,	// MOV32rr
    1279398886U,	// MOV32rr_REV
    1409291244U,	// MOV64FSrm
    1409291254U,	// MOV64GSrm
    1556091904U,	// MOV64ao64
    1556091904U,	// MOV64ao8
    1279398358U,	// MOV64cr
    1279398358U,	// MOV64dr
    136712662U,	// MOV64mi32
    136712662U,	// MOV64mr
    136712662U,	// MOV64ms
    1551897046U,	// MOV64o64a
    1551897046U,	// MOV64o8a
    0U,	// MOV64r0
    1279398358U,	// MOV64rc
    1279398358U,	// MOV64rd
    1279398924U,	// MOV64ri
    1279398358U,	// MOV64ri32
    0U,	// MOV64ri64i32
    1409290710U,	// MOV64rm
    1279398358U,	// MOV64rr
    1279398358U,	// MOV64rr_REV
    1279398358U,	// MOV64rs
    1409290710U,	// MOV64sm
    1279398358U,	// MOV64sr
    1279398326U,	// MOV64toPQIrr
    1409290710U,	// MOV64toSDrm
    1279398326U,	// MOV64toSDrr
    1556091925U,	// MOV8ao8
    136844320U,	// MOV8mi
    136844320U,	// MOV8mr
    136877088U,	// MOV8mr_NOREX
    1553994784U,	// MOV8o8a
    0U,	// MOV8r0
    1279398944U,	// MOV8ri
    1690309664U,	// MOV8rm
    1728058400U,	// MOV8rm_NOREX
    1279398944U,	// MOV8rr
    1280840736U,	// MOV8rr_NOREX
    1279398944U,	// MOV8rr_REV
    138022000U,	// MOVAPDmr
    1946160240U,	// MOVAPDrm
    1279396976U,	// MOVAPDrr
    138022008U,	// MOVAPSmr
    1946160248U,	// MOVAPSrm
    1279396984U,	// MOVAPSrr
    2013271078U,	// MOVDDUPrm
    1279398950U,	// MOVDDUPrr
    1342181814U,	// MOVDI2PDIrm
    1279398326U,	// MOVDI2PDIrr
    1342181814U,	// MOVDI2SSrm
    1279398326U,	// MOVDI2SSrr
    138155055U,	// MOVDQAmr
    2281706543U,	// MOVDQArm
    1279398959U,	// MOVDQArr
    138155063U,	// MOVDQUmr
    138155063U,	// MOVDQUmr_Int
    2281706551U,	// MOVDQUrm
    2281706551U,	// MOVDQUrm_Int
    205657151U,	// MOVHLPSrr
    138286152U,	// MOVHPDmr
    603984968U,	// MOVHPDrm
    138286160U,	// MOVHPSmr
    603984976U,	// MOVHPSrm
    205657176U,	// MOVLHPSrr
    138286177U,	// MOVLPDmr
    603984993U,	// MOVLPDrm
    138286185U,	// MOVLPSmr
    603985001U,	// MOVLPSrm
    136712662U,	// MOVLQ128mr
    1279399025U,	// MOVMSKPDrr
    1279399035U,	// MOVMSKPSrr
    2281706629U,	// MOVNTDQArm
    138024079U,	// MOVNTDQ_64mr
    138024079U,	// MOVNTDQmr
    138024079U,	// MOVNTDQmr_Int
    136713368U,	// MOVNTI_64mr
    136582296U,	// MOVNTImr
    136582296U,	// MOVNTImr_Int
    138024096U,	// MOVNTPDmr
    138155168U,	// MOVNTPDmr_Int
    138024105U,	// MOVNTPSmr
    138155177U,	// MOVNTPSmr_Int
    0U,	// MOVPC32r
    136581558U,	// MOVPDI2DImr
    1279398326U,	// MOVPDI2DIrr
    136712662U,	// MOVPQI2QImr
    1279398326U,	// MOVPQIto64rr
    1409290710U,	// MOVQI2PQIrm
    1279398358U,	// MOVQxrxr
    5298U,	// MOVSB
    5304U,	// MOVSD
    138286270U,	// MOVSDmr
    2013271230U,	// MOVSDrm
    205657278U,	// MOVSDrr
    136712662U,	// MOVSDto64mr
    1279398326U,	// MOVSDto64rr
    1946162373U,	// MOVSHDUPrm
    1279399109U,	// MOVSHDUPrr
    1946162383U,	// MOVSLDUPrm
    1279399119U,	// MOVSLDUPrr
    136581558U,	// MOVSS2DImr
    1279398326U,	// MOVSS2DIrr
    137630937U,	// MOVSSmr
    2080380121U,	// MOVSSrm
    205657305U,	// MOVSSrr
    5344U,	// MOVSW
    0U,	// MOVSX16rm8
    1690309862U,	// MOVSX16rm8W
    0U,	// MOVSX16rr8
    1279399142U,	// MOVSX16rr8W
    1207964910U,	// MOVSX32rm16
    1690309878U,	// MOVSX32rm8
    1279399150U,	// MOVSX32rr16
    1279399158U,	// MOVSX32rr8
    1207964926U,	// MOVSX64rm16
    1342182662U,	// MOVSX64rm32
    1690309902U,	// MOVSX64rm8
    1279399166U,	// MOVSX64rr16
    1279399174U,	// MOVSX64rr32
    1279399182U,	// MOVSX64rr8
    138024214U,	// MOVUPDmr
    138024214U,	// MOVUPDmr_Int
    1946162454U,	// MOVUPDrm
    1946162454U,	// MOVUPDrm_Int
    1279399190U,	// MOVUPDrr
    138024222U,	// MOVUPSmr
    138024222U,	// MOVUPSmr_Int
    1946162462U,	// MOVUPSrm
    1946162462U,	// MOVUPSrm_Int
    1279399198U,	// MOVUPSrr
    1342181814U,	// MOVZDI2PDIrm
    1279398326U,	// MOVZDI2PDIrr
    2281705942U,	// MOVZPQILo2PQIrm
    1279398358U,	// MOVZPQILo2PQIrr
    1409290710U,	// MOVZQI2PQIrm
    1279398326U,	// MOVZQI2PQIrr
    0U,	// MOVZX16rm8
    1690309926U,	// MOVZX16rm8W
    0U,	// MOVZX16rr8
    1279399206U,	// MOVZX16rr8W
    1728058670U,	// MOVZX32_NOREXrm8
    1280841006U,	// MOVZX32_NOREXrr8
    1207964982U,	// MOVZX32rm16
    1690309934U,	// MOVZX32rm8
    1279399222U,	// MOVZX32rr16
    1279399214U,	// MOVZX32rr8
    0U,	// MOVZX64rm16
    1207964990U,	// MOVZX64rm16_Q
    0U,	// MOVZX64rm32
    0U,	// MOVZX64rm8
    1690309958U,	// MOVZX64rm8_Q
    0U,	// MOVZX64rr16
    1279399230U,	// MOVZX64rr16_Q
    0U,	// MOVZX64rr32
    0U,	// MOVZX64rr8
    1279399238U,	// MOVZX64rr8_Q
    0U,	// MOV_Fp3232
    0U,	// MOV_Fp3264
    0U,	// MOV_Fp3280
    0U,	// MOV_Fp6432
    0U,	// MOV_Fp6464
    0U,	// MOV_Fp6480
    0U,	// MOV_Fp8032
    0U,	// MOV_Fp8064
    0U,	// MOV_Fp8080
    1021318478U,	// MPSADBWrmi
    1073747278U,	// MPSADBWrri
    872420695U,	// MUL16m
    79697239U,	// MUL16r
    952112477U,	// MUL32m
    79697245U,	// MUL32r
    1476400483U,	// MUL64m
    79697251U,	// MUL64r
    1610618217U,	// MUL8m
    79697257U,	// MUL8r
    536876399U,	// MULPDrm
    205657455U,	// MULPDrr
    536876406U,	// MULPSrm
    205657462U,	// MULPSrr
    603985277U,	// MULSDrm
    603985277U,	// MULSDrm_Int
    205657469U,	// MULSDrr
    205657469U,	// MULSDrr_Int
    671094148U,	// MULSSrm
    671094148U,	// MULSSrm_Int
    205657476U,	// MULSSrr
    205657476U,	// MULSSrr_Int
    738203019U,	// MUL_F32m
    805311890U,	// MUL_F64m
    872420761U,	// MUL_FI16m
    952112545U,	// MUL_FI32m
    79697321U,	// MUL_FPrST0
    79697328U,	// MUL_FST0r
    0U,	// MUL_Fp32
    0U,	// MUL_Fp32m
    0U,	// MUL_Fp64
    0U,	// MUL_Fp64m
    0U,	// MUL_Fp64m32
    0U,	// MUL_Fp80
    0U,	// MUL_Fp80m32
    0U,	// MUL_Fp80m64
    0U,	// MUL_FpI16m32
    0U,	// MUL_FpI16m64
    0U,	// MUL_FpI16m80
    0U,	// MUL_FpI32m32
    0U,	// MUL_FpI32m64
    0U,	// MUL_FpI32m80
    79697334U,	// MUL_FrST0
    5572U,	// MWAIT
    872420810U,	// NEG16m
    79697354U,	// NEG16r
    952112592U,	// NEG32m
    79697360U,	// NEG32r
    1476400598U,	// NEG64m
    79697366U,	// NEG64r
    1610618332U,	// NEG8m
    79697372U,	// NEG8r
    5602U,	// NOOP
    952112614U,	// NOOPL
    872420844U,	// NOOPW
    872420850U,	// NOT16m
    79697394U,	// NOT16r
    952112632U,	// NOT32m
    79697400U,	// NOT32r
    1476400638U,	// NOT64m
    79697406U,	// NOT64r
    1610618372U,	// NOT8m
    79697412U,	// NOT8r
    67114506U,	// OR16i16
    136320522U,	// OR16mi
    136320522U,	// OR16mi8
    136320522U,	// OR16mr
    205657610U,	// OR16ri
    205657610U,	// OR16ri8
    272766474U,	// OR16rm
    205657610U,	// OR16rr
    205657610U,	// OR16rr_REV
    73405967U,	// OR32i32
    136582671U,	// OR32mi
    136582671U,	// OR32mi8
    136582671U,	// OR32mr
    205657615U,	// OR32ri
    205657615U,	// OR32ri8
    339875343U,	// OR32rm
    205657615U,	// OR32rr
    205657615U,	// OR32rr_REV
    75503124U,	// OR64i32
    136713748U,	// OR64mi32
    136713748U,	// OR64mi8
    136713748U,	// OR64mr
    205657620U,	// OR64ri32
    205657620U,	// OR64ri8
    406984212U,	// OR64rm
    205657620U,	// OR64rr
    205657620U,	// OR64rr_REV
    77600281U,	// OR8i8
    136844825U,	// OR8mi
    136844825U,	// OR8mr
    205657625U,	// OR8ri
    474093081U,	// OR8rm
    205657625U,	// OR8rr
    205657625U,	// OR8rr_REV
    536874112U,	// ORPDrm
    205655168U,	// ORPDrr
    536874118U,	// ORPSrm
    205655174U,	// ORPSrr
    79697438U,	// OUT16ir
    5673U,	// OUT16rr
    79697463U,	// OUT32ir
    5699U,	// OUT32rr
    79697490U,	// OUT8ir
    5725U,	// OUT8rr
    5739U,	// OUTSB
    5745U,	// OUTSD
    5751U,	// OUTSW
    2281707133U,	// PABSBrm128
    1409291901U,	// PABSBrm64
    1279399549U,	// PABSBrr128
    1279399549U,	// PABSBrr64
    2281707140U,	// PABSDrm128
    1409291908U,	// PABSDrm64
    1279399556U,	// PABSDrr128
    1279399556U,	// PABSDrr64
    2281707147U,	// PABSWrm128
    1409291915U,	// PABSWrm64
    1279399563U,	// PABSWrr128
    1279399563U,	// PABSWrr64
    1140855260U,	// PACKSSDWrm
    205656540U,	// PACKSSDWrr
    1140855270U,	// PACKSSWBrm
    205656550U,	// PACKSSWBrr
    1140856466U,	// PACKUSDWrm
    205657746U,	// PACKUSDWrr
    1140855280U,	// PACKUSWBrm
    205656560U,	// PACKUSWBrr
    1140855290U,	// PADDBrm
    205656570U,	// PADDBrr
    1140855297U,	// PADDDrm
    205656577U,	// PADDDrr
    1140855304U,	// PADDQrm
    205656584U,	// PADDQrr
    1140855311U,	// PADDSBrm
    205656591U,	// PADDSBrr
    1140855319U,	// PADDSWrm
    205656599U,	// PADDSWrr
    1140855327U,	// PADDUSBrm
    205656607U,	// PADDUSBrr
    1140855336U,	// PADDUSWrm
    205656616U,	// PADDUSWrr
    1140855345U,	// PADDWrm
    205656625U,	// PADDWrr
    1021318812U,	// PALIGNR128rm
    1073747612U,	// PALIGNR128rr
    1054217884U,	// PALIGNR64rm
    1073747612U,	// PALIGNR64rr
    1140855352U,	// PANDNrm
    205656632U,	// PANDNrr
    1140855359U,	// PANDrm
    205656639U,	// PANDrr
    1140855365U,	// PAVGBrm
    205656645U,	// PAVGBrr
    1140855372U,	// PAVGWrm
    205656652U,	// PAVGWrr
    1140856485U,	// PBLENDVBrm0
    205657765U,	// PBLENDVBrr0
    1021318838U,	// PBLENDWrmi
    1073747638U,	// PBLENDWrri
    1140855379U,	// PCMPEQBrm
    205656659U,	// PCMPEQBrr
    1140855388U,	// PCMPEQDrm
    205656668U,	// PCMPEQDrr
    1140856511U,	// PCMPEQQrm
    205657791U,	// PCMPEQQrr
    1140855397U,	// PCMPEQWrm
    205656677U,	// PCMPEQWrr
    2199918280U,	// PCMPESTRIArm
    230037192U,	// PCMPESTRIArr
    2199918280U,	// PCMPESTRICrm
    230037192U,	// PCMPESTRICrr
    2199918280U,	// PCMPESTRIOrm
    230037192U,	// PCMPESTRIOrr
    2199918280U,	// PCMPESTRISrm
    230037192U,	// PCMPESTRISrr
    2199918280U,	// PCMPESTRIZrm
    230037192U,	// PCMPESTRIZrr
    2199918280U,	// PCMPESTRIrm
    230037192U,	// PCMPESTRIrr
    5843U,	// PCMPESTRM128MEM
    5867U,	// PCMPESTRM128REG
    2199918339U,	// PCMPESTRM128rm
    230037251U,	// PCMPESTRM128rr
    1140855406U,	// PCMPGTBrm
    205656686U,	// PCMPGTBrr
    1140855415U,	// PCMPGTDrm
    205656695U,	// PCMPGTDrr
    1140856590U,	// PCMPGTQrm
    205657870U,	// PCMPGTQrr
    1140855424U,	// PCMPGTWrm
    205656704U,	// PCMPGTWrr
    2199918359U,	// PCMPISTRIArm
    230037271U,	// PCMPISTRIArr
    2199918359U,	// PCMPISTRICrm
    230037271U,	// PCMPISTRICrr
    2199918359U,	// PCMPISTRIOrm
    230037271U,	// PCMPISTRIOrr
    2199918359U,	// PCMPISTRISrm
    230037271U,	// PCMPISTRISrr
    2199918359U,	// PCMPISTRIZrm
    230037271U,	// PCMPISTRIZrr
    2199918359U,	// PCMPISTRIrm
    230037271U,	// PCMPISTRIrr
    5922U,	// PCMPISTRM128MEM
    5946U,	// PCMPISTRM128REG
    2199918418U,	// PCMPISTRM128rm
    230037330U,	// PCMPISTRM128rr
    2177374045U,	// PEXTRBmr
    230037341U,	// PEXTRBrr
    2177111909U,	// PEXTRDmr
    230037349U,	// PEXTRDrr
    2177242989U,	// PEXTRQmr
    230037357U,	// PEXTRQrr
    2176848521U,	// PEXTRWmr
    230036105U,	// PEXTRWri
    1140856693U,	// PHADDDrm128
    406984565U,	// PHADDDrm64
    205657973U,	// PHADDDrr128
    205657973U,	// PHADDDrr64
    1140856701U,	// PHADDSWrm128
    406984573U,	// PHADDSWrm64
    205657981U,	// PHADDSWrr128
    205657981U,	// PHADDSWrr64
    1140856710U,	// PHADDWrm128
    406984582U,	// PHADDWrm64
    205657990U,	// PHADDWrr128
    205657990U,	// PHADDWrr64
    2281707406U,	// PHMINPOSUWrm128
    1279399822U,	// PHMINPOSUWrr128
    1140856730U,	// PHSUBDrm128
    406984602U,	// PHSUBDrm64
    205658010U,	// PHSUBDrr128
    205658010U,	// PHSUBDrr64
    1140856738U,	// PHSUBSWrm128
    406984610U,	// PHSUBSWrm64
    205658018U,	// PHSUBSWrr128
    205658018U,	// PHSUBSWrr64
    1140856747U,	// PHSUBWrm128
    406984619U,	// PHSUBWrm64
    205658027U,	// PHSUBWrr128
    205658027U,	// PHSUBWrr64
    1056315315U,	// PINSRBrm
    1073747891U,	// PINSRBrr
    1052121019U,	// PINSRDrm
    1073747899U,	// PINSRDrr
    1054218179U,	// PINSRQrm
    1073747907U,	// PINSRQrr
    1050022545U,	// PINSRWrmi
    1073746577U,	// PINSRWrri
    1140856779U,	// PMADDUBSWrm128
    406984651U,	// PMADDUBSWrm64
    205658059U,	// PMADDUBSWrr128
    205658059U,	// PMADDUBSWrr64
    1140855449U,	// PMADDWDrm
    205656729U,	// PMADDWDrr
    1140856790U,	// PMAXSBrm
    205658070U,	// PMAXSBrr
    1140856798U,	// PMAXSDrm
    205658078U,	// PMAXSDrr
    1140855458U,	// PMAXSWrm
    205656738U,	// PMAXSWrr
    1140855466U,	// PMAXUBrm
    205656746U,	// PMAXUBrr
    1140856806U,	// PMAXUDrm
    205658086U,	// PMAXUDrr
    1140856814U,	// PMAXUWrm
    205658094U,	// PMAXUWrr
    1140856822U,	// PMINSBrm
    205658102U,	// PMINSBrr
    1140856830U,	// PMINSDrm
    205658110U,	// PMINSDrr
    1140855474U,	// PMINSWrm
    205656754U,	// PMINSWrr
    1140855482U,	// PMINUBrm
    205656762U,	// PMINUBrr
    1140856838U,	// PMINUDrm
    205658118U,	// PMINUDrr
    1140856846U,	// PMINUWrm
    205658126U,	// PMINUWrr
    1279398594U,	// PMOVMSKBrr
    1342183446U,	// PMOVSXBDrm
    1279399958U,	// PMOVSXBDrr
    1207965728U,	// PMOVSXBQrm
    1279399968U,	// PMOVSXBQrr
    1409292330U,	// PMOVSXBWrm
    1279399978U,	// PMOVSXBWrr
    1409292340U,	// PMOVSXDQrm
    1279399988U,	// PMOVSXDQrr
    1409292350U,	// PMOVSXWDrm
    1279399998U,	// PMOVSXWDrr
    1342183496U,	// PMOVSXWQrm
    1279400008U,	// PMOVSXWQrr
    1342183506U,	// PMOVZXBDrm
    1279400018U,	// PMOVZXBDrr
    1207965788U,	// PMOVZXBQrm
    1279400028U,	// PMOVZXBQrr
    1409292390U,	// PMOVZXBWrm
    1279400038U,	// PMOVZXBWrr
    1409292400U,	// PMOVZXDQrm
    1279400048U,	// PMOVZXDQrr
    1409292410U,	// PMOVZXWDrm
    1279400058U,	// PMOVZXWDrr
    1342183556U,	// PMOVZXWQrm
    1279400068U,	// PMOVZXWQrr
    1140856974U,	// PMULDQrm
    205658254U,	// PMULDQrr
    1140856982U,	// PMULHRSWrm128
    406984854U,	// PMULHRSWrm64
    205658262U,	// PMULHRSWrr128
    205658262U,	// PMULHRSWrr64
    1140855500U,	// PMULHUWrm
    205656780U,	// PMULHUWrr
    1140855509U,	// PMULHWrm
    205656789U,	// PMULHWrr
    1140856992U,	// PMULLDrm
    1140856992U,	// PMULLDrm_int
    205658272U,	// PMULLDrr
    205658272U,	// PMULLDrr_int
    1140855517U,	// PMULLWrm
    205656797U,	// PMULLWrr
    1140855525U,	// PMULUDQrm
    205656805U,	// PMULUDQrr
    79698088U,	// POP16r
    872421544U,	// POP16rmm
    79698088U,	// POP16rmr
    79698094U,	// POP32r
    952113326U,	// POP32rmm
    79698094U,	// POP32rmr
    79698100U,	// POP64r
    1476401332U,	// POP64rmm
    79698100U,	// POP64rmr
    1207965882U,	// POPCNT16rm
    1279400122U,	// POPCNT16rr
    1342183619U,	// POPCNT32rm
    1279400131U,	// POPCNT32rr
    1409292492U,	// POPCNT64rm
    1279400140U,	// POPCNT64rr
    6357U,	// POPF
    6363U,	// POPFD
    6369U,	// POPFQ
    6375U,	// POPFS16
    6384U,	// POPFS32
    6393U,	// POPFS64
    6402U,	// POPGS16
    6411U,	// POPGS32
    6420U,	// POPGS64
    1140855534U,	// PORrm
    205656814U,	// PORrr
    1610619165U,	// PREFETCHNTA
    1610619178U,	// PREFETCHT0
    1610619190U,	// PREFETCHT1
    1610619202U,	// PREFETCHT2
    1140855539U,	// PSADBWrm
    205656819U,	// PSADBWrr
    1140857166U,	// PSHUFBrm128
    406985038U,	// PSHUFBrm64
    205658446U,	// PSHUFBrr128
    205658446U,	// PSHUFBrr64
    2199918934U,	// PSHUFDmi
    230037846U,	// PSHUFDri
    2199918942U,	// PSHUFHWmi
    230037854U,	// PSHUFHWri
    2199918951U,	// PSHUFLWmi
    230037863U,	// PSHUFLWri
    1140857200U,	// PSIGNBrm128
    406985072U,	// PSIGNBrm64
    205658480U,	// PSIGNBrr128
    205658480U,	// PSIGNBrr64
    1140857208U,	// PSIGNDrm128
    406985080U,	// PSIGNDrm64
    205658488U,	// PSIGNDrr128
    205658488U,	// PSIGNDrr64
    1140857216U,	// PSIGNWrm128
    406985088U,	// PSIGNWrm64
    205658496U,	// PSIGNWrr128
    205658496U,	// PSIGNWrr64
    205658504U,	// PSLLDQri
    205656835U,	// PSLLDri
    1140855555U,	// PSLLDrm
    205656835U,	// PSLLDrr
    205656842U,	// PSLLQri
    1140855562U,	// PSLLQrm
    205656842U,	// PSLLQrr
    205656849U,	// PSLLWri
    1140855569U,	// PSLLWrm
    205656849U,	// PSLLWrr
    205656856U,	// PSRADri
    1140855576U,	// PSRADrm
    205656856U,	// PSRADrr
    205656863U,	// PSRAWri
    1140855583U,	// PSRAWrm
    205656863U,	// PSRAWrr
    205658512U,	// PSRLDQri
    205656870U,	// PSRLDri
    1140855590U,	// PSRLDrm
    205656870U,	// PSRLDrr
    205656877U,	// PSRLQri
    1140855597U,	// PSRLQrm
    205656877U,	// PSRLQrr
    205656884U,	// PSRLWri
    1140855604U,	// PSRLWrm
    205656884U,	// PSRLWrr
    1140855611U,	// PSUBBrm
    205656891U,	// PSUBBrr
    1140855618U,	// PSUBDrm
    205656898U,	// PSUBDrr
    1140855625U,	// PSUBQrm
    205656905U,	// PSUBQrr
    1140855632U,	// PSUBSBrm
    205656912U,	// PSUBSBrr
    1140855640U,	// PSUBSWrm
    205656920U,	// PSUBSWrr
    1140855648U,	// PSUBUSBrm
    205656928U,	// PSUBUSBrr
    1140855657U,	// PSUBUSWrm
    205656937U,	// PSUBUSWrr
    1140855666U,	// PSUBWrm
    205656946U,	// PSUBWrr
    2281707928U,	// PTESTrm
    1279400344U,	// PTESTrr
    1140855673U,	// PUNPCKHBWrm
    205656953U,	// PUNPCKHBWrr
    1140855684U,	// PUNPCKHDQrm
    205656964U,	// PUNPCKHDQrr
    1140857248U,	// PUNPCKHQDQrm
    205658528U,	// PUNPCKHQDQrr
    1140855695U,	// PUNPCKHWDrm
    205656975U,	// PUNPCKHWDrr
    1140855706U,	// PUNPCKLBWrm
    205656986U,	// PUNPCKLBWrr
    1140855717U,	// PUNPCKLDQrm
    205656997U,	// PUNPCKLDQrr
    1140857260U,	// PUNPCKLQDQrm
    205658540U,	// PUNPCKLQDQrr
    1140855728U,	// PUNPCKLWDrm
    205657008U,	// PUNPCKLWDrr
    79698360U,	// PUSH16r
    872421816U,	// PUSH16rmm
    79698360U,	// PUSH16rmr
    79698367U,	// PUSH32i16
    79698367U,	// PUSH32i32
    79698367U,	// PUSH32i8
    79698367U,	// PUSH32r
    952113599U,	// PUSH32rmm
    79698367U,	// PUSH32rmr
    79698374U,	// PUSH64i16
    79698374U,	// PUSH64i32
    79698374U,	// PUSH64i8
    79698374U,	// PUSH64r
    1476401606U,	// PUSH64rmm
    79698374U,	// PUSH64rmr
    6605U,	// PUSHF
    6612U,	// PUSHFD
    6619U,	// PUSHFQ64
    6626U,	// PUSHFS16
    6636U,	// PUSHFS32
    6646U,	// PUSHFS64
    6656U,	// PUSHGS16
    6666U,	// PUSHGS32
    6676U,	// PUSHGS64
    1140855739U,	// PXORrm
    205657019U,	// PXORrr
    872421918U,	// RCL16m1
    872421927U,	// RCL16mCL
    136321586U,	// RCL16mi
    79698462U,	// RCL16r1
    79698471U,	// RCL16rCL
    205658674U,	// RCL16ri
    952113720U,	// RCL32m1
    952113729U,	// RCL32mCL
    136583756U,	// RCL32mi
    79698488U,	// RCL32r1
    79698497U,	// RCL32rCL
    205658700U,	// RCL32ri
    1476401746U,	// RCL64m1
    1476401755U,	// RCL64mCL
    136714854U,	// RCL64mi
    79698514U,	// RCL64r1
    79698523U,	// RCL64rCL
    205658726U,	// RCL64ri
    1610619500U,	// RCL8m1
    1610619509U,	// RCL8mCL
    136845952U,	// RCL8mi
    79698540U,	// RCL8r1
    79698549U,	// RCL8rCL
    205658752U,	// RCL8ri
    1946163846U,	// RCPPSm
    1946163846U,	// RCPPSm_Int
    1279400582U,	// RCPPSr
    1279400582U,	// RCPPSr_Int
    2080381581U,	// RCPSSm
    2080381581U,	// RCPSSm_Int
    1279400589U,	// RCPSSr
    1279400589U,	// RCPSSr_Int
    872422036U,	// RCR16m1
    872422045U,	// RCR16mCL
    136321704U,	// RCR16mi
    79698580U,	// RCR16r1
    79698589U,	// RCR16rCL
    205658792U,	// RCR16ri
    952113838U,	// RCR32m1
    952113847U,	// RCR32mCL
    136583874U,	// RCR32mi
    79698606U,	// RCR32r1
    79698615U,	// RCR32rCL
    205658818U,	// RCR32ri
    1476401864U,	// RCR64m1
    1476401873U,	// RCR64mCL
    136714972U,	// RCR64mi
    79698632U,	// RCR64r1
    79698641U,	// RCR64rCL
    205658844U,	// RCR64ri
    1610619618U,	// RCR8m1
    1610619627U,	// RCR8mCL
    136846070U,	// RCR8mi
    79698658U,	// RCR8r1
    79698667U,	// RCR8rCL
    205658870U,	// RCR8ri
    6908U,	// RDMSR
    6914U,	// RDPMC
    6920U,	// RDTSC
    6926U,	// RDTSCP
    6933U,	// REPNE_PREFIX
    6939U,	// REP_MOVSB
    6949U,	// REP_MOVSD
    6959U,	// REP_MOVSQ
    6969U,	// REP_MOVSW
    6979U,	// REP_PREFIX
    6983U,	// REP_STOSB
    6993U,	// REP_STOSD
    7003U,	// REP_STOSQ
    7013U,	// REP_STOSW
    7023U,	// RET
    79698803U,	// RETI
    872422264U,	// ROL16m1
    872422270U,	// ROL16mCL
    136321912U,	// ROL16mi
    79698808U,	// ROL16r1
    79698814U,	// ROL16rCL
    205659000U,	// ROL16ri
    952114057U,	// ROL32m1
    952114063U,	// ROL32mCL
    136584073U,	// ROL32mi
    79698825U,	// ROL32r1
    79698831U,	// ROL32rCL
    205659017U,	// ROL32ri
    1476402074U,	// ROL64m1
    1476402080U,	// ROL64mCL
    136715162U,	// ROL64mi
    79698842U,	// ROL64r1
    79698848U,	// ROL64rCL
    205659034U,	// ROL64ri
    1610619819U,	// ROL8m1
    1610619825U,	// ROL8mCL
    136846251U,	// ROL8mi
    79698859U,	// ROL8r1
    79698865U,	// ROL8rCL
    205659051U,	// ROL8ri
    872422332U,	// ROR16m1
    872422338U,	// ROR16mCL
    136321980U,	// ROR16mi
    79698876U,	// ROR16r1
    79698882U,	// ROR16rCL
    205659068U,	// ROR16ri
    952114125U,	// ROR32m1
    952114131U,	// ROR32mCL
    136584141U,	// ROR32mi
    79698893U,	// ROR32r1
    79698899U,	// ROR32rCL
    205659085U,	// ROR32ri
    1476402142U,	// ROR64m1
    1476402148U,	// ROR64mCL
    136715230U,	// ROR64mi
    79698910U,	// ROR64r1
    79698916U,	// ROR64rCL
    205659102U,	// ROR64ri
    1610619887U,	// ROR8m1
    1610619893U,	// ROR8mCL
    136846319U,	// ROR8mi
    79698927U,	// ROR8r1
    79698933U,	// ROR8rCL
    205659119U,	// ROR8ri
    2202016768U,	// ROUNDPDm_Int
    230038528U,	// ROUNDPDr_Int
    2202016777U,	// ROUNDPSm_Int
    230038537U,	// ROUNDPSr_Int
    1063263250U,	// ROUNDSDm_Int
    1073749010U,	// ROUNDSDr_Int
    1044388891U,	// ROUNDSSm_Int
    1073749019U,	// ROUNDSSr_Int
    7204U,	// RSM
    1946164264U,	// RSQRTPSm
    1946164264U,	// RSQRTPSm_Int
    1279401000U,	// RSQRTPSr
    1279401000U,	// RSQRTPSr_Int
    2080382001U,	// RSQRTSSm
    2080382001U,	// RSQRTSSm_Int
    1279401009U,	// RSQRTSSr
    1279401009U,	// RSQRTSSr_Int
    7226U,	// SAHF
    872422463U,	// SAR16m1
    872422469U,	// SAR16mCL
    136322111U,	// SAR16mi
    79699007U,	// SAR16r1
    79699013U,	// SAR16rCL
    205659199U,	// SAR16ri
    952114256U,	// SAR32m1
    952114262U,	// SAR32mCL
    136584272U,	// SAR32mi
    79699024U,	// SAR32r1
    79699030U,	// SAR32rCL
    205659216U,	// SAR32ri
    1476402273U,	// SAR64m1
    1476402279U,	// SAR64mCL
    136715361U,	// SAR64mi
    79699041U,	// SAR64r1
    79699047U,	// SAR64rCL
    205659233U,	// SAR64ri
    1610620018U,	// SAR8m1
    1610620024U,	// SAR8mCL
    136846450U,	// SAR8mi
    79699058U,	// SAR8r1
    79699064U,	// SAR8rCL
    205659250U,	// SAR8ri
    67116163U,	// SBB16i16
    136322179U,	// SBB16mi
    136322179U,	// SBB16mi8
    136322179U,	// SBB16mr
    205659267U,	// SBB16ri
    205659267U,	// SBB16ri8
    272768131U,	// SBB16rm
    205659267U,	// SBB16rr
    205659267U,	// SBB16rr_REV
    73407625U,	// SBB32i32
    136584329U,	// SBB32mi
    136584329U,	// SBB32mi8
    136584329U,	// SBB32mr
    205659273U,	// SBB32ri
    205659273U,	// SBB32ri8
    339877001U,	// SBB32rm
    205659273U,	// SBB32rr
    205659273U,	// SBB32rr_REV
    75504783U,	// SBB64i32
    136715407U,	// SBB64mi32
    136715407U,	// SBB64mi8
    136715407U,	// SBB64mr
    205659279U,	// SBB64ri32
    205659279U,	// SBB64ri8
    406985871U,	// SBB64rm
    205659279U,	// SBB64rr
    205659279U,	// SBB64rr_REV
    77601941U,	// SBB8i8
    136846485U,	// SBB8mi
    136846485U,	// SBB8mr
    205659285U,	// SBB8ri
    474094741U,	// SBB8rm
    205659285U,	// SBB8rr
    205659285U,	// SBB8rr_REV
    7323U,	// SCAS16
    7329U,	// SCAS32
    7335U,	// SCAS64
    7341U,	// SCAS8
    1610620083U,	// SETAEm
    79699123U,	// SETAEr
    1610620090U,	// SETAm
    79699130U,	// SETAr
    1610620096U,	// SETBEm
    79699136U,	// SETBEr
    0U,	// SETB_C16r
    0U,	// SETB_C32r
    0U,	// SETB_C64r
    0U,	// SETB_C8r
    1610620103U,	// SETBm
    79699143U,	// SETBr
    1610620109U,	// SETEm
    79699149U,	// SETEr
    1610620115U,	// SETGEm
    79699155U,	// SETGEr
    1610620122U,	// SETGm
    79699162U,	// SETGr
    1610620128U,	// SETLEm
    79699168U,	// SETLEr
    1610620135U,	// SETLm
    79699175U,	// SETLr
    1610620141U,	// SETNEm
    79699181U,	// SETNEr
    1610620148U,	// SETNOm
    79699188U,	// SETNOr
    1610620155U,	// SETNPm
    79699195U,	// SETNPr
    1610620162U,	// SETNSm
    79699202U,	// SETNSr
    1610620169U,	// SETOm
    79699209U,	// SETOr
    1610620175U,	// SETPm
    79699215U,	// SETPr
    1610620181U,	// SETSm
    79699221U,	// SETSr
    7451U,	// SFENCE
    2214599970U,	// SGDTm
    872422696U,	// SHL16m1
    872422702U,	// SHL16mCL
    136322344U,	// SHL16mi
    79699240U,	// SHL16r1
    79699246U,	// SHL16rCL
    205659432U,	// SHL16ri
    952114489U,	// SHL32m1
    952114495U,	// SHL32mCL
    136584505U,	// SHL32mi
    79699257U,	// SHL32r1
    79699263U,	// SHL32rCL
    205659449U,	// SHL32ri
    1476402506U,	// SHL64m1
    1476402512U,	// SHL64mCL
    136715594U,	// SHL64mi
    79699274U,	// SHL64r1
    79699280U,	// SHL64rCL
    205659466U,	// SHL64ri
    1610620251U,	// SHL8m1
    1610620257U,	// SHL8mCL
    136846683U,	// SHL8mi
    79699291U,	// SHL8r1
    79699297U,	// SHL8rCL
    205659483U,	// SHL8ri
    136322412U,	// SHLD16mrCL
    2176851320U,	// SHLD16mri8
    205659500U,	// SHLD16rrCL
    1073749368U,	// SHLD16rri8
    136584575U,	// SHLD32mrCL
    2177113483U,	// SHLD32mri8
    205659519U,	// SHLD32rrCL
    1073749387U,	// SHLD32rri8
    136715666U,	// SHLD64mrCL
    2177244574U,	// SHLD64mri8
    205659538U,	// SHLD64rrCL
    1073749406U,	// SHLD64rri8
    872422821U,	// SHR16m1
    872422827U,	// SHR16mCL
    136322469U,	// SHR16mi
    79699365U,	// SHR16r1
    79699371U,	// SHR16rCL
    205659557U,	// SHR16ri
    952114614U,	// SHR32m1
    952114620U,	// SHR32mCL
    136584630U,	// SHR32mi
    79699382U,	// SHR32r1
    79699388U,	// SHR32rCL
    205659574U,	// SHR32ri
    1476402631U,	// SHR64m1
    1476402637U,	// SHR64mCL
    136715719U,	// SHR64mi
    79699399U,	// SHR64r1
    79699405U,	// SHR64rCL
    205659591U,	// SHR64ri
    1610620376U,	// SHR8m1
    1610620382U,	// SHR8mCL
    136846808U,	// SHR8mi
    79699416U,	// SHR8r1
    79699422U,	// SHR8rCL
    205659608U,	// SHR8ri
    136322537U,	// SHRD16mrCL
    2176851445U,	// SHRD16mri8
    205659625U,	// SHRD16rrCL
    1073749493U,	// SHRD16rri8
    136584700U,	// SHRD32mrCL
    2177113608U,	// SHRD32mri8
    205659644U,	// SHRD32rrCL
    1073749512U,	// SHRD32rri8
    136715791U,	// SHRD64mrCL
    2177244699U,	// SHRD64mri8
    205659663U,	// SHRD64rrCL
    1073749531U,	// SHRD64rri8
    1065360930U,	// SHUFPDrmi
    1073749538U,	// SHUFPDrri
    1065360938U,	// SHUFPSrmi
    1073749546U,	// SHUFPSrri
    2214600242U,	// SIDTm
    7736U,	// SIN_F
    0U,	// SIN_Fp32
    0U,	// SIN_Fp64
    0U,	// SIN_Fp80
    872422973U,	// SLDT16m
    79699517U,	// SLDT16r
    872422980U,	// SLDT64m
    79699524U,	// SLDT64r
    872422987U,	// SMSW16m
    79699531U,	// SMSW16r
    79699538U,	// SMSW32r
    79699545U,	// SMSW64r
    1946164832U,	// SQRTPDm
    1946164832U,	// SQRTPDm_Int
    1279401568U,	// SQRTPDr
    1279401568U,	// SQRTPDr_Int
    1946164840U,	// SQRTPSm
    1946164840U,	// SQRTPSm_Int
    1279401576U,	// SQRTPSr
    1279401576U,	// SQRTPSr_Int
    2013273712U,	// SQRTSDm
    2013273712U,	// SQRTSDm_Int
    1279401584U,	// SQRTSDr
    1279401584U,	// SQRTSDr_Int
    2080382584U,	// SQRTSSm
    2080382584U,	// SQRTSSm_Int
    1279401592U,	// SQRTSSr
    1279401592U,	// SQRTSSr_Int
    7808U,	// SQRT_F
    0U,	// SQRT_Fp32
    0U,	// SQRT_Fp64
    0U,	// SQRT_Fp80
    7814U,	// SS_PREFIX
    7817U,	// STC
    7821U,	// STD
    7825U,	// STI
    952114837U,	// STMXCSR
    7838U,	// STOSB
    7844U,	// STOSD
    7850U,	// STOSW
    872423088U,	// STRm
    79699632U,	// STRr
    738205366U,	// ST_F32m
    805314236U,	// ST_F64m
    738205378U,	// ST_FP32m
    805314249U,	// ST_FP64m
    2415926992U,	// ST_FP80m
    79699671U,	// ST_FPrr
    0U,	// ST_Fp32m
    0U,	// ST_Fp64m
    0U,	// ST_Fp64m32
    0U,	// ST_Fp80m32
    0U,	// ST_Fp80m64
    0U,	// ST_FpP32m
    0U,	// ST_FpP64m
    0U,	// ST_FpP64m32
    0U,	// ST_FpP80m
    0U,	// ST_FpP80m32
    0U,	// ST_FpP80m64
    79699677U,	// ST_Frr
    67116770U,	// SUB16i16
    136322786U,	// SUB16mi
    136322786U,	// SUB16mi8
    136322786U,	// SUB16mr
    205659874U,	// SUB16ri
    205659874U,	// SUB16ri8
    272768738U,	// SUB16rm
    205659874U,	// SUB16rr
    205659874U,	// SUB16rr_REV
    73408232U,	// SUB32i32
    136584936U,	// SUB32mi
    136584936U,	// SUB32mi8
    136584936U,	// SUB32mr
    205659880U,	// SUB32ri
    205659880U,	// SUB32ri8
    339877608U,	// SUB32rm
    205659880U,	// SUB32rr
    205659880U,	// SUB32rr_REV
    75505390U,	// SUB64i32
    136716014U,	// SUB64mi32
    136716014U,	// SUB64mi8
    136716014U,	// SUB64mr
    205659886U,	// SUB64ri32
    205659886U,	// SUB64ri8
    406986478U,	// SUB64rm
    205659886U,	// SUB64rr
    205659886U,	// SUB64rr_REV
    77602548U,	// SUB8i8
    136847092U,	// SUB8mi
    136847092U,	// SUB8mr
    205659892U,	// SUB8ri
    474095348U,	// SUB8rm
    205659892U,	// SUB8rr
    205659892U,	// SUB8rr_REV
    536878842U,	// SUBPDrm
    205659898U,	// SUBPDrr
    536878849U,	// SUBPSrm
    205659905U,	// SUBPSrr
    738205448U,	// SUBR_F32m
    805314320U,	// SUBR_F64m
    872423192U,	// SUBR_FI16m
    952114977U,	// SUBR_FI32m
    79699754U,	// SUBR_FPrST0
    79699761U,	// SUBR_FST0r
    0U,	// SUBR_Fp32m
    0U,	// SUBR_Fp64m
    0U,	// SUBR_Fp64m32
    0U,	// SUBR_Fp80m32
    0U,	// SUBR_Fp80m64
    0U,	// SUBR_FpI16m32
    0U,	// SUBR_FpI16m64
    0U,	// SUBR_FpI16m80
    0U,	// SUBR_FpI32m32
    0U,	// SUBR_FpI32m64
    0U,	// SUBR_FpI32m80
    79699768U,	// SUBR_FrST0
    603987782U,	// SUBSDrm
    603987782U,	// SUBSDrm_Int
    205659974U,	// SUBSDrr
    205659974U,	// SUBSDrr_Int
    671096653U,	// SUBSSrm
    671096653U,	// SUBSSrm_Int
    205659981U,	// SUBSSrr
    205659981U,	// SUBSSrr_Int
    738205524U,	// SUB_F32m
    805314395U,	// SUB_F64m
    872423266U,	// SUB_FI16m
    952115050U,	// SUB_FI32m
    79699826U,	// SUB_FPrST0
    79699834U,	// SUB_FST0r
    0U,	// SUB_Fp32
    0U,	// SUB_Fp32m
    0U,	// SUB_Fp64
    0U,	// SUB_Fp64m
    0U,	// SUB_Fp64m32
    0U,	// SUB_Fp80
    0U,	// SUB_Fp80m32
    0U,	// SUB_Fp80m64
    0U,	// SUB_FpI16m32
    0U,	// SUB_FpI16m64
    0U,	// SUB_FpI16m80
    0U,	// SUB_FpI32m32
    0U,	// SUB_FpI32m64
    0U,	// SUB_FpI32m80
    79699840U,	// SUB_FrST0
    8079U,	// SWAPGS
    8086U,	// SYSCALL
    8094U,	// SYSENTER
    8103U,	// SYSEXIT
    8103U,	// SYSEXIT64
    8111U,	// SYSRET
    1604325038U,	// TAILJMPd
    1000349622U,	// TAILJMPm
    127930010U,	// TAILJMPr
    127930017U,	// TAILJMPr64
    130031548U,	// TCRETURNdi
    130031548U,	// TCRETURNdi64
    130031548U,	// TCRETURNri
    130031548U,	// TCRETURNri64
    67117000U,	// TEST16i16
    136323016U,	// TEST16mi
    1279401928U,	// TEST16ri
    1207967688U,	// TEST16rm
    1279401928U,	// TEST16rr
    73408463U,	// TEST32i32
    136585167U,	// TEST32mi
    1279401935U,	// TEST32ri
    1342185423U,	// TEST32rm
    1279401935U,	// TEST32rr
    75505622U,	// TEST64i32
    136716246U,	// TEST64mi32
    1279401942U,	// TEST64ri32
    1409294294U,	// TEST64rm
    1279401942U,	// TEST64rr
    77602781U,	// TEST8i8
    136847325U,	// TEST8mi
    1279401949U,	// TEST8ri
    1690312669U,	// TEST8rm
    1279401949U,	// TEST8rr
    2684358526U,	// TLS_addr32
    2751471588U,	// TLS_addr64
    8182U,	// TRAP
    8186U,	// TST_F
    0U,	// TST_Fp32
    0U,	// TST_Fp64
    0U,	// TST_Fp80
    2013269594U,	// UCOMISDrm
    1279397466U,	// UCOMISDrr
    2080378467U,	// UCOMISSrm
    1279397475U,	// UCOMISSrr
    83894271U,	// UCOM_FIPr
    83894280U,	// UCOM_FIr
    8208U,	// UCOM_FPPr
    79699992U,	// UCOM_FPr
    0U,	// UCOM_FpIr32
    0U,	// UCOM_FpIr64
    0U,	// UCOM_FpIr80
    0U,	// UCOM_Fpr32
    0U,	// UCOM_Fpr64
    0U,	// UCOM_Fpr80
    79700000U,	// UCOM_Fr
    536879143U,	// UNPCKHPDrm
    205660199U,	// UNPCKHPDrr
    536879153U,	// UNPCKHPSrm
    205660209U,	// UNPCKHPSrr
    536879163U,	// UNPCKLPDrm
    205660219U,	// UNPCKLPDrr
    536879173U,	// UNPCKLPSrm
    205660229U,	// UNPCKLPSrr
    70459471U,	// VASTART_SAVE_XMM_REGS
    872423527U,	// VERRm
    79700071U,	// VERRr
    872423533U,	// VERWm
    79700077U,	// VERWr
    8307U,	// VMCALL
    1476403322U,	// VMCLEARm
    8323U,	// VMLAUNCH
    1476403340U,	// VMPTRLDm
    1476403349U,	// VMPTRSTm
    136585374U,	// VMREAD32rm
    1279402142U,	// VMREAD32rr
    136716455U,	// VMREAD64rm
    1279402151U,	// VMREAD64rr
    8368U,	// VMRESUME
    1342185657U,	// VMWRITE32rm
    1279402169U,	// VMWRITE32rr
    1409294531U,	// VMWRITE64rm
    1279402179U,	// VMWRITE64rr
    8397U,	// VMXOFF
    1476403412U,	// VMXON
    0U,	// V_SET0
    0U,	// V_SETALLONES
    8411U,	// WAIT
    8416U,	// WBINVD
    1476396120U,	// WINCALL64m
    1556087918U,	// WINCALL64pcrel32
    79692888U,	// WINCALL64r
    8423U,	// WRMSR
    136323309U,	// XADD16rm
    1279402221U,	// XADD16rr
    136585460U,	// XADD32rm
    1279402228U,	// XADD32rr
    136716539U,	// XADD64rm
    1279402235U,	// XADD64rr
    136847618U,	// XADD8rm
    1279402242U,	// XADD8rr
    67117321U,	// XCHG16ar
    1317150985U,	// XCHG16rm
    1340088585U,	// XCHG16rr
    73408784U,	// XCHG32ar
    1319248144U,	// XCHG32rm
    1340088592U,	// XCHG32rr
    75505943U,	// XCHG64ar
    1321345303U,	// XCHG64rm
    1340088599U,	// XCHG64rr
    1323442462U,	// XCHG8rm
    1340088606U,	// XCHG8rr
    79700261U,	// XCH_F
    8491U,	// XLAT
    67117361U,	// XOR16i16
    136323377U,	// XOR16mi
    136323377U,	// XOR16mi8
    136323377U,	// XOR16mr
    205660465U,	// XOR16ri
    205660465U,	// XOR16ri8
    272769329U,	// XOR16rm
    205660465U,	// XOR16rr
    205660465U,	// XOR16rr_REV
    73408823U,	// XOR32i32
    136585527U,	// XOR32mi
    136585527U,	// XOR32mi8
    136585527U,	// XOR32mr
    205660471U,	// XOR32ri
    205660471U,	// XOR32ri8
    339878199U,	// XOR32rm
    205660471U,	// XOR32rr
    205660471U,	// XOR32rr_REV
    75505981U,	// XOR64i32
    136716605U,	// XOR64mi32
    136716605U,	// XOR64mi8
    136716605U,	// XOR64mr
    205660477U,	// XOR64ri32
    205660477U,	// XOR64ri8
    406987069U,	// XOR64rm
    205660477U,	// XOR64rr
    205660477U,	// XOR64rr_REV
    77603139U,	// XOR8i8
    136847683U,	// XOR8mi
    136847683U,	// XOR8mr
    205660483U,	// XOR8ri
    474095939U,	// XOR8rm
    205660483U,	// XOR8rr
    205660483U,	// XOR8rr_REV
    536874124U,	// XORPDrm
    205655180U,	// XORPDrr
    536874131U,	// XORPSrm
    205655187U,	// XORPSrr
    0U
  };

  const char *AsmStrs = 
    "DBG_VALUE\000fabs\000adcw\t\000adcl\t\000adcq\t\000adcb\t\000addw\t\000"
    "addl\t\000addq\t\000addb\t\000addpd\t\000addps\t\000addsd\t\000addss\t\000"
    "addsubpd\t\000addsubps\t\000fadds\t\000faddl\t\000fiadds\t\000fiaddl\t\000"
    "faddp\t\000fadd\t\000fadd\t%st(0), \000#ADJCALLSTACKDOWN\000#ADJCALLSTA"
    "CKUP\000andw\t\000andl\t\000andq\t\000andb\t\000andnpd\t\000andnps\t\000"
    "andpd\t\000andps\t\000#ATOMADD6432 PSEUDO!\000#ATOMAND16 PSEUDO!\000#AT"
    "OMAND32 PSEUDO!\000#ATOMAND64 PSEUDO!\000#ATOMAND6432 PSEUDO!\000#ATOMA"
    "ND8 PSEUDO!\000#ATOMMAX16 PSEUDO!\000#ATOMMAX32 PSEUDO!\000#ATOMMAX64 P"
    "SEUDO!\000#ATOMMIN16 PSEUDO!\000#ATOMMIN32 PSEUDO!\000#ATOMMIN64 PSEUDO"
    "!\000#ATOMNAND16 PSEUDO!\000#ATOMNAND32 PSEUDO!\000#ATOMNAND64 PSEUDO!\000"
    "#ATOMNAND6432 PSEUDO!\000#ATOMNAND8 PSEUDO!\000#ATOMOR16 PSEUDO!\000#AT"
    "OMOR32 PSEUDO!\000#ATOMOR64 PSEUDO!\000#ATOMOR6432 PSEUDO!\000#ATOMOR8 "
    "PSEUDO!\000#ATOMSUB6432 PSEUDO!\000#ATOMSWAP6432 PSEUDO!\000#ATOMUMAX16"
    " PSEUDO!\000#ATOMUMAX32 PSEUDO!\000#ATOMUMAX64 PSEUDO!\000#ATOMUMIN16 P"
    "SEUDO!\000#ATOMUMIN32 PSEUDO!\000#ATOMUMIN64 PSEUDO!\000#ATOMXOR16 PSEU"
    "DO!\000#ATOMXOR32 PSEUDO!\000#ATOMXOR64 PSEUDO!\000#ATOMXOR6432 PSEUDO!"
    "\000#ATOMXOR8 PSEUDO!\000blendpd\t\000blendps\t\000blendvpd\t%xmm0, \000"
    "blendvps\t%xmm0, \000bsfw\t\000bsfl\t\000bsfq\t\000bsrw\t\000bsrl\t\000"
    "bsrq\t\000bswapl\t\000bswapq\t\000btw\t\000btl\t\000btq\t\000btcw\t\000"
    "btcl\t\000btcq\t\000btrw\t\000btrl\t\000btrq\t\000btsw\t\000btsl\t\000b"
    "tsq\t\000call\t*\000callq\t*\000callq\t\000call\t\000cbtw\000cltd\000cl"
    "tq\000fchs\000clc\000cld\000clflush\t\000cli\000clts\000cmc\000cmovaw\t"
    "\000cmoval\t\000cmovaq\t\000cmovaew\t\000cmovael\t\000cmovaeq\t\000cmov"
    "bw\t\000cmovbl\t\000cmovbq\t\000cmovbew\t\000cmovbel\t\000cmovbeq\t\000"
    "fcmovbe\t\000fcmovb\t\000cmovew\t\000cmovel\t\000cmoveq\t\000fcmove\t\000"
    "cmovgw\t\000cmovgl\t\000cmovgq\t\000cmovgew\t\000cmovgel\t\000cmovgeq\t"
    "\000cmovlw\t\000cmovll\t\000cmovlq\t\000cmovlew\t\000cmovlel\t\000cmovl"
    "eq\t\000fcmovnbe\t\000fcmovnb\t\000cmovnew\t\000cmovnel\t\000cmovneq\t\000"
    "fcmovne\t\000cmovnow\t\000cmovnol\t\000cmovnoq\t\000cmovnpw\t\000cmovnp"
    "l\t\000cmovnpq\t\000fcmovnu\t\000cmovnsw\t\000cmovnsl\t\000cmovnsq\t\000"
    "cmovow\t\000cmovol\t\000cmovoq\t\000cmovpw\t\000cmovpl\t\000cmovpq\t\000"
    "fcmovu\t \000cmovsw\t\000cmovsl\t\000cmovsq\t\000#CMOV_FR32 PSEUDO!\000"
    "#CMOV_FR64 PSEUDO!\000#CMOV_GR8 PSEUDO!\000#CMOV_V1I64 PSEUDO!\000#CMOV"
    "_V2F64 PSEUDO!\000#CMOV_V2I64 PSEUDO!\000#CMOV_V4F32 PSEUDO!\000cmpw\t\000"
    "cmpl\t\000cmpq\t\000cmpb\t\000cmp\000cmpsw\000cmpsl\000cmpsq\000cmpsb\000"
    "cmpxchg16b\t\000cmpxchgw\t\000cmpxchgl\t\000cmpxchgq\t\000cmpxchg8b\t\000"
    "cmpxchgb\t\000comisd\t\000comiss\t\000fcomp\t\000fcomip\t\000fcomi\t\000"
    "fcom\t\000fcos\000cpuid\000cqto\000crc32 \t\000cs\000cvtdq2pd\t\000cvtd"
    "q2ps\t\000cvtpd2dq\t\000cvtpd2ps\t\000cvtps2dq\t\000cvtps2pd\t\000cvtsd"
    "2siq\t\000cvtsd2ss\t\000cvtsi2sdq\t\000cvtsi2sd\t\000cvtsi2ssq\t\000cvt"
    "si2ss\t\000cvtss2sd\t\000cvtss2siq\t\000cvtss2sil\t\000cvttps2dq\t\000c"
    "vttsd2siq\t\000cvttsd2si\t\000cvttss2siq\t\000cvttss2si\t\000cwtd\000cw"
    "tl\000decw\t\000decl\t\000decq\t\000decb\t\000divw\t\000divl\t\000divq\t"
    "\000divb\t\000divpd\t\000divps\t\000fdivrs\t\000fdivrl\t\000fidivrs\t\000"
    "fidivrl\t\000fdivp\t\000fdivr\t\000fdiv\t%st(0), \000divsd\t\000divss\t"
    "\000fdivs\t\000fdivl\t\000fidivs\t\000fidivl\t\000fdivrp\t\000fdiv\t\000"
    "fdivr\t%st(0), \000dppd\t\000dpps\t\000ds\000ret\t#eh_return, addr: \000"
    "enter\t\000es\000extractps\t\000f2xm1\000lcallw\t\000lcallw\t*\000lcall"
    "l\t\000lcalll\t*\000lcallq\t*\000ljmpw\t\000ljmpw\t*\000ljmpl\t\000ljmp"
    "l\t*\000ljmpq\t*\000fbld\t\000fbstp\t\000fcoml\t\000fcomll\t\000fcompl\t"
    "\000fcompll\t\000fcompp\000fdecstp\000ffree\t\000ficomw\t\000ficoml\t\000"
    "ficompw\t\000ficompl\t\000fincstp\000fldcw\t\000fldenv\t\000fldl2e\000f"
    "ldl2t\000fldlg2\000fldln2\000fldpi\000fnclex\000fninit\000fnop\000fnstc"
    "w\t\000fnstsw %ax\000fnstsw\t\000##FP32_TO_INT16_IN_MEM PSEUDO!\000##FP"
    "32_TO_INT32_IN_MEM PSEUDO!\000##FP32_TO_INT64_IN_MEM PSEUDO!\000##FP64_"
    "TO_INT16_IN_MEM PSEUDO!\000##FP64_TO_INT32_IN_MEM PSEUDO!\000##FP64_TO_"
    "INT64_IN_MEM PSEUDO!\000##FP80_TO_INT16_IN_MEM PSEUDO!\000##FP80_TO_INT"
    "32_IN_MEM PSEUDO!\000##FP80_TO_INT64_IN_MEM PSEUDO!\000fpatan\000fprem\000"
    "fprem1\000fptan\000##FP_REG_KILL\000frndint\000frstor\t\000fnsave\t\000"
    "fscale\000fsincos\000fnstenv\t\000movl\t%fs:\000fs\000fxam\000fxrstor\t"
    "\000fxsave\t\000fxtract\000fyl2x\000fyl2xp1\000movapd\t\000movaps\t\000"
    "orpd\t\000orps\t\000xorpd\t\000xorps\t\000movl\t%gs:\000gs\000haddpd\t\000"
    "haddps\t\000hlt\000hsubpd\t\000hsubps\t\000idivw\t\000idivl\t\000idivq\t"
    "\000idivb\t\000filds\t\000fildl\t\000fildll\t\000imulw\t\000imull\t\000"
    "imulq\t\000imulb\t\000insw\000inw\t\000inw\t%dx, %ax\000insl\000inl\t\000"
    "inl\t%dx, %eax\000insb\000inb\t\000inb\t%dx, %al\000incw\t\000incl\t\000"
    "incq\t\000incb\t\000insertps\t\000int\t\000int\t3\000invd\000invept\000"
    "invlpg\t\000invvpid\000iretw\000iretl\000iretq\000fisttps\t\000fisttpl\t"
    "\000fisttpll\t\000fists\t\000fistl\t\000fistps\t\000fistpl\t\000fistpll"
    "\t\000cvtpd2pi\t\000cvtpi2pd\t\000cvtpi2ps\t\000cvtps2pi\t\000cvtsd2si\t"
    "\000cvtss2si\t\000cvttpd2dq\t\000cvttpd2pi\t\000cvttps2pi\t\000ucomisd\t"
    "\000ucomiss\t\000jae\t\000ja\t\000jbe\t\000jb\t\000jcxz\t\000je\t\000jg"
    "e\t\000jg\t\000jle\t\000jl\t\000jmpl\t*\000jmpq\t*\000jmpq\t\000jmp\t\000"
    "jne\t\000jno\t\000jnp\t\000jns\t\000jo\t\000jp\t\000js\t\000lahf\000lar"
    "w\t\000larl\t\000larq\t\000lock\n\tcmpxchgw\t\000lock\n\tcmpxchgl\t\000"
    "lock\n\tcmpxchgq\t\000lock\n\tcmpxchgb\t\000lock\n\tcmpxchg8b\t\000lddq"
    "u\t\000ldmxcsr\t\000ldsw\t\000ldsl\t\000fldz\000fld1\000flds\t\000fldl\t"
    "\000fldt\t\000fld\t\000leaw\t\000leal\t\000leaq\t\000leave\000lesw\t\000"
    "lesl\t\000lfence\000lfsw\t\000lfsl\t\000lfsq\t\000lgdt\t\000lgsw\t\000l"
    "gsl\t\000lgsq\t\000lidt\t\000lldtw\t\000lmsww\t\000lock\n\taddw\t\000lo"
    "ck\n\taddl\t\000lock\n\taddq\t\000lock\n\taddb\t\000lock\n\tdecw\t\000l"
    "ock\n\tdecl\t\000lock\n\tdecq\t\000lock\n\tdecb\t\000lock\n\tincw\t\000"
    "lock\n\tincl\t\000lock\n\tincq\t\000lock\n\tincb\t\000lock\000lock\n\ts"
    "ubw\t\000lock\n\tsubl\t\000lock\n\tsubq\t\000lock\n\tsubb\t\000lodsb\000"
    "lodsl\000lodsq\000lodsw\000loop\t\000loope\t\000loopne\t\000lret\000lre"
    "t\t\000lslw\t\000lsll\t\000lslq\t\000lssw\t\000lssl\t\000lssq\t\000ltrw"
    "\t\000lock\n\txaddw\t\000lock\n\txaddl\t\000lock\n\txadd\t\000lock\n\tx"
    "addb\t\000maskmovdqu\t\000maxpd\t\000maxps\t\000maxsd\t\000maxss\t\000m"
    "fence\000# dynamic stack allocation\000minpd\t\000minps\t\000minsd\t\000"
    "minss\t\000emms\000femms\000maskmovq\t\000movd\t\000movdq2q\t\000movntq"
    "\t\000movq2dq\t\000movq\t\000packssdw\t\000packsswb\t\000packuswb\t\000"
    "paddb\t\000paddd\t\000paddq\t\000paddsb\t\000paddsw\t\000paddusb\t\000p"
    "addusw\t\000paddw\t\000pandn\t\000pand\t\000pavgb\t\000pavgw\t\000pcmpe"
    "qb\t\000pcmpeqd\t\000pcmpeqw\t\000pcmpgtb\t\000pcmpgtd\t\000pcmpgtw\t\000"
    "pextrw\t\000pinsrw\t\000pmaddwd\t\000pmaxsw\t\000pmaxub\t\000pminsw\t\000"
    "pminub\t\000pmovmskb\t\000pmulhuw\t\000pmulhw\t\000pmullw\t\000pmuludq\t"
    "\000por\t\000psadbw\t\000pshufw\t\000pslld\t\000psllq\t\000psllw\t\000p"
    "srad\t\000psraw\t\000psrld\t\000psrlq\t\000psrlw\t\000psubb\t\000psubd\t"
    "\000psubq\t\000psubsb\t\000psubsw\t\000psubusb\t\000psubusw\t\000psubw\t"
    "\000punpckhbw\t\000punpckhdq\t\000punpckhwd\t\000punpcklbw\t\000punpckl"
    "dq\t\000punpcklwd\t\000pxor\t\000monitor\000movw\t%ax, \000movw\t\000mo"
    "vl\t%eax, \000movl\t\000movq\t%fs:\000movq\t%gs:\000movq\t%rax, \000mov"
    "absq\t\000movb\t%al, \000movb\t\000movddup\t\000movdqa\t\000movdqu\t\000"
    "movhlps\t\000movhpd\t\000movhps\t\000movlhps\t\000movlpd\t\000movlps\t\000"
    "movmskpd\t\000movmskps\t\000movntdqa\t\000movntdq\t\000movnti\t\000movn"
    "tpd\t\000movntps\t\000movsb\000movsl\000movsd\t\000movshdup\t\000movsld"
    "up\t\000movss\t\000movsw\000movsbw\t\000movswl\t\000movsbl\t\000movswq\t"
    "\000movslq\t\000movsbq\t\000movupd\t\000movups\t\000movzbw\t\000movzbl\t"
    "\000movzwl\t\000movzwq\t\000movzbq\t\000mpsadbw\t\000mulw\t\000mull\t\000"
    "mulq\t\000mulb\t\000mulpd\t\000mulps\t\000mulsd\t\000mulss\t\000fmuls\t"
    "\000fmull\t\000fimuls\t\000fimull\t\000fmulp\t\000fmul\t\000fmul\t%st(0"
    "), \000mwait\000negw\t\000negl\t\000negq\t\000negb\t\000nop\000nopl\t\000"
    "nopw\t\000notw\t\000notl\t\000notq\t\000notb\t\000orw\t\000orl\t\000orq"
    "\t\000orb\t\000outw\t%ax, \000outw\t%ax, %dx\000outl\t%eax, \000outl\t%"
    "eax, %dx\000outb\t%al, \000outb\t%al, %dx\000outsb\000outsl\000outsw\000"
    "pabsb\t\000pabsd\t\000pabsw\t\000packusdw\t\000palignr\t\000pblendvb\t%"
    "xmm0, \000pblendw\t\000pcmpeqq\t\000pcmpestri\t\000#PCMPESTRM128rm PSEU"
    "DO!\000#PCMPESTRM128rr PSEUDO!\000pcmpestrm\t\000pcmpgtq\t\000pcmpistri"
    "\t\000#PCMPISTRM128rm PSEUDO!\000#PCMPISTRM128rr PSEUDO!\000pcmpistrm\t"
    "\000pextrb\t\000pextrd\t\000pextrq\t\000phaddd\t\000phaddsw\t\000phaddw"
    "\t\000phminposuw\t\000phsubd\t\000phsubsw\t\000phsubw\t\000pinsrb\t\000"
    "pinsrd\t\000pinsrq\t\000pmaddubsw\t\000pmaxsb\t\000pmaxsd\t\000pmaxud\t"
    "\000pmaxuw\t\000pminsb\t\000pminsd\t\000pminud\t\000pminuw\t\000pmovsxb"
    "d\t\000pmovsxbq\t\000pmovsxbw\t\000pmovsxdq\t\000pmovsxwd\t\000pmovsxwq"
    "\t\000pmovzxbd\t\000pmovzxbq\t\000pmovzxbw\t\000pmovzxdq\t\000pmovzxwd\t"
    "\000pmovzxwq\t\000pmuldq\t\000pmulhrsw\t\000pmulld\t\000popw\t\000popl\t"
    "\000popq\t\000popcntw\t\000popcntl\t\000popcntq\t\000popfw\000popfl\000"
    "popfq\000popw\t%fs\000popl\t%fs\000popq\t%fs\000popw\t%gs\000popl\t%gs\000"
    "popq\t%gs\000prefetchnta\t\000prefetcht0\t\000prefetcht1\t\000prefetcht"
    "2\t\000pshufb\t\000pshufd\t\000pshufhw\t\000pshuflw\t\000psignb\t\000ps"
    "ignd\t\000psignw\t\000pslldq\t\000psrldq\t\000ptest \t\000punpckhqdq\t\000"
    "punpcklqdq\t\000pushw\t\000pushl\t\000pushq\t\000pushfw\000pushfl\000pu"
    "shfq\000pushw\t%fs\000pushl\t%fs\000pushq\t%fs\000pushw\t%gs\000pushl\t"
    "%gs\000pushq\t%gs\000rclw\t1, \000rclw\t%cl, \000rclw\t\000rcll\t1, \000"
    "rcll\t%cl, \000rcll\t\000rclq\t1, \000rclq\t%cl, \000rclq\t\000rclb\t1,"
    " \000rclb\t%cl, \000rclb\t\000rcpps\t\000rcpss\t\000rcrw\t1, \000rcrw\t"
    "%cl, \000rcrw\t\000rcrl\t1, \000rcrl\t%cl, \000rcrl\t\000rcrq\t1, \000r"
    "crq\t%cl, \000rcrq\t\000rcrb\t1, \000rcrb\t%cl, \000rcrb\t\000rdmsr\000"
    "rdpmc\000rdtsc\000rdtscp\000repne\000rep;movsb\000rep;movsl\000rep;movs"
    "q\000rep;movsw\000rep\000rep;stosb\000rep;stosl\000rep;stosq\000rep;sto"
    "sw\000ret\000ret\t\000rolw\t\000rolw\t%cl, \000roll\t\000roll\t%cl, \000"
    "rolq\t\000rolq\t%cl, \000rolb\t\000rolb\t%cl, \000rorw\t\000rorw\t%cl, "
    "\000rorl\t\000rorl\t%cl, \000rorq\t\000rorq\t%cl, \000rorb\t\000rorb\t%"
    "cl, \000roundpd\t\000roundps\t\000roundsd\t\000roundss\t\000rsm\000rsqr"
    "tps\t\000rsqrtss\t\000sahf\000sarw\t\000sarw\t%cl, \000sarl\t\000sarl\t"
    "%cl, \000sarq\t\000sarq\t%cl, \000sarb\t\000sarb\t%cl, \000sbbw\t\000sb"
    "bl\t\000sbbq\t\000sbbb\t\000scasw\000scasl\000scasq\000scasb\000setae\t"
    "\000seta\t\000setbe\t\000setb\t\000sete\t\000setge\t\000setg\t\000setle"
    "\t\000setl\t\000setne\t\000setno\t\000setnp\t\000setns\t\000seto\t\000s"
    "etp\t\000sets\t\000sfence\000sgdt\t\000shlw\t\000shlw\t%cl, \000shll\t\000"
    "shll\t%cl, \000shlq\t\000shlq\t%cl, \000shlb\t\000shlb\t%cl, \000shldw\t"
    "%cl, \000shldw\t\000shldl\t%cl, \000shldl\t\000shldq\t%cl, \000shldq\t\000"
    "shrw\t\000shrw\t%cl, \000shrl\t\000shrl\t%cl, \000shrq\t\000shrq\t%cl, "
    "\000shrb\t\000shrb\t%cl, \000shrdw\t%cl, \000shrdw\t\000shrdl\t%cl, \000"
    "shrdl\t\000shrdq\t%cl, \000shrdq\t\000shufpd\t\000shufps\t\000sidt\t\000"
    "fsin\000sldtw\t\000sldtq\t\000smsww\t\000smswl\t\000smswq\t\000sqrtpd\t"
    "\000sqrtps\t\000sqrtsd\t\000sqrtss\t\000fsqrt\000ss\000stc\000std\000st"
    "i\000stmxcsr\t\000stosb\000stosl\000stosw\000strw\t\000fsts\t\000fstl\t"
    "\000fstps\t\000fstpl\t\000fstpt\t\000fstp\t\000fst\t\000subw\t\000subl\t"
    "\000subq\t\000subb\t\000subpd\t\000subps\t\000fsubrs\t\000fsubrl\t\000f"
    "isubrs\t\000fisubrl\t\000fsubp\t\000fsubr\t\000fsub\t%st(0), \000subsd\t"
    "\000subss\t\000fsubs\t\000fsubl\t\000fisubs\t\000fisubl\t\000fsubrp\t\000"
    "fsub\t\000fsubr\t%st(0), \000swapgs\000syscall\000sysenter\000sysexit\000"
    "sysret\000jmp\t*\000#TC_RETURN \000testw\t\000testl\t\000testq\t\000tes"
    "tb\t\000.byte\t0x66; leaq\t\000ud2\000ftst\000fucomip\t\000fucomi\t\000"
    "fucompp\000fucomp\t\000fucom\t\000unpckhpd\t\000unpckhps\t\000unpcklpd\t"
    "\000unpcklps\t\000#VASTART_SAVE_XMM_REGS \000verr\t\000verw\t\000vmcall"
    "\000vmclear\t\000vmlaunch\000vmptrld\t\000vmptrst\t\000vmreadl\t\000vmr"
    "eadq\t\000vmresume\000vmwritel\t\000vmwriteq\t\000vmxoff\000vmxon\t\000"
    "wait\000wbinvd\000wrmsr\000xaddw\t\000xaddl\t\000xaddq\t\000xaddb\t\000"
    "xchgw\t\000xchgl\t\000xchgq\t\000xchgb\t\000fxch\t\000xlatb\000xorw\t\000"
    "xorl\t\000xorq\t\000xorb\t\000";

  O << "\t";

  // Emit the opcode for the instruction.
  unsigned Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 6 bits for 42 unique commands.
  switch ((Bits >> 26) & 63) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, ABS_F, ADJCALLSTACKDOWN32, ADJCALLSTACKDOWN64, ADJCALLSTACK...
    return;
    break;
  case 1:
    // ADC16i16, ADC32i32, ADC64i32, ADC8i8, ADD16i16, ADD32i32, ADD64i32, AD...
    printOperand(MI, 0); 
    break;
  case 2:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    printOperand(MI, 5); 
    break;
  case 3:
    // ADC16ri, ADC16ri8, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, ADC32rr, A...
    printOperand(MI, 2); 
    O << ", "; 
    break;
  case 4:
    // ADC16rm, ADD16rm, AND16rm, CMOVA16rm, CMOVAE16rm, CMOVB16rm, CMOVBE16r...
    printi16mem(MI, 2); 
    O << ", "; 
    break;
  case 5:
    // ADC32rm, ADD32rm, AND32rm, CMOVA32rm, CMOVAE32rm, CMOVB32rm, CMOVBE32r...
    printi32mem(MI, 2); 
    O << ", "; 
    break;
  case 6:
    // ADC64rm, ADD64rm, AND64rm, CMOVA64rm, CMOVAE64rm, CMOVB64rm, CMOVBE64r...
    printi64mem(MI, 2); 
    O << ", "; 
    break;
  case 7:
    // ADC8rm, ADD8rm, AND8rm, CRC32m8, OR8rm, SBB8rm, SUB8rm, XOR8rm
    printi8mem(MI, 2); 
    O << ", "; 
    break;
  case 8:
    // ADDPDrm, ADDPSrm, ADDSUBPDrm, ADDSUBPSrm, ANDNPDrm, ANDNPSrm, ANDPDrm,...
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 9:
    // ADDSDrm, ADDSDrm_Int, DIVSDrm, DIVSDrm_Int, Int_CVTSD2SSrm, MAXSDrm, M...
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 10:
    // ADDSSrm, ADDSSrm_Int, DIVSSrm, DIVSSrm_Int, Int_CVTSS2SDrm, MAXSSrm, M...
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 11:
    // ADD_F32m, DIVR_F32m, DIV_F32m, FBLDm, FBSTPm, FCOM32m, FCOMP32m, FLDEN...
    printf32mem(MI, 0); 
    return;
    break;
  case 12:
    // ADD_F64m, DIVR_F64m, DIV_F64m, FCOM64m, FCOMP64m, LD_F64m, MUL_F64m, S...
    printf64mem(MI, 0); 
    return;
    break;
  case 13:
    // ADD_FI16m, DEC16m, DEC64_16m, DIV16m, DIVR_FI16m, DIV_FI16m, FICOM16m,...
    printi16mem(MI, 0); 
    return;
    break;
  case 14:
    // ADD_FI32m, CALL32m, DEC32m, DEC64_32m, DIV32m, DIVR_FI32m, DIV_FI32m, ...
    printi32mem(MI, 0); 
    break;
  case 15:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, INSERTPSrm, MMX_PINSRWrmi, M...
    printOperand(MI, 7); 
    O << ", "; 
    break;
  case 16:
    // BLENDPDrri, BLENDPSrri, DPPDrri, DPPSrri, INSERTPSrr, MMX_PINSRWrri, M...
    printOperand(MI, 3); 
    O << ", "; 
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 17:
    // BLENDVPDrm0, BLENDVPSrm0, PACKSSDWrm, PACKSSWBrm, PACKUSDWrm, PACKUSWB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 18:
    // BSF16rm, BSR16rm, CMP16rm, LAR16rm, LAR32rm, LAR64rm, LSL16rm, MOV16rm...
    printi16mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 19:
    // BSF16rr, BSF32rr, BSF64rr, BSR16rr, BSR32rr, BSR64rr, BT16ri8, BT16rr,...
    printOperand(MI, 1); 
    O << ", "; 
    break;
  case 20:
    // BSF32rm, BSR32rm, CMP32rm, CVTSI2SDrm, CVTSI2SSrm, FS_MOV32rm, GS_MOV3...
    printi32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 21:
    // BSF64rm, BSR64rm, CMP64rm, CVTSI2SD64rm, CVTSI2SS64rm, Int_CVTDQ2PDrm,...
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 22:
    // CALL64m, CMPXCHG8B, DEC64m, DIV64m, IDIV64m, ILD_F64m, IMUL64m, INC64m...
    printi64mem(MI, 0); 
    return;
    break;
  case 23:
    // CALL64pcrel32, CALLpcrel32, JAE_1, JAE_4, JA_1, JA_4, JBE_1, JBE_4, JB...
    print_pcrel_imm(MI, 0); 
    break;
  case 24:
    // CLFLUSH, DEC8m, DIV8m, IDIV8m, IMUL8m, INC8m, INVLPG, LOCK_DEC8m, LOCK...
    printi8mem(MI, 0); 
    return;
    break;
  case 25:
    // CMP8rm, MOV8rm, MOV8rm_NOREX, MOVSX16rm8W, MOVSX32rm8, MOVSX64rm8, MOV...
    printi8mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    break;
  case 26:
    // CMPPDrmi, CMPPSrmi, CMPSDrm, CMPSSrm, Int_CMPSDrm, Int_CMPSSrm
    printSSECC(MI, 7); 
    break;
  case 27:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printSSECC(MI, 3); 
    break;
  case 28:
    // CMPXCHG16B
    printi128mem(MI, 0); 
    return;
    break;
  case 29:
    // COMISDrm, COMISSrm, CVTDQ2PDrm, CVTDQ2PSrm, CVTPD2DQrm, CVTPD2PSrm, CV...
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 30:
    // CVTPS2PDrm, CVTSD2SI64rm, CVTSD2SSrm, CVTTSD2SI64rm, CVTTSD2SIrm, Int_...
    printf64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 31:
    // CVTSS2SDrm, CVTSS2SI64rm, CVTSS2SIrm, CVTTSS2SI64rm, CVTTSS2SIrm, Int_...
    printf32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 32:
    // EXTRACTPSmr, IMUL16rmi, IMUL16rmi8, IMUL32rmi, IMUL32rmi8, IMUL64rmi32...
    printOperand(MI, 6); 
    O << ", "; 
    break;
  case 33:
    // FARCALL16m, FARCALL32m, FARCALL64, FARJMP16m, FARJMP32m, FARJMP64, FXR...
    printopaquemem(MI, 0); 
    return;
    break;
  case 34:
    // Int_CVTDQ2PSrm, LDDQUrm, MOVDQArm, MOVDQUrm, MOVDQUrm_Int, MOVNTDQArm,...
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 35:
    // LDS16rm, LDS32rm, LES16rm, LES32rm, LFS16rm, LFS32rm, LFS64rm, LGS16rm...
    printopaquemem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 36:
    // LD_F80m, ST_FP80m
    printf80mem(MI, 0); 
    return;
    break;
  case 37:
    // LEA16r, LEA32r
    printlea32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 38:
    // LEA64_32r
    printlea64_32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 39:
    // LEA64r
    printlea64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 40:
    // TLS_addr32
    printlea32mem(MI, 0); 
    O << ", %eax; call\t___tls_get_addr@PLT"; 
    return;
    break;
  case 41:
    // TLS_addr64
    printlea64mem(MI, 0); 
    O << "(%rip), %rdi; .word\t0x6666; rex64; call\t__tls_get_addr@PLT"; 
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 32 unique commands.
  switch ((Bits >> 21) & 31) {
  default:   // unreachable.
  case 0:
    // ADC16i16, ADD16i16, AND16i16, CMP16i16, IN16ri, MOV16o16a, OR16i16, SB...
    O << ", %ax"; 
    return;
    break;
  case 1:
    // ADC16mi, ADC16mi8, ADC16mr, ADC32mi, ADC32mi8, ADC32mr, ADC64mi32, ADC...
    O << ", "; 
    break;
  case 2:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, A...
    printOperand(MI, 0); 
    break;
  case 3:
    // ADC32i32, ADD32i32, AND32i32, CMP32i32, IN32ri, MOV32o32a, OR32i32, SB...
    O << ", %eax"; 
    return;
    break;
  case 4:
    // ADC64i32, ADD64i32, AND64i32, CMP64i32, MOV64o64a, MOV64o8a, OR64i32, ...
    O << ", %rax"; 
    return;
    break;
  case 5:
    // ADC8i8, ADD8i8, AND8i8, CMP8i8, IN8ri, MOV8o8a, OR8i8, SBB8i8, SUB8i8,...
    O << ", %al"; 
    return;
    break;
  case 6:
    // ADD_FI32m, ADD_FPrST0, ADD_FST0r, ADD_FrST0, BSWAP32r, BSWAP64r, CALL3...
    return;
    break;
  case 7:
    // BLENDPDrmi, BLENDPSrmi, DPPDrmi, DPPSrmi, MPSADBWrmi, PALIGNR128rm, PB...
    printi128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 8:
    // CMOVBE_F, CMOVB_F, CMOVE_F, CMOVNBE_F, CMOVNB_F, CMOVNE_F, CMOVNP_F, C...
    O << ", %st(0)"; 
    return;
    break;
  case 9:
    // CMPPDrmi, CMPPDrri
    O << "pd\t"; 
    break;
  case 10:
    // CMPPSrmi, CMPPSrri
    O << "ps\t"; 
    break;
  case 11:
    // CMPSDrm, CMPSDrr, Int_CMPSDrm, Int_CMPSDrr
    O << "sd\t"; 
    break;
  case 12:
    // CMPSSrm, CMPSSrr, Int_CMPSSrm, Int_CMPSSrr
    O << "ss\t"; 
    break;
  case 13:
    // CRC32m16, CRC32m32, CRC32m8, CRC32r16, CRC32r32, CRC32r8, CRC64m64, CR...
    printOperand(MI, 1); 
    break;
  case 14:
    // EXTRACTPSmr, PEXTRBmr, PEXTRDmr, PEXTRQmr, PEXTRWmr, SHLD16mri8, SHLD3...
    printOperand(MI, 5); 
    O << ", "; 
    break;
  case 15:
    // IMUL16rmi, IMUL16rmi8
    printi16mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 16:
    // IMUL32rmi, IMUL32rmi8
    printi32mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 17:
    // IMUL64rmi32, IMUL64rmi8, MMX_PSHUFWmi
    printi64mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 18:
    // INSERTPSrm, ROUNDSSm_Int
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 19:
    // LCMPXCHG64
    O << ','; 
    printi64mem(MI, 0); 
    return;
    break;
  case 20:
    // LXADD16, MMX_PINSRWrmi, PINSRWrmi, XCHG16rm
    printi16mem(MI, 2); 
    break;
  case 21:
    // LXADD32, PINSRDrm, XCHG32rm
    printi32mem(MI, 2); 
    break;
  case 22:
    // LXADD64, PALIGNR64rm, PINSRQrm, XCHG64rm
    printi64mem(MI, 2); 
    break;
  case 23:
    // LXADD8, PINSRBrm, XCHG8rm
    printi8mem(MI, 2); 
    break;
  case 24:
    // MOV8rm_NOREX, MOVZX32_NOREXrm8
    O << "  # NOREX"; 
    return;
    break;
  case 25:
    // PCMPESTRIArm, PCMPESTRICrm, PCMPESTRIOrm, PCMPESTRISrm, PCMPESTRIZrm, ...
    printi128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 26:
    // ROUNDPDm_Int, ROUNDPSm_Int
    printf128mem(MI, 1); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 27:
    // ROUNDSDm_Int
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 28:
    // SHUFPDrmi, SHUFPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 29:
    // TAILJMPd, TAILJMPm, TAILJMPr, TAILJMPr64
    O << "  # TAILCALL"; 
    return;
    break;
  case 30:
    // TCRETURNdi, TCRETURNdi64, TCRETURNri, TCRETURNri64
    O << ' '; 
    printOperand(MI, 1); 
    return;
    break;
  case 31:
    // XCHG16rr, XCHG32rr, XCHG64rr, XCHG8rr
    printOperand(MI, 2); 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 16 unique commands.
  switch ((Bits >> 17) & 15) {
  default:   // unreachable.
  case 0:
    // ADC16mi, ADC16mi8, ADC16mr, ADD16mi, ADD16mi8, ADD16mr, AND16mi, AND16...
    printi16mem(MI, 0); 
    return;
    break;
  case 1:
    // ADC16ri, ADC16ri8, ADC16rm, ADC16rr, ADC16rr_REV, ADC32ri, ADC32ri8, A...
    return;
    break;
  case 2:
    // ADC32mi, ADC32mi8, ADC32mr, ADD32mi, ADD32mi8, ADD32mr, AND32mi, AND32...
    printi32mem(MI, 0); 
    return;
    break;
  case 3:
    // ADC64mi32, ADC64mi8, ADC64mr, ADD64mi32, ADD64mi8, ADD64mr, AND64mi32,...
    printi64mem(MI, 0); 
    return;
    break;
  case 4:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, CMPXCH...
    printi8mem(MI, 0); 
    break;
  case 5:
    // CMPPDrmi, CMPPSrmi
    printf128mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 6:
    // CMPPDrri, CMPPSrri, CMPSDrr, CMPSSrr, Int_CMPSDrr, Int_CMPSSrr
    printOperand(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 7:
    // CMPSDrm, Int_CMPSDrm
    printf64mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 8:
    // CMPSSrm, Int_CMPSSrm
    printf32mem(MI, 2); 
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 9:
    // ENTER, FARCALL16i, FARCALL32i, FARJMP16i, FARJMP32i, VASTART_SAVE_XMM_...
    printOperand(MI, 1); 
    break;
  case 10:
    // EXTRACTPSmr, MOVSSmr
    printf32mem(MI, 0); 
    return;
    break;
  case 11:
    // EXTRACTPSrr, IMUL16rri, IMUL16rri8, IMUL32rri, IMUL32rri8, IMUL64rri32...
    O << ", "; 
    printOperand(MI, 0); 
    return;
    break;
  case 12:
    // MOV8rr_NOREX, MOVZX32_NOREXrr8
    O << "  # NOREX"; 
    return;
    break;
  case 13:
    // MOVAPDmr, MOVAPSmr, MOVNTDQ_64mr, MOVNTDQmr, MOVNTDQmr_Int, MOVNTPDmr,...
    printf128mem(MI, 0); 
    return;
    break;
  case 14:
    // MOVDQAmr, MOVDQUmr, MOVDQUmr_Int, MOVNTPDmr_Int, MOVNTPSmr_Int
    printi128mem(MI, 0); 
    return;
    break;
  case 15:
    // MOVHPDmr, MOVHPSmr, MOVLPDmr, MOVLPSmr, MOVSDmr
    printf64mem(MI, 0); 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 15) & 3) {
  default:   // unreachable.
  case 0:
    // ADC8mi, ADC8mr, ADD8mi, ADD8mr, AND8mi, AND8mr, CMP8mi, CMP8mr, CMPXCH...
    return;
    break;
  case 1:
    // MOV8mr_NOREX
    O << "  # NOREX"; 
    return;
    break;
  case 2:
    // VASTART_SAVE_XMM_REGS
    O << ", "; 
    printOperand(MI, 2); 
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *X86ATTInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 159 && "Invalid register number!");

  static const unsigned RegAsmOffset[] = {
    0, 3, 6, 9, 12, 15, 18, 22, 25, 28, 31, 34, 37, 40, 
    43, 47, 50, 54, 58, 62, 66, 70, 74, 78, 82, 85, 88, 92, 
    96, 100, 105, 110, 115, 120, 125, 130, 135, 140, 144, 148, 152, 158, 
    162, 165, 169, 173, 177, 181, 185, 189, 193, 197, 201, 204, 207, 210, 
    214, 218, 222, 226, 230, 234, 238, 242, 246, 251, 256, 261, 265, 270, 
    275, 280, 284, 289, 294, 299, 303, 308, 313, 318, 322, 327, 332, 337, 
    341, 346, 351, 356, 359, 363, 367, 371, 374, 378, 382, 386, 390, 394, 
    398, 403, 408, 413, 418, 423, 428, 433, 438, 443, 447, 451, 455, 459, 
    463, 467, 470, 474, 477, 481, 484, 490, 496, 502, 508, 514, 520, 526, 
    532, 537, 542, 548, 554, 560, 566, 572, 578, 583, 588, 593, 598, 603, 
    608, 613, 618, 623, 628, 634, 640, 646, 652, 658, 664, 669, 674, 679, 
    684, 689, 694, 699, 0
  };

  const char *AsmStrs =
    "ah\000al\000ax\000bh\000bl\000bp\000bpl\000bx\000ch\000cl\000cs\000cx\000"
    "dh\000di\000dil\000dl\000dr0\000dr1\000dr2\000dr3\000dr4\000dr5\000dr6\000"
    "dr7\000ds\000dx\000eax\000ebp\000ebx\000ecr0\000ecr1\000ecr2\000ecr3\000"
    "ecr4\000ecr5\000ecr6\000ecr7\000ecx\000edi\000edx\000flags\000eip\000es"
    "\000esi\000esp\000fp0\000fp1\000fp2\000fp3\000fp4\000fp5\000fp6\000fs\000"
    "gs\000ip\000mm0\000mm1\000mm2\000mm3\000mm4\000mm5\000mm6\000mm7\000r10"
    "\000r10b\000r10d\000r10w\000r11\000r11b\000r11d\000r11w\000r12\000r12b\000"
    "r12d\000r12w\000r13\000r13b\000r13d\000r13w\000r14\000r14b\000r14d\000r"
    "14w\000r15\000r15b\000r15d\000r15w\000r8\000r8b\000r8d\000r8w\000r9\000"
    "r9b\000r9d\000r9w\000rax\000rbp\000rbx\000rcr0\000rcr1\000rcr2\000rcr3\000"
    "rcr4\000rcr5\000rcr6\000rcr7\000rcr8\000rcx\000rdi\000rdx\000rip\000rsi"
    "\000rsp\000si\000sil\000sp\000spl\000ss\000st(0)\000st(1)\000st(2)\000s"
    "t(3)\000st(4)\000st(5)\000st(6)\000st(7)\000xmm0\000xmm1\000xmm10\000xm"
    "m11\000xmm12\000xmm13\000xmm14\000xmm15\000xmm2\000xmm3\000xmm4\000xmm5"
    "\000xmm6\000xmm7\000xmm8\000xmm9\000ymm0\000ymm1\000ymm10\000ymm11\000y"
    "mm12\000ymm13\000ymm14\000ymm15\000ymm2\000ymm3\000ymm4\000ymm5\000ymm6"
    "\000ymm7\000ymm8\000ymm9\000";
  return AsmStrs+RegAsmOffset[RegNo-1];
}


#ifdef GET_INSTRUCTION_NAME
#undef GET_INSTRUCTION_NAME

/// getInstructionName: This method is automatically generated by tblgen
/// from the instruction set description.  This returns the enum name of the
/// specified instruction.
const char *X86ATTInstPrinter::getInstructionName(unsigned Opcode) {
  assert(Opcode < 2525 && "Invalid instruction number!");

  static const unsigned InstAsmOffset[] = {
    0, 4, 14, 24, 33, 42, 47, 62, 76, 89, 103, 120, 130, 136, 
    145, 154, 163, 172, 180, 189, 197, 205, 214, 222, 230, 242, 251, 259, 
    268, 276, 284, 293, 301, 309, 321, 330, 340, 349, 357, 367, 376, 384, 
    392, 404, 411, 418, 425, 432, 439, 446, 457, 466, 474, 483, 491, 502, 
    510, 519, 527, 535, 544, 552, 561, 569, 580, 588, 597, 605, 613, 622, 
    632, 641, 649, 660, 670, 679, 687, 695, 702, 709, 716, 726, 733, 740, 
    747, 755, 763, 771, 779, 787, 799, 807, 819, 827, 839, 847, 859, 870, 
    881, 892, 903, 912, 921, 931, 941, 952, 962, 971, 981, 990, 1000, 1012, 
    1021, 1033, 1045, 1058, 1071, 1084, 1097, 1110, 1123, 1133, 1152, 1171, 1188, 1205, 
    1214, 1222, 1231, 1239, 1247, 1256, 1264, 1272, 1284, 1293, 1301, 1310, 1318, 1326, 
    1335, 1343, 1351, 1363, 1372, 1382, 1391, 1399, 1409, 1418, 1426, 1434, 1446, 1453, 
    1460, 1467, 1474, 1481, 1488, 1499, 1508, 1517, 1526, 1535, 1543, 1551, 1559, 1567, 
    1579, 1589, 1599, 1609, 1621, 1630, 1640, 1650, 1660, 1670, 1680, 1690, 1701, 1712, 
    1723, 1736, 1746, 1755, 1764, 1773, 1784, 1792, 1804, 1817, 1828, 1839, 1850, 1861, 
    1872, 1883, 1893, 1903, 1913, 1925, 1934, 1945, 1956, 1967, 1978, 1990, 2002, 2014, 
    2026, 2034, 2042, 2050, 2058, 2066, 2074, 2082, 2090, 2098, 2106, 2114, 2122, 2131, 
    2140, 2148, 2155, 2163, 2170, 2178, 2185, 2193, 2200, 2208, 2215, 2223, 2230, 2239, 
    2247, 2256, 2264, 2273, 2281, 2290, 2298, 2307, 2315, 2324, 2332, 2341, 2349, 2358, 
    2366, 2375, 2383, 2392, 2400, 2409, 2417, 2426, 2434, 2443, 2451, 2460, 2468, 2477, 
    2485, 2494, 2502, 2511, 2519, 2528, 2536, 2544, 2552, 2560, 2574, 2582, 2594, 2598, 
    2602, 2607, 2613, 2622, 2631, 2640, 2644, 2648, 2656, 2660, 2665, 2669, 2679, 2689, 
    2699, 2709, 2719, 2729, 2740, 2751, 2762, 2773, 2784, 2795, 2805, 2815, 2825, 2835, 
    2845, 2855, 2866, 2877, 2888, 2899, 2910, 2921, 2930, 2942, 2954, 2966, 2974, 2985, 
    2996, 3007, 3017, 3027, 3037, 3047, 3057, 3067, 3075, 3086, 3097, 3108, 3118, 3128, 
    3138, 3148, 3158, 3168, 3179, 3190, 3201, 3212, 3223, 3234, 3244, 3254, 3264, 3274, 
    3284, 3294, 3305, 3316, 3327, 3338, 3349, 3360, 3370, 3383, 3396, 3409, 3418, 3430, 
    3442, 3454, 3465, 3476, 3487, 3498, 3509, 3520, 3529, 3541, 3553, 3565, 3576, 3587, 
    3598, 3609, 3620, 3631, 3642, 3653, 3664, 3675, 3686, 3697, 3706, 3718, 3730, 3742, 
    3753, 3764, 3775, 3786, 3797, 3808, 3818, 3828, 3838, 3848, 3858, 3868, 3878, 3888, 
    3898, 3908, 3918, 3928, 3936, 3947, 3958, 3969, 3979, 3989, 3999, 4009, 4019, 4029, 
    4039, 4049, 4058, 4069, 4080, 4091, 4102, 4111, 4119, 4128, 4136, 4147, 4155, 4164, 
    4172, 4180, 4189, 4197, 4206, 4214, 4225, 4233, 4242, 4250, 4258, 4267, 4277, 4286, 
    4294, 4305, 4315, 4324, 4332, 4340, 4347, 4354, 4361, 4371, 4378, 4385, 4392, 4401, 
    4410, 4419, 4428, 4435, 4442, 4449, 4455, 4463, 4471, 4479, 4487, 4498, 4510, 4522, 
    4534, 4546, 4558, 4570, 4580, 4591, 4602, 4611, 4620, 4629, 4638, 4649, 4658, 4666, 
    4676, 4682, 4691, 4700, 4709, 4715, 4719, 4728, 4737, 4745, 4754, 4763, 4771, 4780, 
    4789, 4799, 4810, 4821, 4832, 4843, 4854, 4865, 4876, 4887, 4898, 4909, 4920, 4931, 
    4944, 4957, 4968, 4979, 4992, 5005, 5016, 5027, 5040, 5053, 5064, 5075, 5086, 5097, 
    5110, 5123, 5134, 5145, 5157, 5169, 5183, 5197, 5209, 5221, 5235, 5249, 5261, 5273, 
    5277, 5282, 5289, 5296, 5303, 5310, 5320, 5330, 5340, 5350, 5357, 5364, 5370, 5376, 
    5383, 5390, 5397, 5404, 5411, 5418, 5424, 5430, 5438, 5446, 5454, 5462, 5472, 5482, 
    5493, 5504, 5516, 5527, 5538, 5549, 5562, 5575, 5588, 5602, 5616, 5630, 5644, 5658, 
    5672, 5683, 5691, 5703, 5711, 5723, 5731, 5743, 5751, 5763, 5772, 5781, 5791, 5801, 
    5812, 5822, 5831, 5841, 5850, 5860, 5872, 5881, 5893, 5905, 5918, 5931, 5944, 5957, 
    5970, 5983, 5993, 6001, 6009, 6017, 6025, 6035, 6045, 6057, 6063, 6073, 6085, 6097, 
    6103, 6114, 6125, 6136, 6147, 6157, 6167, 6177, 6187, 6197, 6206, 6212, 6219, 6227, 
    6235, 6244, 6253, 6260, 6268, 6274, 6283, 6292, 6302, 6312, 6320, 6329, 6337, 6344, 
    6351, 6358, 6365, 6371, 6378, 6385, 6390, 6400, 6409, 6417, 6438, 6459, 6480, 6501, 
    6522, 6543, 6564, 6585, 6606, 6613, 6619, 6626, 6632, 6644, 6652, 6660, 6667, 6674, 
    6682, 6690, 6701, 6711, 6716, 6724, 6731, 6739, 6745, 6753, 6766, 6779, 6792, 6805, 
    6818, 6831, 6844, 6857, 6870, 6883, 6896, 6909, 6920, 6931, 6942, 6953, 6963, 6973, 
    6983, 6993, 7002, 7011, 7022, 7033, 7044, 7055, 7064, 7073, 7082, 7091, 7101, 7111, 
    7121, 7131, 7142, 7152, 7161, 7170, 7179, 7188, 7192, 7201, 7210, 7219, 7228, 7236, 
    7244, 7252, 7260, 7268, 7276, 7283, 7290, 7299, 7308, 7317, 7329, 7341, 7353, 7365, 
    7377, 7389, 7401, 7413, 7425, 7433, 7441, 7450, 7460, 7471, 7480, 7490, 7501, 7509, 
    7517, 7526, 7536, 7547, 7556, 7566, 7577, 7585, 7593, 7602, 7614, 7625, 7634, 7646, 
    7657, 7664, 7671, 7676, 7683, 7690, 7695, 7702, 7709, 7713, 7719, 7725, 7732, 7739, 
    7746, 7753, 7763, 7773, 7783, 7793, 7800, 7807, 7813, 7819, 7830, 7841, 7845, 7850, 
    7855, 7862, 7869, 7877, 7884, 7891, 7898, 7909, 7920, 7931, 7944, 7957, 7970, 7983, 
    7996, 8009, 8022, 8035, 8048, 8057, 8066, 8076, 8086, 8096, 8108, 8120, 8132, 8144, 
    8156, 8168, 8180, 8192, 8204, 8216, 8228, 8240, 8252, 8265, 8278, 8291, 8304, 8319, 
    8334, 8349, 8364, 8379, 8394, 8409, 8424, 8439, 8454, 8469, 8484, 8499, 8514, 8529, 
    8544, 8559, 8574, 8589, 8604, 8621, 8638, 8653, 8668, 8683, 8698, 8715, 8732, 8747, 
    8762, 8779, 8796, 8811, 8826, 8841, 8856, 8873, 8890, 8905, 8920, 8936, 8952, 8968, 
    8984, 9000, 9016, 9032, 9048, 9066, 9084, 9100, 9116, 9134, 9152, 9168, 9184, 9198, 
    9212, 9226, 9240, 9246, 9252, 9257, 9262, 9268, 9274, 9279, 9284, 9290, 9295, 9300, 
    9306, 9312, 9317, 9322, 9328, 9334, 9339, 9344, 9351, 9358, 9365, 9378, 9385, 9391, 
    9397, 9403, 9409, 9415, 9421, 9427, 9433, 9439, 9445, 9450, 9455, 9460, 9465, 9470, 
    9475, 9480, 9488, 9496, 9504, 9512, 9520, 9528, 9539, 9550, 9561, 9571, 9582, 9590, 
    9598, 9606, 9614, 9620, 9626, 9634, 9642, 9650, 9659, 9668, 9677, 9686, 9695, 9704, 
    9713, 9724, 9735, 9744, 9755, 9764, 9771, 9778, 9785, 9795, 9802, 9808, 9816, 9824, 
    9832, 9839, 9847, 9855, 9863, 9869, 9877, 9885, 9893, 9899, 9907, 9915, 9923, 9931, 
    9944, 9958, 9971, 9984, 9998, 10011, 10026, 10040, 10053, 10065, 10077, 10089, 10101, 10113, 
    10124, 10136, 10148, 10160, 10171, 10183, 10196, 10210, 10223, 10236, 10250, 10263, 10278, 10292, 
    10305, 10317, 10329, 10335, 10341, 10347, 10353, 10358, 10364, 10371, 10376, 10382, 10390, 10398, 
    10406, 10414, 10422, 10430, 10438, 10446, 10454, 10459, 10464, 10472, 10480, 10488, 10495, 10506, 
    10519, 10527, 10539, 10547, 10559, 10567, 10579, 10587, 10599, 10607, 10619, 10627, 10639, 10647, 
    10659, 10667, 10679, 10686, 10699, 10707, 10719, 10727, 10739, 10747, 10759, 10767, 10779, 10787, 
    10799, 10807, 10819, 10827, 10839, 10847, 10859, 10874, 10889, 10904, 10919, 10934, 10949, 10964, 
    10979, 10995, 11011, 11027, 11043, 11052, 11062, 11075, 11090, 11109, 11123, 11136, 11149, 11162, 
    11179, 11196, 11210, 11223, 11237, 11253, 11267, 11280, 11293, 11306, 11323, 11340, 11355, 11370, 
    11385, 11400, 11415, 11430, 11442, 11454, 11466, 11478, 11490, 11502, 11515, 11528, 11541, 11554, 
    11568, 11582, 11596, 11610, 11622, 11634, 11646, 11658, 11669, 11680, 11692, 11704, 11716, 11728, 
    11742, 11756, 11770, 11784, 11798, 11812, 11826, 11840, 11854, 11868, 11882, 11896, 11909, 11923, 
    11937, 11951, 11965, 11978, 11991, 12004, 12017, 12030, 12043, 12056, 12069, 12084, 12098, 12112, 
    12125, 12138, 12151, 12164, 12178, 12192, 12202, 12212, 12225, 12238, 12251, 12264, 12276, 12288, 
    12300, 12312, 12324, 12336, 12348, 12360, 12372, 12384, 12396, 12408, 12420, 12432, 12444, 12456, 
    12468, 12480, 12492, 12504, 12516, 12528, 12540, 12552, 12564, 12576, 12588, 12600, 12612, 12624, 
    12637, 12650, 12663, 12676, 12690, 12704, 12718, 12732, 12744, 12756, 12772, 12788, 12804, 12820, 
    12836, 12852, 12868, 12884, 12900, 12916, 12932, 12948, 12959, 12970, 12981, 12998, 13006, 13016, 
    13024, 13032, 13040, 13050, 13058, 13066, 13074, 13082, 13094, 13102, 13110, 13118, 13128, 13136, 
    13144, 13152, 13160, 13170, 13178, 13186, 13194, 13202, 13210, 13218, 13230, 13240, 13250, 13260, 
    13269, 13277, 13285, 13295, 13303, 13311, 13321, 13330, 13338, 13346, 13354, 13362, 13372, 13385, 
    13393, 13401, 13413, 13421, 13429, 13437, 13450, 13462, 13474, 13482, 13489, 13496, 13509, 13517, 
    13524, 13531, 13538, 13551, 13558, 13571, 13582, 13591, 13600, 13609, 13618, 13627, 13636, 13646, 
    13656, 13668, 13680, 13691, 13702, 13711, 13720, 13729, 13738, 13751, 13760, 13773, 13783, 13792, 
    13801, 13810, 13819, 13829, 13838, 13847, 13856, 13865, 13876, 13887, 13898, 13909, 13922, 13932, 
    13946, 13958, 13967, 13980, 13990, 14004, 14014, 14028, 14037, 14049, 14061, 14073, 14086, 14098, 
    14107, 14113, 14119, 14127, 14135, 14143, 14155, 14167, 14178, 14189, 14200, 14211, 14222, 14233, 
    14241, 14249, 14257, 14263, 14274, 14286, 14297, 14309, 14321, 14332, 14344, 14355, 14367, 14379, 
    14390, 14402, 14414, 14425, 14434, 14447, 14456, 14469, 14478, 14487, 14500, 14509, 14522, 14531, 
    14544, 14557, 14573, 14589, 14602, 14615, 14626, 14638, 14649, 14661, 14678, 14695, 14707, 14718, 
    14730, 14741, 14753, 14767, 14779, 14790, 14803, 14815, 14829, 14841, 14852, 14865, 14876, 14887, 
    14898, 14909, 14920, 14931, 14942, 14953, 14964, 14975, 14986, 14993, 15000, 15007, 15014, 15021, 
    15028, 15034, 15040, 15048, 15056, 15064, 15072, 15080, 15092, 15100, 15112, 15120, 15132, 15140, 
    15152, 15161, 15170, 15180, 15190, 15201, 15211, 15220, 15230, 15239, 15249, 15261, 15270, 15282, 
    15294, 15307, 15320, 15333, 15346, 15359, 15372, 15382, 15388, 15395, 15402, 15409, 15416, 15423, 
    15430, 15436, 15442, 15447, 15453, 15459, 15466, 15473, 15480, 15487, 15494, 15501, 15507, 15513, 
    15521, 15528, 15536, 15543, 15550, 15558, 15565, 15572, 15583, 15591, 15598, 15606, 15613, 15620, 
    15628, 15635, 15642, 15653, 15661, 15670, 15678, 15685, 15694, 15702, 15709, 15716, 15727, 15733, 
    15739, 15745, 15751, 15757, 15763, 15773, 15780, 15787, 15794, 15801, 15809, 15817, 15825, 15833, 
    15840, 15847, 15853, 15859, 15865, 15876, 15886, 15897, 15907, 15918, 15928, 15939, 15949, 15960, 
    15970, 15981, 15991, 16002, 16013, 16024, 16035, 16046, 16057, 16068, 16079, 16087, 16095, 16103, 
    16111, 16119, 16127, 16136, 16145, 16154, 16163, 16173, 16183, 16193, 16203, 16211, 16219, 16232, 
    16245, 16257, 16269, 16277, 16285, 16292, 16299, 16307, 16315, 16323, 16331, 16343, 16355, 16366, 
    16377, 16387, 16397, 16407, 16417, 16427, 16437, 16447, 16457, 16470, 16483, 16496, 16509, 16522, 
    16535, 16548, 16561, 16574, 16587, 16599, 16611, 16627, 16643, 16658, 16673, 16683, 16693, 16703, 
    16713, 16723, 16733, 16743, 16753, 16766, 16779, 16792, 16805, 16818, 16831, 16844, 16857, 16870, 
    16883, 16895, 16907, 16923, 16939, 16954, 16969, 16978, 16987, 16996, 17005, 17014, 17023, 17032, 
    17041, 17053, 17064, 17076, 17087, 17100, 17112, 17125, 17137, 17149, 17160, 17172, 17183, 17199, 
    17215, 17227, 17238, 17250, 17261, 17274, 17286, 17299, 17311, 17323, 17334, 17346, 17357, 17366, 
    17375, 17384, 17393, 17402, 17411, 17421, 17431, 17446, 17460, 17475, 17489, 17499, 17509, 17518, 
    17527, 17536, 17545, 17554, 17563, 17572, 17581, 17590, 17599, 17608, 17617, 17626, 17635, 17644, 
    17653, 17662, 17671, 17680, 17689, 17698, 17707, 17716, 17725, 17736, 17747, 17758, 17769, 17780, 
    17791, 17802, 17813, 17824, 17835, 17846, 17857, 17868, 17879, 17890, 17901, 17912, 17923, 17934, 
    17945, 17956, 17967, 17978, 17989, 18000, 18009, 18018, 18032, 18045, 18059, 18072, 18082, 18092, 
    18101, 18110, 18119, 18132, 18141, 18154, 18163, 18172, 18182, 18192, 18199, 18208, 18217, 18224, 
    18233, 18242, 18249, 18258, 18267, 18278, 18289, 18300, 18311, 18322, 18333, 18338, 18344, 18350, 
    18358, 18366, 18374, 18382, 18390, 18398, 18404, 18410, 18422, 18433, 18444, 18455, 18464, 18473, 
    18485, 18496, 18508, 18519, 18528, 18537, 18547, 18557, 18567, 18577, 18589, 18600, 18612, 18623, 
    18635, 18646, 18658, 18669, 18681, 18692, 18704, 18715, 18724, 18732, 18740, 18748, 18756, 18764, 
    18772, 18780, 18788, 18796, 18804, 18812, 18820, 18828, 18836, 18844, 18853, 18861, 18869, 18877, 
    18885, 18893, 18901, 18909, 18917, 18925, 18933, 18941, 18949, 18957, 18965, 18973, 18982, 18991, 
    19000, 19009, 19019, 19029, 19039, 19049, 19057, 19065, 19073, 19081, 19093, 19105, 19117, 19129, 
    19142, 19155, 19167, 19179, 19191, 19203, 19215, 19227, 19240, 19253, 19265, 19277, 19285, 19295, 
    19305, 19315, 19325, 19334, 19342, 19352, 19362, 19372, 19382, 19391, 19399, 19409, 19419, 19425, 
    19432, 19441, 19450, 19459, 19468, 19477, 19486, 19495, 19502, 19509, 19517, 19526, 19534, 19542, 
    19551, 19559, 19567, 19576, 19584, 19592, 19601, 19609, 19617, 19626, 19634, 19642, 19651, 19659, 
    19666, 19674, 19681, 19688, 19696, 19703, 19710, 19721, 19728, 19739, 19746, 19757, 19764, 19775, 
    19783, 19792, 19800, 19808, 19817, 19825, 19833, 19842, 19850, 19858, 19867, 19875, 19883, 19892, 
    19900, 19908, 19917, 19925, 19932, 19940, 19947, 19954, 19962, 19969, 19975, 19981, 19987, 19994, 
    20007, 20017, 20027, 20037, 20047, 20058, 20068, 20078, 20088, 20098, 20102, 20107, 20115, 20124, 
    20132, 20140, 20149, 20157, 20165, 20174, 20182, 20190, 20199, 20207, 20215, 20224, 20232, 20240, 
    20249, 20257, 20264, 20272, 20279, 20286, 20294, 20301, 20309, 20318, 20326, 20334, 20343, 20351, 
    20359, 20368, 20376, 20384, 20393, 20401, 20409, 20418, 20426, 20434, 20443, 20451, 20458, 20466, 
    20473, 20480, 20488, 20495, 20508, 20521, 20534, 20547, 20560, 20573, 20586, 20599, 20603, 20612, 
    20625, 20634, 20647, 20656, 20669, 20678, 20691, 20696, 20704, 20713, 20721, 20729, 20738, 20746, 
    20754, 20763, 20771, 20779, 20788, 20796, 20804, 20813, 20821, 20829, 20838, 20846, 20853, 20861, 
    20868, 20875, 20883, 20890, 20899, 20907, 20916, 20924, 20932, 20941, 20949, 20957, 20969, 20978, 
    20986, 20995, 21003, 21011, 21020, 21028, 21036, 21048, 21057, 21067, 21076, 21084, 21094, 21103, 
    21111, 21119, 21131, 21138, 21145, 21152, 21159, 21166, 21173, 21184, 21191, 21198, 21205, 21211, 
    21218, 21225, 21231, 21237, 21244, 21251, 21261, 21271, 21281, 21290, 21296, 21302, 21308, 21314, 
    21321, 21328, 21334, 21340, 21347, 21354, 21360, 21366, 21373, 21380, 21387, 21394, 21401, 21408, 
    21415, 21422, 21428, 21434, 21440, 21446, 21452, 21458, 21465, 21471, 21479, 21488, 21496, 21504, 
    21513, 21521, 21529, 21538, 21546, 21554, 21563, 21571, 21579, 21588, 21596, 21604, 21613, 21621, 
    21628, 21636, 21643, 21650, 21658, 21665, 21676, 21687, 21698, 21709, 21720, 21731, 21742, 21753, 
    21764, 21775, 21786, 21797, 21805, 21814, 21822, 21830, 21839, 21847, 21855, 21864, 21872, 21880, 
    21889, 21897, 21905, 21914, 21922, 21930, 21939, 21947, 21954, 21962, 21969, 21976, 21984, 21991, 
    22002, 22013, 22024, 22035, 22046, 22057, 22068, 22079, 22090, 22101, 22112, 22123, 22133, 22143, 
    22153, 22163, 22169, 22175, 22184, 22193, 22202, 22210, 22218, 22226, 22234, 22242, 22250, 22258, 
    22266, 22274, 22286, 22294, 22306, 22314, 22326, 22334, 22346, 22354, 22366, 22374, 22386, 22394, 
    22406, 22414, 22426, 22433, 22443, 22453, 22463, 22473, 22477, 22481, 22485, 22493, 22499, 22505, 
    22511, 22516, 22521, 22529, 22537, 22546, 22555, 22564, 22572, 22581, 22590, 22601, 22612, 22623, 
    22633, 22643, 22655, 22665, 22677, 22689, 22696, 22705, 22713, 22722, 22730, 22738, 22747, 22755, 
    22763, 22775, 22784, 22792, 22801, 22809, 22817, 22826, 22834, 22842, 22854, 22863, 22873, 22882, 
    22890, 22900, 22909, 22917, 22925, 22937, 22944, 22951, 22958, 22965, 22972, 22979, 22990, 22998, 
    23006, 23014, 23022, 23032, 23042, 23053, 23064, 23076, 23087, 23098, 23109, 23122, 23135, 23148, 
    23162, 23176, 23190, 23204, 23218, 23232, 23243, 23251, 23263, 23271, 23283, 23291, 23303, 23311, 
    23323, 23332, 23341, 23351, 23361, 23372, 23382, 23391, 23401, 23410, 23420, 23432, 23441, 23453, 
    23465, 23478, 23491, 23504, 23517, 23530, 23543, 23553, 23560, 23568, 23577, 23585, 23595, 23602, 
    23611, 23620, 23629, 23640, 23651, 23664, 23675, 23688, 23698, 23707, 23716, 23725, 23734, 23744, 
    23753, 23762, 23771, 23780, 23790, 23801, 23812, 23821, 23830, 23838, 23846, 23854, 23862, 23870, 
    23881, 23892, 23897, 23903, 23912, 23921, 23930, 23940, 23950, 23960, 23970, 23980, 23989, 23999, 
    24008, 24020, 24032, 24044, 24055, 24066, 24077, 24085, 24096, 24107, 24118, 24129, 24140, 24151, 
    24162, 24173, 24195, 24201, 24207, 24213, 24219, 24226, 24235, 24244, 24253, 24262, 24273, 24284, 
    24295, 24306, 24315, 24327, 24339, 24351, 24363, 24370, 24376, 24383, 24396, 24401, 24408, 24419, 
    24436, 24447, 24453, 24462, 24471, 24480, 24489, 24498, 24507, 24515, 24523, 24532, 24541, 24550, 
    24559, 24568, 24577, 24586, 24595, 24604, 24612, 24620, 24626, 24631, 24640, 24648, 24657, 24665, 
    24673, 24682, 24690, 24698, 24710, 24719, 24727, 24736, 24744, 24752, 24761, 24769, 24777, 24789, 
    24798, 24808, 24817, 24825, 24835, 24844, 24852, 24860, 24872, 24879, 24886, 24893, 24900, 24907, 
    24914, 24925, 24933, 24941, 24949, 0
  };

  const char *Strs =
    "PHI\000INLINEASM\000DBG_LABEL\000EH_LABEL\000GC_LABEL\000KILL\000EXTRAC"
    "T_SUBREG\000INSERT_SUBREG\000IMPLICIT_DEF\000SUBREG_TO_REG\000COPY_TO_R"
    "EGCLASS\000DBG_VALUE\000ABS_F\000ABS_Fp32\000ABS_Fp64\000ABS_Fp80\000AD"
    "C16i16\000ADC16mi\000ADC16mi8\000ADC16mr\000ADC16ri\000ADC16ri8\000ADC1"
    "6rm\000ADC16rr\000ADC16rr_REV\000ADC32i32\000ADC32mi\000ADC32mi8\000ADC"
    "32mr\000ADC32ri\000ADC32ri8\000ADC32rm\000ADC32rr\000ADC32rr_REV\000ADC"
    "64i32\000ADC64mi32\000ADC64mi8\000ADC64mr\000ADC64ri32\000ADC64ri8\000A"
    "DC64rm\000ADC64rr\000ADC64rr_REV\000ADC8i8\000ADC8mi\000ADC8mr\000ADC8r"
    "i\000ADC8rm\000ADC8rr\000ADC8rr_REV\000ADD16i16\000ADD16mi\000ADD16mi8\000"
    "ADD16mr\000ADD16mrmrr\000ADD16ri\000ADD16ri8\000ADD16rm\000ADD16rr\000A"
    "DD32i32\000ADD32mi\000ADD32mi8\000ADD32mr\000ADD32mrmrr\000ADD32ri\000A"
    "DD32ri8\000ADD32rm\000ADD32rr\000ADD64i32\000ADD64mi32\000ADD64mi8\000A"
    "DD64mr\000ADD64mrmrr\000ADD64ri32\000ADD64ri8\000ADD64rm\000ADD64rr\000"
    "ADD8i8\000ADD8mi\000ADD8mr\000ADD8mrmrr\000ADD8ri\000ADD8rm\000ADD8rr\000"
    "ADDPDrm\000ADDPDrr\000ADDPSrm\000ADDPSrr\000ADDSDrm\000ADDSDrm_Int\000A"
    "DDSDrr\000ADDSDrr_Int\000ADDSSrm\000ADDSSrm_Int\000ADDSSrr\000ADDSSrr_I"
    "nt\000ADDSUBPDrm\000ADDSUBPDrr\000ADDSUBPSrm\000ADDSUBPSrr\000ADD_F32m\000"
    "ADD_F64m\000ADD_FI16m\000ADD_FI32m\000ADD_FPrST0\000ADD_FST0r\000ADD_Fp"
    "32\000ADD_Fp32m\000ADD_Fp64\000ADD_Fp64m\000ADD_Fp64m32\000ADD_Fp80\000"
    "ADD_Fp80m32\000ADD_Fp80m64\000ADD_FpI16m32\000ADD_FpI16m64\000ADD_FpI16"
    "m80\000ADD_FpI32m32\000ADD_FpI32m64\000ADD_FpI32m80\000ADD_FrST0\000ADJ"
    "CALLSTACKDOWN32\000ADJCALLSTACKDOWN64\000ADJCALLSTACKUP32\000ADJCALLSTA"
    "CKUP64\000AND16i16\000AND16mi\000AND16mi8\000AND16mr\000AND16ri\000AND1"
    "6ri8\000AND16rm\000AND16rr\000AND16rr_REV\000AND32i32\000AND32mi\000AND"
    "32mi8\000AND32mr\000AND32ri\000AND32ri8\000AND32rm\000AND32rr\000AND32r"
    "r_REV\000AND64i32\000AND64mi32\000AND64mi8\000AND64mr\000AND64ri32\000A"
    "ND64ri8\000AND64rm\000AND64rr\000AND64rr_REV\000AND8i8\000AND8mi\000AND"
    "8mr\000AND8ri\000AND8rm\000AND8rr\000AND8rr_REV\000ANDNPDrm\000ANDNPDrr"
    "\000ANDNPSrm\000ANDNPSrr\000ANDPDrm\000ANDPDrr\000ANDPSrm\000ANDPSrr\000"
    "ATOMADD6432\000ATOMAND16\000ATOMAND32\000ATOMAND64\000ATOMAND6432\000AT"
    "OMAND8\000ATOMMAX16\000ATOMMAX32\000ATOMMAX64\000ATOMMIN16\000ATOMMIN32"
    "\000ATOMMIN64\000ATOMNAND16\000ATOMNAND32\000ATOMNAND64\000ATOMNAND6432"
    "\000ATOMNAND8\000ATOMOR16\000ATOMOR32\000ATOMOR64\000ATOMOR6432\000ATOM"
    "OR8\000ATOMSUB6432\000ATOMSWAP6432\000ATOMUMAX16\000ATOMUMAX32\000ATOMU"
    "MAX64\000ATOMUMIN16\000ATOMUMIN32\000ATOMUMIN64\000ATOMXOR16\000ATOMXOR"
    "32\000ATOMXOR64\000ATOMXOR6432\000ATOMXOR8\000BLENDPDrmi\000BLENDPDrri\000"
    "BLENDPSrmi\000BLENDPSrri\000BLENDVPDrm0\000BLENDVPDrr0\000BLENDVPSrm0\000"
    "BLENDVPSrr0\000BSF16rm\000BSF16rr\000BSF32rm\000BSF32rr\000BSF64rm\000B"
    "SF64rr\000BSR16rm\000BSR16rr\000BSR32rm\000BSR32rr\000BSR64rm\000BSR64r"
    "r\000BSWAP32r\000BSWAP64r\000BT16mi8\000BT16mr\000BT16ri8\000BT16rr\000"
    "BT32mi8\000BT32mr\000BT32ri8\000BT32rr\000BT64mi8\000BT64mr\000BT64ri8\000"
    "BT64rr\000BTC16mi8\000BTC16mr\000BTC16ri8\000BTC16rr\000BTC32mi8\000BTC"
    "32mr\000BTC32ri8\000BTC32rr\000BTC64mi8\000BTC64mr\000BTC64ri8\000BTC64"
    "rr\000BTR16mi8\000BTR16mr\000BTR16ri8\000BTR16rr\000BTR32mi8\000BTR32mr"
    "\000BTR32ri8\000BTR32rr\000BTR64mi8\000BTR64mr\000BTR64ri8\000BTR64rr\000"
    "BTS16mi8\000BTS16mr\000BTS16ri8\000BTS16rr\000BTS32mi8\000BTS32mr\000BT"
    "S32ri8\000BTS32rr\000BTS64mi8\000BTS64mr\000BTS64ri8\000BTS64rr\000CALL"
    "32m\000CALL32r\000CALL64m\000CALL64pcrel32\000CALL64r\000CALLpcrel32\000"
    "CBW\000CDQ\000CDQE\000CHS_F\000CHS_Fp32\000CHS_Fp64\000CHS_Fp80\000CLC\000"
    "CLD\000CLFLUSH\000CLI\000CLTS\000CMC\000CMOVA16rm\000CMOVA16rr\000CMOVA"
    "32rm\000CMOVA32rr\000CMOVA64rm\000CMOVA64rr\000CMOVAE16rm\000CMOVAE16rr"
    "\000CMOVAE32rm\000CMOVAE32rr\000CMOVAE64rm\000CMOVAE64rr\000CMOVB16rm\000"
    "CMOVB16rr\000CMOVB32rm\000CMOVB32rr\000CMOVB64rm\000CMOVB64rr\000CMOVBE"
    "16rm\000CMOVBE16rr\000CMOVBE32rm\000CMOVBE32rr\000CMOVBE64rm\000CMOVBE6"
    "4rr\000CMOVBE_F\000CMOVBE_Fp32\000CMOVBE_Fp64\000CMOVBE_Fp80\000CMOVB_F"
    "\000CMOVB_Fp32\000CMOVB_Fp64\000CMOVB_Fp80\000CMOVE16rm\000CMOVE16rr\000"
    "CMOVE32rm\000CMOVE32rr\000CMOVE64rm\000CMOVE64rr\000CMOVE_F\000CMOVE_Fp"
    "32\000CMOVE_Fp64\000CMOVE_Fp80\000CMOVG16rm\000CMOVG16rr\000CMOVG32rm\000"
    "CMOVG32rr\000CMOVG64rm\000CMOVG64rr\000CMOVGE16rm\000CMOVGE16rr\000CMOV"
    "GE32rm\000CMOVGE32rr\000CMOVGE64rm\000CMOVGE64rr\000CMOVL16rm\000CMOVL1"
    "6rr\000CMOVL32rm\000CMOVL32rr\000CMOVL64rm\000CMOVL64rr\000CMOVLE16rm\000"
    "CMOVLE16rr\000CMOVLE32rm\000CMOVLE32rr\000CMOVLE64rm\000CMOVLE64rr\000C"
    "MOVNBE_F\000CMOVNBE_Fp32\000CMOVNBE_Fp64\000CMOVNBE_Fp80\000CMOVNB_F\000"
    "CMOVNB_Fp32\000CMOVNB_Fp64\000CMOVNB_Fp80\000CMOVNE16rm\000CMOVNE16rr\000"
    "CMOVNE32rm\000CMOVNE32rr\000CMOVNE64rm\000CMOVNE64rr\000CMOVNE_F\000CMO"
    "VNE_Fp32\000CMOVNE_Fp64\000CMOVNE_Fp80\000CMOVNO16rm\000CMOVNO16rr\000C"
    "MOVNO32rm\000CMOVNO32rr\000CMOVNO64rm\000CMOVNO64rr\000CMOVNP16rm\000CM"
    "OVNP16rr\000CMOVNP32rm\000CMOVNP32rr\000CMOVNP64rm\000CMOVNP64rr\000CMO"
    "VNP_F\000CMOVNP_Fp32\000CMOVNP_Fp64\000CMOVNP_Fp80\000CMOVNS16rm\000CMO"
    "VNS16rr\000CMOVNS32rm\000CMOVNS32rr\000CMOVNS64rm\000CMOVNS64rr\000CMOV"
    "O16rm\000CMOVO16rr\000CMOVO32rm\000CMOVO32rr\000CMOVO64rm\000CMOVO64rr\000"
    "CMOVP16rm\000CMOVP16rr\000CMOVP32rm\000CMOVP32rr\000CMOVP64rm\000CMOVP6"
    "4rr\000CMOVP_F\000CMOVP_Fp32\000CMOVP_Fp64\000CMOVP_Fp80\000CMOVS16rm\000"
    "CMOVS16rr\000CMOVS32rm\000CMOVS32rr\000CMOVS64rm\000CMOVS64rr\000CMOV_F"
    "R32\000CMOV_FR64\000CMOV_GR8\000CMOV_V1I64\000CMOV_V2F64\000CMOV_V2I64\000"
    "CMOV_V4F32\000CMP16i16\000CMP16mi\000CMP16mi8\000CMP16mr\000CMP16mrmrr\000"
    "CMP16ri\000CMP16ri8\000CMP16rm\000CMP16rr\000CMP32i32\000CMP32mi\000CMP"
    "32mi8\000CMP32mr\000CMP32mrmrr\000CMP32ri\000CMP32ri8\000CMP32rm\000CMP"
    "32rr\000CMP64i32\000CMP64mi32\000CMP64mi8\000CMP64mr\000CMP64mrmrr\000C"
    "MP64ri32\000CMP64ri8\000CMP64rm\000CMP64rr\000CMP8i8\000CMP8mi\000CMP8m"
    "r\000CMP8mrmrr\000CMP8ri\000CMP8rm\000CMP8rr\000CMPPDrmi\000CMPPDrri\000"
    "CMPPSrmi\000CMPPSrri\000CMPS16\000CMPS32\000CMPS64\000CMPS8\000CMPSDrm\000"
    "CMPSDrr\000CMPSSrm\000CMPSSrr\000CMPXCHG16B\000CMPXCHG16rm\000CMPXCHG16"
    "rr\000CMPXCHG32rm\000CMPXCHG32rr\000CMPXCHG64rm\000CMPXCHG64rr\000CMPXC"
    "HG8B\000CMPXCHG8rm\000CMPXCHG8rr\000COMISDrm\000COMISDrr\000COMISSrm\000"
    "COMISSrr\000COMP_FST0r\000COM_FIPr\000COM_FIr\000COM_FST0r\000COS_F\000"
    "COS_Fp32\000COS_Fp64\000COS_Fp80\000CPUID\000CQO\000CRC32m16\000CRC32m3"
    "2\000CRC32m8\000CRC32r16\000CRC32r32\000CRC32r8\000CRC64m64\000CRC64r64"
    "\000CS_PREFIX\000CVTDQ2PDrm\000CVTDQ2PDrr\000CVTDQ2PSrm\000CVTDQ2PSrr\000"
    "CVTPD2DQrm\000CVTPD2DQrr\000CVTPD2PSrm\000CVTPD2PSrr\000CVTPS2DQrm\000C"
    "VTPS2DQrr\000CVTPS2PDrm\000CVTPS2PDrr\000CVTSD2SI64rm\000CVTSD2SI64rr\000"
    "CVTSD2SSrm\000CVTSD2SSrr\000CVTSI2SD64rm\000CVTSI2SD64rr\000CVTSI2SDrm\000"
    "CVTSI2SDrr\000CVTSI2SS64rm\000CVTSI2SS64rr\000CVTSI2SSrm\000CVTSI2SSrr\000"
    "CVTSS2SDrm\000CVTSS2SDrr\000CVTSS2SI64rm\000CVTSS2SI64rr\000CVTSS2SIrm\000"
    "CVTSS2SIrr\000CVTTPS2DQrm\000CVTTPS2DQrr\000CVTTSD2SI64rm\000CVTTSD2SI6"
    "4rr\000CVTTSD2SIrm\000CVTTSD2SIrr\000CVTTSS2SI64rm\000CVTTSS2SI64rr\000"
    "CVTTSS2SIrm\000CVTTSS2SIrr\000CWD\000CWDE\000DEC16m\000DEC16r\000DEC32m"
    "\000DEC32r\000DEC64_16m\000DEC64_16r\000DEC64_32m\000DEC64_32r\000DEC64"
    "m\000DEC64r\000DEC8m\000DEC8r\000DIV16m\000DIV16r\000DIV32m\000DIV32r\000"
    "DIV64m\000DIV64r\000DIV8m\000DIV8r\000DIVPDrm\000DIVPDrr\000DIVPSrm\000"
    "DIVPSrr\000DIVR_F32m\000DIVR_F64m\000DIVR_FI16m\000DIVR_FI32m\000DIVR_F"
    "PrST0\000DIVR_FST0r\000DIVR_Fp32m\000DIVR_Fp64m\000DIVR_Fp64m32\000DIVR"
    "_Fp80m32\000DIVR_Fp80m64\000DIVR_FpI16m32\000DIVR_FpI16m64\000DIVR_FpI1"
    "6m80\000DIVR_FpI32m32\000DIVR_FpI32m64\000DIVR_FpI32m80\000DIVR_FrST0\000"
    "DIVSDrm\000DIVSDrm_Int\000DIVSDrr\000DIVSDrr_Int\000DIVSSrm\000DIVSSrm_"
    "Int\000DIVSSrr\000DIVSSrr_Int\000DIV_F32m\000DIV_F64m\000DIV_FI16m\000D"
    "IV_FI32m\000DIV_FPrST0\000DIV_FST0r\000DIV_Fp32\000DIV_Fp32m\000DIV_Fp6"
    "4\000DIV_Fp64m\000DIV_Fp64m32\000DIV_Fp80\000DIV_Fp80m32\000DIV_Fp80m64"
    "\000DIV_FpI16m32\000DIV_FpI16m64\000DIV_FpI16m80\000DIV_FpI32m32\000DIV"
    "_FpI32m64\000DIV_FpI32m80\000DIV_FrST0\000DPPDrmi\000DPPDrri\000DPPSrmi"
    "\000DPPSrri\000DS_PREFIX\000EH_RETURN\000EH_RETURN64\000ENTER\000ES_PRE"
    "FIX\000EXTRACTPSmr\000EXTRACTPSrr\000F2XM1\000FARCALL16i\000FARCALL16m\000"
    "FARCALL32i\000FARCALL32m\000FARCALL64\000FARJMP16i\000FARJMP16m\000FARJ"
    "MP32i\000FARJMP32m\000FARJMP64\000FBLDm\000FBSTPm\000FCOM32m\000FCOM64m"
    "\000FCOMP32m\000FCOMP64m\000FCOMPP\000FDECSTP\000FFREE\000FICOM16m\000F"
    "ICOM32m\000FICOMP16m\000FICOMP32m\000FINCSTP\000FLDCW16m\000FLDENVm\000"
    "FLDL2E\000FLDL2T\000FLDLG2\000FLDLN2\000FLDPI\000FNCLEX\000FNINIT\000FN"
    "OP\000FNSTCW16m\000FNSTSW8r\000FNSTSWm\000FP32_TO_INT16_IN_MEM\000FP32_"
    "TO_INT32_IN_MEM\000FP32_TO_INT64_IN_MEM\000FP64_TO_INT16_IN_MEM\000FP64"
    "_TO_INT32_IN_MEM\000FP64_TO_INT64_IN_MEM\000FP80_TO_INT16_IN_MEM\000FP8"
    "0_TO_INT32_IN_MEM\000FP80_TO_INT64_IN_MEM\000FPATAN\000FPREM\000FPREM1\000"
    "FPTAN\000FP_REG_KILL\000FRNDINT\000FRSTORm\000FSAVEm\000FSCALE\000FSINC"
    "OS\000FSTENVm\000FS_MOV32rm\000FS_PREFIX\000FXAM\000FXRSTOR\000FXSAVE\000"
    "FXTRACT\000FYL2X\000FYL2XP1\000FpGET_ST0_32\000FpGET_ST0_64\000FpGET_ST"
    "0_80\000FpGET_ST1_32\000FpGET_ST1_64\000FpGET_ST1_80\000FpSET_ST0_32\000"
    "FpSET_ST0_64\000FpSET_ST0_80\000FpSET_ST1_32\000FpSET_ST1_64\000FpSET_S"
    "T1_80\000FsANDNPDrm\000FsANDNPDrr\000FsANDNPSrm\000FsANDNPSrr\000FsANDP"
    "Drm\000FsANDPDrr\000FsANDPSrm\000FsANDPSrr\000FsFLD0SD\000FsFLD0SS\000F"
    "sMOVAPDrm\000FsMOVAPDrr\000FsMOVAPSrm\000FsMOVAPSrr\000FsORPDrm\000FsOR"
    "PDrr\000FsORPSrm\000FsORPSrr\000FsXORPDrm\000FsXORPDrr\000FsXORPSrm\000"
    "FsXORPSrr\000GS_MOV32rm\000GS_PREFIX\000HADDPDrm\000HADDPDrr\000HADDPSr"
    "m\000HADDPSrr\000HLT\000HSUBPDrm\000HSUBPDrr\000HSUBPSrm\000HSUBPSrr\000"
    "IDIV16m\000IDIV16r\000IDIV32m\000IDIV32r\000IDIV64m\000IDIV64r\000IDIV8"
    "m\000IDIV8r\000ILD_F16m\000ILD_F32m\000ILD_F64m\000ILD_Fp16m32\000ILD_F"
    "p16m64\000ILD_Fp16m80\000ILD_Fp32m32\000ILD_Fp32m64\000ILD_Fp32m80\000I"
    "LD_Fp64m32\000ILD_Fp64m64\000ILD_Fp64m80\000IMUL16m\000IMUL16r\000IMUL1"
    "6rm\000IMUL16rmi\000IMUL16rmi8\000IMUL16rr\000IMUL16rri\000IMUL16rri8\000"
    "IMUL32m\000IMUL32r\000IMUL32rm\000IMUL32rmi\000IMUL32rmi8\000IMUL32rr\000"
    "IMUL32rri\000IMUL32rri8\000IMUL64m\000IMUL64r\000IMUL64rm\000IMUL64rmi3"
    "2\000IMUL64rmi8\000IMUL64rr\000IMUL64rri32\000IMUL64rri8\000IMUL8m\000I"
    "MUL8r\000IN16\000IN16ri\000IN16rr\000IN32\000IN32ri\000IN32rr\000IN8\000"
    "IN8ri\000IN8rr\000INC16m\000INC16r\000INC32m\000INC32r\000INC64_16m\000"
    "INC64_16r\000INC64_32m\000INC64_32r\000INC64m\000INC64r\000INC8m\000INC"
    "8r\000INSERTPSrm\000INSERTPSrr\000INT\000INT3\000INVD\000INVEPT\000INVL"
    "PG\000INVVPID\000IRET16\000IRET32\000IRET64\000ISTT_FP16m\000ISTT_FP32m"
    "\000ISTT_FP64m\000ISTT_Fp16m32\000ISTT_Fp16m64\000ISTT_Fp16m80\000ISTT_"
    "Fp32m32\000ISTT_Fp32m64\000ISTT_Fp32m80\000ISTT_Fp64m32\000ISTT_Fp64m64"
    "\000ISTT_Fp64m80\000IST_F16m\000IST_F32m\000IST_FP16m\000IST_FP32m\000I"
    "ST_FP64m\000IST_Fp16m32\000IST_Fp16m64\000IST_Fp16m80\000IST_Fp32m32\000"
    "IST_Fp32m64\000IST_Fp32m80\000IST_Fp64m32\000IST_Fp64m64\000IST_Fp64m80"
    "\000Int_CMPSDrm\000Int_CMPSDrr\000Int_CMPSSrm\000Int_CMPSSrr\000Int_COM"
    "ISDrm\000Int_COMISDrr\000Int_COMISSrm\000Int_COMISSrr\000Int_CVTDQ2PDrm"
    "\000Int_CVTDQ2PDrr\000Int_CVTDQ2PSrm\000Int_CVTDQ2PSrr\000Int_CVTPD2DQr"
    "m\000Int_CVTPD2DQrr\000Int_CVTPD2PIrm\000Int_CVTPD2PIrr\000Int_CVTPD2PS"
    "rm\000Int_CVTPD2PSrr\000Int_CVTPI2PDrm\000Int_CVTPI2PDrr\000Int_CVTPI2P"
    "Srm\000Int_CVTPI2PSrr\000Int_CVTPS2DQrm\000Int_CVTPS2DQrr\000Int_CVTPS2"
    "PDrm\000Int_CVTPS2PDrr\000Int_CVTPS2PIrm\000Int_CVTPS2PIrr\000Int_CVTSD"
    "2SI64rm\000Int_CVTSD2SI64rr\000Int_CVTSD2SIrm\000Int_CVTSD2SIrr\000Int_"
    "CVTSD2SSrm\000Int_CVTSD2SSrr\000Int_CVTSI2SD64rm\000Int_CVTSI2SD64rr\000"
    "Int_CVTSI2SDrm\000Int_CVTSI2SDrr\000Int_CVTSI2SS64rm\000Int_CVTSI2SS64r"
    "r\000Int_CVTSI2SSrm\000Int_CVTSI2SSrr\000Int_CVTSS2SDrm\000Int_CVTSS2SD"
    "rr\000Int_CVTSS2SI64rm\000Int_CVTSS2SI64rr\000Int_CVTSS2SIrm\000Int_CVT"
    "SS2SIrr\000Int_CVTTPD2DQrm\000Int_CVTTPD2DQrr\000Int_CVTTPD2PIrm\000Int"
    "_CVTTPD2PIrr\000Int_CVTTPS2DQrm\000Int_CVTTPS2DQrr\000Int_CVTTPS2PIrm\000"
    "Int_CVTTPS2PIrr\000Int_CVTTSD2SI64rm\000Int_CVTTSD2SI64rr\000Int_CVTTSD"
    "2SIrm\000Int_CVTTSD2SIrr\000Int_CVTTSS2SI64rm\000Int_CVTTSS2SI64rr\000I"
    "nt_CVTTSS2SIrm\000Int_CVTTSS2SIrr\000Int_UCOMISDrm\000Int_UCOMISDrr\000"
    "Int_UCOMISSrm\000Int_UCOMISSrr\000JAE_1\000JAE_4\000JA_1\000JA_4\000JBE"
    "_1\000JBE_4\000JB_1\000JB_4\000JCXZ8\000JE_1\000JE_4\000JGE_1\000JGE_4\000"
    "JG_1\000JG_4\000JLE_1\000JLE_4\000JL_1\000JL_4\000JMP32m\000JMP32r\000J"
    "MP64m\000JMP64pcrel32\000JMP64r\000JMP_1\000JMP_4\000JNE_1\000JNE_4\000"
    "JNO_1\000JNO_4\000JNP_1\000JNP_4\000JNS_1\000JNS_4\000JO_1\000JO_4\000J"
    "P_1\000JP_4\000JS_1\000JS_4\000LAHF\000LAR16rm\000LAR16rr\000LAR32rm\000"
    "LAR32rr\000LAR64rm\000LAR64rr\000LCMPXCHG16\000LCMPXCHG32\000LCMPXCHG64"
    "\000LCMPXCHG8\000LCMPXCHG8B\000LDDQUrm\000LDMXCSR\000LDS16rm\000LDS32rm"
    "\000LD_F0\000LD_F1\000LD_F32m\000LD_F64m\000LD_F80m\000LD_Fp032\000LD_F"
    "p064\000LD_Fp080\000LD_Fp132\000LD_Fp164\000LD_Fp180\000LD_Fp32m\000LD_"
    "Fp32m64\000LD_Fp32m80\000LD_Fp64m\000LD_Fp64m80\000LD_Fp80m\000LD_Frr\000"
    "LEA16r\000LEA32r\000LEA64_32r\000LEA64r\000LEAVE\000LEAVE64\000LES16rm\000"
    "LES32rm\000LFENCE\000LFS16rm\000LFS32rm\000LFS64rm\000LGDTm\000LGS16rm\000"
    "LGS32rm\000LGS64rm\000LIDTm\000LLDT16m\000LLDT16r\000LMSW16m\000LMSW16r"
    "\000LOCK_ADD16mi\000LOCK_ADD16mi8\000LOCK_ADD16mr\000LOCK_ADD32mi\000LO"
    "CK_ADD32mi8\000LOCK_ADD32mr\000LOCK_ADD64mi32\000LOCK_ADD64mi8\000LOCK_"
    "ADD64mr\000LOCK_ADD8mi\000LOCK_ADD8mr\000LOCK_DEC16m\000LOCK_DEC32m\000"
    "LOCK_DEC64m\000LOCK_DEC8m\000LOCK_INC16m\000LOCK_INC32m\000LOCK_INC64m\000"
    "LOCK_INC8m\000LOCK_PREFIX\000LOCK_SUB16mi\000LOCK_SUB16mi8\000LOCK_SUB1"
    "6mr\000LOCK_SUB32mi\000LOCK_SUB32mi8\000LOCK_SUB32mr\000LOCK_SUB64mi32\000"
    "LOCK_SUB64mi8\000LOCK_SUB64mr\000LOCK_SUB8mi\000LOCK_SUB8mr\000LODSB\000"
    "LODSD\000LODSQ\000LODSW\000LOOP\000LOOPE\000LOOPNE\000LRET\000LRETI\000"
    "LSL16rm\000LSL16rr\000LSL32rm\000LSL32rr\000LSL64rm\000LSL64rr\000LSS16"
    "rm\000LSS32rm\000LSS64rm\000LTRm\000LTRr\000LXADD16\000LXADD32\000LXADD"
    "64\000LXADD8\000MASKMOVDQU\000MASKMOVDQU64\000MAXPDrm\000MAXPDrm_Int\000"
    "MAXPDrr\000MAXPDrr_Int\000MAXPSrm\000MAXPSrm_Int\000MAXPSrr\000MAXPSrr_"
    "Int\000MAXSDrm\000MAXSDrm_Int\000MAXSDrr\000MAXSDrr_Int\000MAXSSrm\000M"
    "AXSSrm_Int\000MAXSSrr\000MAXSSrr_Int\000MFENCE\000MINGW_ALLOCA\000MINPD"
    "rm\000MINPDrm_Int\000MINPDrr\000MINPDrr_Int\000MINPSrm\000MINPSrm_Int\000"
    "MINPSrr\000MINPSrr_Int\000MINSDrm\000MINSDrm_Int\000MINSDrr\000MINSDrr_"
    "Int\000MINSSrm\000MINSSrm_Int\000MINSSrr\000MINSSrr_Int\000MMX_CVTPD2PI"
    "rm\000MMX_CVTPD2PIrr\000MMX_CVTPI2PDrm\000MMX_CVTPI2PDrr\000MMX_CVTPI2P"
    "Srm\000MMX_CVTPI2PSrr\000MMX_CVTPS2PIrm\000MMX_CVTPS2PIrr\000MMX_CVTTPD"
    "2PIrm\000MMX_CVTTPD2PIrr\000MMX_CVTTPS2PIrm\000MMX_CVTTPS2PIrr\000MMX_E"
    "MMS\000MMX_FEMMS\000MMX_MASKMOVQ\000MMX_MASKMOVQ64\000MMX_MOVD64from64r"
    "r\000MMX_MOVD64grr\000MMX_MOVD64mr\000MMX_MOVD64rm\000MMX_MOVD64rr\000M"
    "MX_MOVD64rrv164\000MMX_MOVD64to64rr\000MMX_MOVDQ2Qrr\000MMX_MOVNTQmr\000"
    "MMX_MOVQ2DQrr\000MMX_MOVQ2FR64rr\000MMX_MOVQ64gmr\000MMX_MOVQ64mr\000MM"
    "X_MOVQ64rm\000MMX_MOVQ64rr\000MMX_MOVZDI2PDIrm\000MMX_MOVZDI2PDIrr\000M"
    "MX_PACKSSDWrm\000MMX_PACKSSDWrr\000MMX_PACKSSWBrm\000MMX_PACKSSWBrr\000"
    "MMX_PACKUSWBrm\000MMX_PACKUSWBrr\000MMX_PADDBrm\000MMX_PADDBrr\000MMX_P"
    "ADDDrm\000MMX_PADDDrr\000MMX_PADDQrm\000MMX_PADDQrr\000MMX_PADDSBrm\000"
    "MMX_PADDSBrr\000MMX_PADDSWrm\000MMX_PADDSWrr\000MMX_PADDUSBrm\000MMX_PA"
    "DDUSBrr\000MMX_PADDUSWrm\000MMX_PADDUSWrr\000MMX_PADDWrm\000MMX_PADDWrr"
    "\000MMX_PANDNrm\000MMX_PANDNrr\000MMX_PANDrm\000MMX_PANDrr\000MMX_PAVGB"
    "rm\000MMX_PAVGBrr\000MMX_PAVGWrm\000MMX_PAVGWrr\000MMX_PCMPEQBrm\000MMX"
    "_PCMPEQBrr\000MMX_PCMPEQDrm\000MMX_PCMPEQDrr\000MMX_PCMPEQWrm\000MMX_PC"
    "MPEQWrr\000MMX_PCMPGTBrm\000MMX_PCMPGTBrr\000MMX_PCMPGTDrm\000MMX_PCMPG"
    "TDrr\000MMX_PCMPGTWrm\000MMX_PCMPGTWrr\000MMX_PEXTRWri\000MMX_PINSRWrmi"
    "\000MMX_PINSRWrri\000MMX_PMADDWDrm\000MMX_PMADDWDrr\000MMX_PMAXSWrm\000"
    "MMX_PMAXSWrr\000MMX_PMAXUBrm\000MMX_PMAXUBrr\000MMX_PMINSWrm\000MMX_PMI"
    "NSWrr\000MMX_PMINUBrm\000MMX_PMINUBrr\000MMX_PMOVMSKBrr\000MMX_PMULHUWr"
    "m\000MMX_PMULHUWrr\000MMX_PMULHWrm\000MMX_PMULHWrr\000MMX_PMULLWrm\000M"
    "MX_PMULLWrr\000MMX_PMULUDQrm\000MMX_PMULUDQrr\000MMX_PORrm\000MMX_PORrr"
    "\000MMX_PSADBWrm\000MMX_PSADBWrr\000MMX_PSHUFWmi\000MMX_PSHUFWri\000MMX"
    "_PSLLDri\000MMX_PSLLDrm\000MMX_PSLLDrr\000MMX_PSLLQri\000MMX_PSLLQrm\000"
    "MMX_PSLLQrr\000MMX_PSLLWri\000MMX_PSLLWrm\000MMX_PSLLWrr\000MMX_PSRADri"
    "\000MMX_PSRADrm\000MMX_PSRADrr\000MMX_PSRAWri\000MMX_PSRAWrm\000MMX_PSR"
    "AWrr\000MMX_PSRLDri\000MMX_PSRLDrm\000MMX_PSRLDrr\000MMX_PSRLQri\000MMX"
    "_PSRLQrm\000MMX_PSRLQrr\000MMX_PSRLWri\000MMX_PSRLWrm\000MMX_PSRLWrr\000"
    "MMX_PSUBBrm\000MMX_PSUBBrr\000MMX_PSUBDrm\000MMX_PSUBDrr\000MMX_PSUBQrm"
    "\000MMX_PSUBQrr\000MMX_PSUBSBrm\000MMX_PSUBSBrr\000MMX_PSUBSWrm\000MMX_"
    "PSUBSWrr\000MMX_PSUBUSBrm\000MMX_PSUBUSBrr\000MMX_PSUBUSWrm\000MMX_PSUB"
    "USWrr\000MMX_PSUBWrm\000MMX_PSUBWrr\000MMX_PUNPCKHBWrm\000MMX_PUNPCKHBW"
    "rr\000MMX_PUNPCKHDQrm\000MMX_PUNPCKHDQrr\000MMX_PUNPCKHWDrm\000MMX_PUNP"
    "CKHWDrr\000MMX_PUNPCKLBWrm\000MMX_PUNPCKLBWrr\000MMX_PUNPCKLDQrm\000MMX"
    "_PUNPCKLDQrr\000MMX_PUNPCKLWDrm\000MMX_PUNPCKLWDrr\000MMX_PXORrm\000MMX"
    "_PXORrr\000MMX_V_SET0\000MMX_V_SETALLONES\000MONITOR\000MOV16ao16\000MO"
    "V16mi\000MOV16mr\000MOV16ms\000MOV16o16a\000MOV16r0\000MOV16ri\000MOV16"
    "rm\000MOV16rr\000MOV16rr_REV\000MOV16rs\000MOV16sm\000MOV16sr\000MOV32a"
    "o32\000MOV32cr\000MOV32dr\000MOV32mi\000MOV32mr\000MOV32o32a\000MOV32r0"
    "\000MOV32rc\000MOV32rd\000MOV32ri\000MOV32rm\000MOV32rr\000MOV32rr_REV\000"
    "MOV64FSrm\000MOV64GSrm\000MOV64ao64\000MOV64ao8\000MOV64cr\000MOV64dr\000"
    "MOV64mi32\000MOV64mr\000MOV64ms\000MOV64o64a\000MOV64o8a\000MOV64r0\000"
    "MOV64rc\000MOV64rd\000MOV64ri\000MOV64ri32\000MOV64ri64i32\000MOV64rm\000"
    "MOV64rr\000MOV64rr_REV\000MOV64rs\000MOV64sm\000MOV64sr\000MOV64toPQIrr"
    "\000MOV64toSDrm\000MOV64toSDrr\000MOV8ao8\000MOV8mi\000MOV8mr\000MOV8mr"
    "_NOREX\000MOV8o8a\000MOV8r0\000MOV8ri\000MOV8rm\000MOV8rm_NOREX\000MOV8"
    "rr\000MOV8rr_NOREX\000MOV8rr_REV\000MOVAPDmr\000MOVAPDrm\000MOVAPDrr\000"
    "MOVAPSmr\000MOVAPSrm\000MOVAPSrr\000MOVDDUPrm\000MOVDDUPrr\000MOVDI2PDI"
    "rm\000MOVDI2PDIrr\000MOVDI2SSrm\000MOVDI2SSrr\000MOVDQAmr\000MOVDQArm\000"
    "MOVDQArr\000MOVDQUmr\000MOVDQUmr_Int\000MOVDQUrm\000MOVDQUrm_Int\000MOV"
    "HLPSrr\000MOVHPDmr\000MOVHPDrm\000MOVHPSmr\000MOVHPSrm\000MOVLHPSrr\000"
    "MOVLPDmr\000MOVLPDrm\000MOVLPSmr\000MOVLPSrm\000MOVLQ128mr\000MOVMSKPDr"
    "r\000MOVMSKPSrr\000MOVNTDQArm\000MOVNTDQ_64mr\000MOVNTDQmr\000MOVNTDQmr"
    "_Int\000MOVNTI_64mr\000MOVNTImr\000MOVNTImr_Int\000MOVNTPDmr\000MOVNTPD"
    "mr_Int\000MOVNTPSmr\000MOVNTPSmr_Int\000MOVPC32r\000MOVPDI2DImr\000MOVP"
    "DI2DIrr\000MOVPQI2QImr\000MOVPQIto64rr\000MOVQI2PQIrm\000MOVQxrxr\000MO"
    "VSB\000MOVSD\000MOVSDmr\000MOVSDrm\000MOVSDrr\000MOVSDto64mr\000MOVSDto"
    "64rr\000MOVSHDUPrm\000MOVSHDUPrr\000MOVSLDUPrm\000MOVSLDUPrr\000MOVSS2D"
    "Imr\000MOVSS2DIrr\000MOVSSmr\000MOVSSrm\000MOVSSrr\000MOVSW\000MOVSX16r"
    "m8\000MOVSX16rm8W\000MOVSX16rr8\000MOVSX16rr8W\000MOVSX32rm16\000MOVSX3"
    "2rm8\000MOVSX32rr16\000MOVSX32rr8\000MOVSX64rm16\000MOVSX64rm32\000MOVS"
    "X64rm8\000MOVSX64rr16\000MOVSX64rr32\000MOVSX64rr8\000MOVUPDmr\000MOVUP"
    "Dmr_Int\000MOVUPDrm\000MOVUPDrm_Int\000MOVUPDrr\000MOVUPSmr\000MOVUPSmr"
    "_Int\000MOVUPSrm\000MOVUPSrm_Int\000MOVUPSrr\000MOVZDI2PDIrm\000MOVZDI2"
    "PDIrr\000MOVZPQILo2PQIrm\000MOVZPQILo2PQIrr\000MOVZQI2PQIrm\000MOVZQI2P"
    "QIrr\000MOVZX16rm8\000MOVZX16rm8W\000MOVZX16rr8\000MOVZX16rr8W\000MOVZX"
    "32_NOREXrm8\000MOVZX32_NOREXrr8\000MOVZX32rm16\000MOVZX32rm8\000MOVZX32"
    "rr16\000MOVZX32rr8\000MOVZX64rm16\000MOVZX64rm16_Q\000MOVZX64rm32\000MO"
    "VZX64rm8\000MOVZX64rm8_Q\000MOVZX64rr16\000MOVZX64rr16_Q\000MOVZX64rr32"
    "\000MOVZX64rr8\000MOVZX64rr8_Q\000MOV_Fp3232\000MOV_Fp3264\000MOV_Fp328"
    "0\000MOV_Fp6432\000MOV_Fp6464\000MOV_Fp6480\000MOV_Fp8032\000MOV_Fp8064"
    "\000MOV_Fp8080\000MPSADBWrmi\000MPSADBWrri\000MUL16m\000MUL16r\000MUL32"
    "m\000MUL32r\000MUL64m\000MUL64r\000MUL8m\000MUL8r\000MULPDrm\000MULPDrr"
    "\000MULPSrm\000MULPSrr\000MULSDrm\000MULSDrm_Int\000MULSDrr\000MULSDrr_"
    "Int\000MULSSrm\000MULSSrm_Int\000MULSSrr\000MULSSrr_Int\000MUL_F32m\000"
    "MUL_F64m\000MUL_FI16m\000MUL_FI32m\000MUL_FPrST0\000MUL_FST0r\000MUL_Fp"
    "32\000MUL_Fp32m\000MUL_Fp64\000MUL_Fp64m\000MUL_Fp64m32\000MUL_Fp80\000"
    "MUL_Fp80m32\000MUL_Fp80m64\000MUL_FpI16m32\000MUL_FpI16m64\000MUL_FpI16"
    "m80\000MUL_FpI32m32\000MUL_FpI32m64\000MUL_FpI32m80\000MUL_FrST0\000MWA"
    "IT\000NEG16m\000NEG16r\000NEG32m\000NEG32r\000NEG64m\000NEG64r\000NEG8m"
    "\000NEG8r\000NOOP\000NOOPL\000NOOPW\000NOT16m\000NOT16r\000NOT32m\000NO"
    "T32r\000NOT64m\000NOT64r\000NOT8m\000NOT8r\000OR16i16\000OR16mi\000OR16"
    "mi8\000OR16mr\000OR16ri\000OR16ri8\000OR16rm\000OR16rr\000OR16rr_REV\000"
    "OR32i32\000OR32mi\000OR32mi8\000OR32mr\000OR32ri\000OR32ri8\000OR32rm\000"
    "OR32rr\000OR32rr_REV\000OR64i32\000OR64mi32\000OR64mi8\000OR64mr\000OR6"
    "4ri32\000OR64ri8\000OR64rm\000OR64rr\000OR64rr_REV\000OR8i8\000OR8mi\000"
    "OR8mr\000OR8ri\000OR8rm\000OR8rr\000OR8rr_REV\000ORPDrm\000ORPDrr\000OR"
    "PSrm\000ORPSrr\000OUT16ir\000OUT16rr\000OUT32ir\000OUT32rr\000OUT8ir\000"
    "OUT8rr\000OUTSB\000OUTSD\000OUTSW\000PABSBrm128\000PABSBrm64\000PABSBrr"
    "128\000PABSBrr64\000PABSDrm128\000PABSDrm64\000PABSDrr128\000PABSDrr64\000"
    "PABSWrm128\000PABSWrm64\000PABSWrr128\000PABSWrr64\000PACKSSDWrm\000PAC"
    "KSSDWrr\000PACKSSWBrm\000PACKSSWBrr\000PACKUSDWrm\000PACKUSDWrr\000PACK"
    "USWBrm\000PACKUSWBrr\000PADDBrm\000PADDBrr\000PADDDrm\000PADDDrr\000PAD"
    "DQrm\000PADDQrr\000PADDSBrm\000PADDSBrr\000PADDSWrm\000PADDSWrr\000PADD"
    "USBrm\000PADDUSBrr\000PADDUSWrm\000PADDUSWrr\000PADDWrm\000PADDWrr\000P"
    "ALIGNR128rm\000PALIGNR128rr\000PALIGNR64rm\000PALIGNR64rr\000PANDNrm\000"
    "PANDNrr\000PANDrm\000PANDrr\000PAVGBrm\000PAVGBrr\000PAVGWrm\000PAVGWrr"
    "\000PBLENDVBrm0\000PBLENDVBrr0\000PBLENDWrmi\000PBLENDWrri\000PCMPEQBrm"
    "\000PCMPEQBrr\000PCMPEQDrm\000PCMPEQDrr\000PCMPEQQrm\000PCMPEQQrr\000PC"
    "MPEQWrm\000PCMPEQWrr\000PCMPESTRIArm\000PCMPESTRIArr\000PCMPESTRICrm\000"
    "PCMPESTRICrr\000PCMPESTRIOrm\000PCMPESTRIOrr\000PCMPESTRISrm\000PCMPEST"
    "RISrr\000PCMPESTRIZrm\000PCMPESTRIZrr\000PCMPESTRIrm\000PCMPESTRIrr\000"
    "PCMPESTRM128MEM\000PCMPESTRM128REG\000PCMPESTRM128rm\000PCMPESTRM128rr\000"
    "PCMPGTBrm\000PCMPGTBrr\000PCMPGTDrm\000PCMPGTDrr\000PCMPGTQrm\000PCMPGT"
    "Qrr\000PCMPGTWrm\000PCMPGTWrr\000PCMPISTRIArm\000PCMPISTRIArr\000PCMPIS"
    "TRICrm\000PCMPISTRICrr\000PCMPISTRIOrm\000PCMPISTRIOrr\000PCMPISTRISrm\000"
    "PCMPISTRISrr\000PCMPISTRIZrm\000PCMPISTRIZrr\000PCMPISTRIrm\000PCMPISTR"
    "Irr\000PCMPISTRM128MEM\000PCMPISTRM128REG\000PCMPISTRM128rm\000PCMPISTR"
    "M128rr\000PEXTRBmr\000PEXTRBrr\000PEXTRDmr\000PEXTRDrr\000PEXTRQmr\000P"
    "EXTRQrr\000PEXTRWmr\000PEXTRWri\000PHADDDrm128\000PHADDDrm64\000PHADDDr"
    "r128\000PHADDDrr64\000PHADDSWrm128\000PHADDSWrm64\000PHADDSWrr128\000PH"
    "ADDSWrr64\000PHADDWrm128\000PHADDWrm64\000PHADDWrr128\000PHADDWrr64\000"
    "PHMINPOSUWrm128\000PHMINPOSUWrr128\000PHSUBDrm128\000PHSUBDrm64\000PHSU"
    "BDrr128\000PHSUBDrr64\000PHSUBSWrm128\000PHSUBSWrm64\000PHSUBSWrr128\000"
    "PHSUBSWrr64\000PHSUBWrm128\000PHSUBWrm64\000PHSUBWrr128\000PHSUBWrr64\000"
    "PINSRBrm\000PINSRBrr\000PINSRDrm\000PINSRDrr\000PINSRQrm\000PINSRQrr\000"
    "PINSRWrmi\000PINSRWrri\000PMADDUBSWrm128\000PMADDUBSWrm64\000PMADDUBSWr"
    "r128\000PMADDUBSWrr64\000PMADDWDrm\000PMADDWDrr\000PMAXSBrm\000PMAXSBrr"
    "\000PMAXSDrm\000PMAXSDrr\000PMAXSWrm\000PMAXSWrr\000PMAXUBrm\000PMAXUBr"
    "r\000PMAXUDrm\000PMAXUDrr\000PMAXUWrm\000PMAXUWrr\000PMINSBrm\000PMINSB"
    "rr\000PMINSDrm\000PMINSDrr\000PMINSWrm\000PMINSWrr\000PMINUBrm\000PMINU"
    "Brr\000PMINUDrm\000PMINUDrr\000PMINUWrm\000PMINUWrr\000PMOVMSKBrr\000PM"
    "OVSXBDrm\000PMOVSXBDrr\000PMOVSXBQrm\000PMOVSXBQrr\000PMOVSXBWrm\000PMO"
    "VSXBWrr\000PMOVSXDQrm\000PMOVSXDQrr\000PMOVSXWDrm\000PMOVSXWDrr\000PMOV"
    "SXWQrm\000PMOVSXWQrr\000PMOVZXBDrm\000PMOVZXBDrr\000PMOVZXBQrm\000PMOVZ"
    "XBQrr\000PMOVZXBWrm\000PMOVZXBWrr\000PMOVZXDQrm\000PMOVZXDQrr\000PMOVZX"
    "WDrm\000PMOVZXWDrr\000PMOVZXWQrm\000PMOVZXWQrr\000PMULDQrm\000PMULDQrr\000"
    "PMULHRSWrm128\000PMULHRSWrm64\000PMULHRSWrr128\000PMULHRSWrr64\000PMULH"
    "UWrm\000PMULHUWrr\000PMULHWrm\000PMULHWrr\000PMULLDrm\000PMULLDrm_int\000"
    "PMULLDrr\000PMULLDrr_int\000PMULLWrm\000PMULLWrr\000PMULUDQrm\000PMULUD"
    "Qrr\000POP16r\000POP16rmm\000POP16rmr\000POP32r\000POP32rmm\000POP32rmr"
    "\000POP64r\000POP64rmm\000POP64rmr\000POPCNT16rm\000POPCNT16rr\000POPCN"
    "T32rm\000POPCNT32rr\000POPCNT64rm\000POPCNT64rr\000POPF\000POPFD\000POP"
    "FQ\000POPFS16\000POPFS32\000POPFS64\000POPGS16\000POPGS32\000POPGS64\000"
    "PORrm\000PORrr\000PREFETCHNTA\000PREFETCHT0\000PREFETCHT1\000PREFETCHT2"
    "\000PSADBWrm\000PSADBWrr\000PSHUFBrm128\000PSHUFBrm64\000PSHUFBrr128\000"
    "PSHUFBrr64\000PSHUFDmi\000PSHUFDri\000PSHUFHWmi\000PSHUFHWri\000PSHUFLW"
    "mi\000PSHUFLWri\000PSIGNBrm128\000PSIGNBrm64\000PSIGNBrr128\000PSIGNBrr"
    "64\000PSIGNDrm128\000PSIGNDrm64\000PSIGNDrr128\000PSIGNDrr64\000PSIGNWr"
    "m128\000PSIGNWrm64\000PSIGNWrr128\000PSIGNWrr64\000PSLLDQri\000PSLLDri\000"
    "PSLLDrm\000PSLLDrr\000PSLLQri\000PSLLQrm\000PSLLQrr\000PSLLWri\000PSLLW"
    "rm\000PSLLWrr\000PSRADri\000PSRADrm\000PSRADrr\000PSRAWri\000PSRAWrm\000"
    "PSRAWrr\000PSRLDQri\000PSRLDri\000PSRLDrm\000PSRLDrr\000PSRLQri\000PSRL"
    "Qrm\000PSRLQrr\000PSRLWri\000PSRLWrm\000PSRLWrr\000PSUBBrm\000PSUBBrr\000"
    "PSUBDrm\000PSUBDrr\000PSUBQrm\000PSUBQrr\000PSUBSBrm\000PSUBSBrr\000PSU"
    "BSWrm\000PSUBSWrr\000PSUBUSBrm\000PSUBUSBrr\000PSUBUSWrm\000PSUBUSWrr\000"
    "PSUBWrm\000PSUBWrr\000PTESTrm\000PTESTrr\000PUNPCKHBWrm\000PUNPCKHBWrr\000"
    "PUNPCKHDQrm\000PUNPCKHDQrr\000PUNPCKHQDQrm\000PUNPCKHQDQrr\000PUNPCKHWD"
    "rm\000PUNPCKHWDrr\000PUNPCKLBWrm\000PUNPCKLBWrr\000PUNPCKLDQrm\000PUNPC"
    "KLDQrr\000PUNPCKLQDQrm\000PUNPCKLQDQrr\000PUNPCKLWDrm\000PUNPCKLWDrr\000"
    "PUSH16r\000PUSH16rmm\000PUSH16rmr\000PUSH32i16\000PUSH32i32\000PUSH32i8"
    "\000PUSH32r\000PUSH32rmm\000PUSH32rmr\000PUSH64i16\000PUSH64i32\000PUSH"
    "64i8\000PUSH64r\000PUSH64rmm\000PUSH64rmr\000PUSHF\000PUSHFD\000PUSHFQ6"
    "4\000PUSHFS16\000PUSHFS32\000PUSHFS64\000PUSHGS16\000PUSHGS32\000PUSHGS"
    "64\000PXORrm\000PXORrr\000RCL16m1\000RCL16mCL\000RCL16mi\000RCL16r1\000"
    "RCL16rCL\000RCL16ri\000RCL32m1\000RCL32mCL\000RCL32mi\000RCL32r1\000RCL"
    "32rCL\000RCL32ri\000RCL64m1\000RCL64mCL\000RCL64mi\000RCL64r1\000RCL64r"
    "CL\000RCL64ri\000RCL8m1\000RCL8mCL\000RCL8mi\000RCL8r1\000RCL8rCL\000RC"
    "L8ri\000RCPPSm\000RCPPSm_Int\000RCPPSr\000RCPPSr_Int\000RCPSSm\000RCPSS"
    "m_Int\000RCPSSr\000RCPSSr_Int\000RCR16m1\000RCR16mCL\000RCR16mi\000RCR1"
    "6r1\000RCR16rCL\000RCR16ri\000RCR32m1\000RCR32mCL\000RCR32mi\000RCR32r1"
    "\000RCR32rCL\000RCR32ri\000RCR64m1\000RCR64mCL\000RCR64mi\000RCR64r1\000"
    "RCR64rCL\000RCR64ri\000RCR8m1\000RCR8mCL\000RCR8mi\000RCR8r1\000RCR8rCL"
    "\000RCR8ri\000RDMSR\000RDPMC\000RDTSC\000RDTSCP\000REPNE_PREFIX\000REP_"
    "MOVSB\000REP_MOVSD\000REP_MOVSQ\000REP_MOVSW\000REP_PREFIX\000REP_STOSB"
    "\000REP_STOSD\000REP_STOSQ\000REP_STOSW\000RET\000RETI\000ROL16m1\000RO"
    "L16mCL\000ROL16mi\000ROL16r1\000ROL16rCL\000ROL16ri\000ROL32m1\000ROL32"
    "mCL\000ROL32mi\000ROL32r1\000ROL32rCL\000ROL32ri\000ROL64m1\000ROL64mCL"
    "\000ROL64mi\000ROL64r1\000ROL64rCL\000ROL64ri\000ROL8m1\000ROL8mCL\000R"
    "OL8mi\000ROL8r1\000ROL8rCL\000ROL8ri\000ROR16m1\000ROR16mCL\000ROR16mi\000"
    "ROR16r1\000ROR16rCL\000ROR16ri\000ROR32m1\000ROR32mCL\000ROR32mi\000ROR"
    "32r1\000ROR32rCL\000ROR32ri\000ROR64m1\000ROR64mCL\000ROR64mi\000ROR64r"
    "1\000ROR64rCL\000ROR64ri\000ROR8m1\000ROR8mCL\000ROR8mi\000ROR8r1\000RO"
    "R8rCL\000ROR8ri\000ROUNDPDm_Int\000ROUNDPDr_Int\000ROUNDPSm_Int\000ROUN"
    "DPSr_Int\000ROUNDSDm_Int\000ROUNDSDr_Int\000ROUNDSSm_Int\000ROUNDSSr_In"
    "t\000RSM\000RSQRTPSm\000RSQRTPSm_Int\000RSQRTPSr\000RSQRTPSr_Int\000RSQ"
    "RTSSm\000RSQRTSSm_Int\000RSQRTSSr\000RSQRTSSr_Int\000SAHF\000SAR16m1\000"
    "SAR16mCL\000SAR16mi\000SAR16r1\000SAR16rCL\000SAR16ri\000SAR32m1\000SAR"
    "32mCL\000SAR32mi\000SAR32r1\000SAR32rCL\000SAR32ri\000SAR64m1\000SAR64m"
    "CL\000SAR64mi\000SAR64r1\000SAR64rCL\000SAR64ri\000SAR8m1\000SAR8mCL\000"
    "SAR8mi\000SAR8r1\000SAR8rCL\000SAR8ri\000SBB16i16\000SBB16mi\000SBB16mi"
    "8\000SBB16mr\000SBB16ri\000SBB16ri8\000SBB16rm\000SBB16rr\000SBB16rr_RE"
    "V\000SBB32i32\000SBB32mi\000SBB32mi8\000SBB32mr\000SBB32ri\000SBB32ri8\000"
    "SBB32rm\000SBB32rr\000SBB32rr_REV\000SBB64i32\000SBB64mi32\000SBB64mi8\000"
    "SBB64mr\000SBB64ri32\000SBB64ri8\000SBB64rm\000SBB64rr\000SBB64rr_REV\000"
    "SBB8i8\000SBB8mi\000SBB8mr\000SBB8ri\000SBB8rm\000SBB8rr\000SBB8rr_REV\000"
    "SCAS16\000SCAS32\000SCAS64\000SCAS8\000SETAEm\000SETAEr\000SETAm\000SET"
    "Ar\000SETBEm\000SETBEr\000SETB_C16r\000SETB_C32r\000SETB_C64r\000SETB_C"
    "8r\000SETBm\000SETBr\000SETEm\000SETEr\000SETGEm\000SETGEr\000SETGm\000"
    "SETGr\000SETLEm\000SETLEr\000SETLm\000SETLr\000SETNEm\000SETNEr\000SETN"
    "Om\000SETNOr\000SETNPm\000SETNPr\000SETNSm\000SETNSr\000SETOm\000SETOr\000"
    "SETPm\000SETPr\000SETSm\000SETSr\000SFENCE\000SGDTm\000SHL16m1\000SHL16"
    "mCL\000SHL16mi\000SHL16r1\000SHL16rCL\000SHL16ri\000SHL32m1\000SHL32mCL"
    "\000SHL32mi\000SHL32r1\000SHL32rCL\000SHL32ri\000SHL64m1\000SHL64mCL\000"
    "SHL64mi\000SHL64r1\000SHL64rCL\000SHL64ri\000SHL8m1\000SHL8mCL\000SHL8m"
    "i\000SHL8r1\000SHL8rCL\000SHL8ri\000SHLD16mrCL\000SHLD16mri8\000SHLD16r"
    "rCL\000SHLD16rri8\000SHLD32mrCL\000SHLD32mri8\000SHLD32rrCL\000SHLD32rr"
    "i8\000SHLD64mrCL\000SHLD64mri8\000SHLD64rrCL\000SHLD64rri8\000SHR16m1\000"
    "SHR16mCL\000SHR16mi\000SHR16r1\000SHR16rCL\000SHR16ri\000SHR32m1\000SHR"
    "32mCL\000SHR32mi\000SHR32r1\000SHR32rCL\000SHR32ri\000SHR64m1\000SHR64m"
    "CL\000SHR64mi\000SHR64r1\000SHR64rCL\000SHR64ri\000SHR8m1\000SHR8mCL\000"
    "SHR8mi\000SHR8r1\000SHR8rCL\000SHR8ri\000SHRD16mrCL\000SHRD16mri8\000SH"
    "RD16rrCL\000SHRD16rri8\000SHRD32mrCL\000SHRD32mri8\000SHRD32rrCL\000SHR"
    "D32rri8\000SHRD64mrCL\000SHRD64mri8\000SHRD64rrCL\000SHRD64rri8\000SHUF"
    "PDrmi\000SHUFPDrri\000SHUFPSrmi\000SHUFPSrri\000SIDTm\000SIN_F\000SIN_F"
    "p32\000SIN_Fp64\000SIN_Fp80\000SLDT16m\000SLDT16r\000SLDT64m\000SLDT64r"
    "\000SMSW16m\000SMSW16r\000SMSW32r\000SMSW64r\000SQRTPDm\000SQRTPDm_Int\000"
    "SQRTPDr\000SQRTPDr_Int\000SQRTPSm\000SQRTPSm_Int\000SQRTPSr\000SQRTPSr_"
    "Int\000SQRTSDm\000SQRTSDm_Int\000SQRTSDr\000SQRTSDr_Int\000SQRTSSm\000S"
    "QRTSSm_Int\000SQRTSSr\000SQRTSSr_Int\000SQRT_F\000SQRT_Fp32\000SQRT_Fp6"
    "4\000SQRT_Fp80\000SS_PREFIX\000STC\000STD\000STI\000STMXCSR\000STOSB\000"
    "STOSD\000STOSW\000STRm\000STRr\000ST_F32m\000ST_F64m\000ST_FP32m\000ST_"
    "FP64m\000ST_FP80m\000ST_FPrr\000ST_Fp32m\000ST_Fp64m\000ST_Fp64m32\000S"
    "T_Fp80m32\000ST_Fp80m64\000ST_FpP32m\000ST_FpP64m\000ST_FpP64m32\000ST_"
    "FpP80m\000ST_FpP80m32\000ST_FpP80m64\000ST_Frr\000SUB16i16\000SUB16mi\000"
    "SUB16mi8\000SUB16mr\000SUB16ri\000SUB16ri8\000SUB16rm\000SUB16rr\000SUB"
    "16rr_REV\000SUB32i32\000SUB32mi\000SUB32mi8\000SUB32mr\000SUB32ri\000SU"
    "B32ri8\000SUB32rm\000SUB32rr\000SUB32rr_REV\000SUB64i32\000SUB64mi32\000"
    "SUB64mi8\000SUB64mr\000SUB64ri32\000SUB64ri8\000SUB64rm\000SUB64rr\000S"
    "UB64rr_REV\000SUB8i8\000SUB8mi\000SUB8mr\000SUB8ri\000SUB8rm\000SUB8rr\000"
    "SUB8rr_REV\000SUBPDrm\000SUBPDrr\000SUBPSrm\000SUBPSrr\000SUBR_F32m\000"
    "SUBR_F64m\000SUBR_FI16m\000SUBR_FI32m\000SUBR_FPrST0\000SUBR_FST0r\000S"
    "UBR_Fp32m\000SUBR_Fp64m\000SUBR_Fp64m32\000SUBR_Fp80m32\000SUBR_Fp80m64"
    "\000SUBR_FpI16m32\000SUBR_FpI16m64\000SUBR_FpI16m80\000SUBR_FpI32m32\000"
    "SUBR_FpI32m64\000SUBR_FpI32m80\000SUBR_FrST0\000SUBSDrm\000SUBSDrm_Int\000"
    "SUBSDrr\000SUBSDrr_Int\000SUBSSrm\000SUBSSrm_Int\000SUBSSrr\000SUBSSrr_"
    "Int\000SUB_F32m\000SUB_F64m\000SUB_FI16m\000SUB_FI32m\000SUB_FPrST0\000"
    "SUB_FST0r\000SUB_Fp32\000SUB_Fp32m\000SUB_Fp64\000SUB_Fp64m\000SUB_Fp64"
    "m32\000SUB_Fp80\000SUB_Fp80m32\000SUB_Fp80m64\000SUB_FpI16m32\000SUB_Fp"
    "I16m64\000SUB_FpI16m80\000SUB_FpI32m32\000SUB_FpI32m64\000SUB_FpI32m80\000"
    "SUB_FrST0\000SWAPGS\000SYSCALL\000SYSENTER\000SYSEXIT\000SYSEXIT64\000S"
    "YSRET\000TAILJMPd\000TAILJMPm\000TAILJMPr\000TAILJMPr64\000TCRETURNdi\000"
    "TCRETURNdi64\000TCRETURNri\000TCRETURNri64\000TEST16i16\000TEST16mi\000"
    "TEST16ri\000TEST16rm\000TEST16rr\000TEST32i32\000TEST32mi\000TEST32ri\000"
    "TEST32rm\000TEST32rr\000TEST64i32\000TEST64mi32\000TEST64ri32\000TEST64"
    "rm\000TEST64rr\000TEST8i8\000TEST8mi\000TEST8ri\000TEST8rm\000TEST8rr\000"
    "TLS_addr32\000TLS_addr64\000TRAP\000TST_F\000TST_Fp32\000TST_Fp64\000TS"
    "T_Fp80\000UCOMISDrm\000UCOMISDrr\000UCOMISSrm\000UCOMISSrr\000UCOM_FIPr"
    "\000UCOM_FIr\000UCOM_FPPr\000UCOM_FPr\000UCOM_FpIr32\000UCOM_FpIr64\000"
    "UCOM_FpIr80\000UCOM_Fpr32\000UCOM_Fpr64\000UCOM_Fpr80\000UCOM_Fr\000UNP"
    "CKHPDrm\000UNPCKHPDrr\000UNPCKHPSrm\000UNPCKHPSrr\000UNPCKLPDrm\000UNPC"
    "KLPDrr\000UNPCKLPSrm\000UNPCKLPSrr\000VASTART_SAVE_XMM_REGS\000VERRm\000"
    "VERRr\000VERWm\000VERWr\000VMCALL\000VMCLEARm\000VMLAUNCH\000VMPTRLDm\000"
    "VMPTRSTm\000VMREAD32rm\000VMREAD32rr\000VMREAD64rm\000VMREAD64rr\000VMR"
    "ESUME\000VMWRITE32rm\000VMWRITE32rr\000VMWRITE64rm\000VMWRITE64rr\000VM"
    "XOFF\000VMXON\000V_SET0\000V_SETALLONES\000WAIT\000WBINVD\000WINCALL64m"
    "\000WINCALL64pcrel32\000WINCALL64r\000WRMSR\000XADD16rm\000XADD16rr\000"
    "XADD32rm\000XADD32rr\000XADD64rm\000XADD64rr\000XADD8rm\000XADD8rr\000X"
    "CHG16ar\000XCHG16rm\000XCHG16rr\000XCHG32ar\000XCHG32rm\000XCHG32rr\000"
    "XCHG64ar\000XCHG64rm\000XCHG64rr\000XCHG8rm\000XCHG8rr\000XCH_F\000XLAT"
    "\000XOR16i16\000XOR16mi\000XOR16mi8\000XOR16mr\000XOR16ri\000XOR16ri8\000"
    "XOR16rm\000XOR16rr\000XOR16rr_REV\000XOR32i32\000XOR32mi\000XOR32mi8\000"
    "XOR32mr\000XOR32ri\000XOR32ri8\000XOR32rm\000XOR32rr\000XOR32rr_REV\000"
    "XOR64i32\000XOR64mi32\000XOR64mi8\000XOR64mr\000XOR64ri32\000XOR64ri8\000"
    "XOR64rm\000XOR64rr\000XOR64rr_REV\000XOR8i8\000XOR8mi\000XOR8mr\000XOR8"
    "ri\000XOR8rm\000XOR8rr\000XOR8rr_REV\000XORPDrm\000XORPDrr\000XORPSrm\000"
    "XORPSrr\000";
  return Strs+InstAsmOffset[Opcode];
}

#endif
