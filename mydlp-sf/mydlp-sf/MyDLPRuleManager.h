#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Xml.dll>
#using <System.Web.Services.dll>
#using <System.EnterpriseServices.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by wsdl, Version=2.0.50727.1432.
// 
using namespace System::Diagnostics;
using namespace System::Web::Services;
using namespace System::ComponentModel;
using namespace System::Web::Services::Protocols;
using namespace System;
using namespace System::Xml::Serialization;
using namespace System;
namespace mydlpsf {
	namespace soap {

ref class MyDLPRuleManager;
ref class MyDLPRule;
ref class MyDLPRemoteDeviceConf;
ref class MyDLPClamRegex;
ref class MyDLPMD5File;
ref class MyDLPRemoteSensFileConf;
ref class MyDLPRemoteScreenCaptureConf;
ref class getRulesCompletedEventArgs;


/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432")]
public delegate System::Void getRulesCompletedEventHandler(System::Object^  sender, getRulesCompletedEventArgs^  e);

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Web::Services::WebServiceBindingAttribute(Name=L"MyDLPRuleManagerBinding", Namespace=L"http://schema.mydlp.org"), 
System::Xml::Serialization::SoapIncludeAttribute(MyDLPClamRegex::typeid), 
System::Xml::Serialization::SoapIncludeAttribute(MyDLPMD5File::typeid)]
public ref class MyDLPRuleManager : public System::Web::Services::Protocols::SoapHttpClientProtocol {
    
    private: System::Threading::SendOrPostCallback^  getRulesOperationCompleted;
    
    /// <remarks/>
    public: event getRulesCompletedEventHandler^  getRulesCompleted;
    
    /// <remarks/>
    public: MyDLPRuleManager();
    /// <remarks/>
    public: [System::Web::Services::Protocols::SoapRpcMethodAttribute(L"http://10.0.0.105/mydlp-web-manager/service.php\?class=MyDLPRuleManager&method=getR" 
L"ules", 
        RequestNamespace=L"http://schema.mydlp.org", ResponseNamespace=L"http://schema.mydlp.org")]
    [returnvalue: System::Xml::Serialization::SoapElementAttribute(L"getRulesReturn")]
    MyDLPRule^  getRules();
    
    /// <remarks/>
    public: System::IAsyncResult^  BegingetRules(System::AsyncCallback^  callback, System::Object^  asyncState);
    
    /// <remarks/>
    public: MyDLPRule^  EndgetRules(System::IAsyncResult^  asyncResult);
    
    /// <remarks/>
    public: System::Void getRulesAsync();
    
    /// <remarks/>
    public: System::Void getRulesAsync(System::Object^  userState);
    
    private: System::Void OngetRulesOperationCompleted(System::Object^  arg);
    
    /// <remarks/>
    public: System::Void CancelAsync(System::Object^  userState) new;
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPRule {
    
    private: MyDLPRemoteDeviceConf^  remoteDeviceConfField;
    
    private: MyDLPRemoteScreenCaptureConf^  screenCaptureConfField;
    
    private: MyDLPRemoteSensFileConf^  sensFileConfField;
    
    /// <remarks/>
    public: property MyDLPRemoteDeviceConf^  remoteDeviceConf {
        MyDLPRemoteDeviceConf^  get();
        System::Void set(MyDLPRemoteDeviceConf^  value);
    }
    
    /// <remarks/>
    public: property MyDLPRemoteScreenCaptureConf^  screenCaptureConf {
        MyDLPRemoteScreenCaptureConf^  get();
        System::Void set(MyDLPRemoteScreenCaptureConf^  value);
    }
    
    /// <remarks/>
    public: property MyDLPRemoteSensFileConf^  sensFileConf {
        MyDLPRemoteSensFileConf^  get();
        System::Void set(MyDLPRemoteSensFileConf^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPRemoteDeviceConf {
    
    private: System::Boolean enableRemovableOnlineScanningField;
    
    private: System::String^  enableRemovableOnlineScanning_ruleidField;
    
    private: cli::array< System::String^  >^  excludedDirsField;
    
    private: System::Boolean filterCDRField;
    
    private: System::String^  filterCDR_ruleidField;
    
    private: System::Boolean filterDWGField;
    
    private: System::String^  filterDWG_ruleidField;
    
    private: System::Boolean filterPSDField;
    
    private: System::String^  filterPSD_ruleidField;
    
    private: System::Boolean filterPSPField;
    
    private: System::String^  filterPSP_ruleidField;
    
    private: System::Boolean justLogRemovableOnlineScanningField;
    
    private: System::String^  justLogRemovableOnlineScanning_ruleidField;
    
    private: System::Boolean scanInsertedLogicalField;
    
    private: System::String^  scanInsertedLogical_ruleidField;
    
    private: System::Boolean scanPluggedInRemovableDevicesField;
    
    private: System::String^  scanPluggedInRemovableDevices_ruleidField;
    
    /// <remarks/>
    public: property System::Boolean enableRemovableOnlineScanning {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableRemovableOnlineScanning_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property cli::array< System::String^  >^  excludedDirs {
        cli::array< System::String^  >^  get();
        System::Void set(cli::array< System::String^  >^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean filterCDR {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  filterCDR_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean filterDWG {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  filterDWG_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean filterPSD {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  filterPSD_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean filterPSP {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  filterPSP_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean justLogRemovableOnlineScanning {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  justLogRemovableOnlineScanning_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean scanInsertedLogical {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  scanInsertedLogical_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean scanPluggedInRemovableDevices {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  scanPluggedInRemovableDevices_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPClamRegex {
    
    private: System::Int32 idField;
    
    private: System::String^  nameField;
    
    private: System::String^  regexField;
    
    private: System::String^  rule_idField;
    
    /// <remarks/>
    public: property System::Int32 id {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::String^  name {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::String^  regex {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::String^  rule_id {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPMD5File {
    
    private: System::Int32 idField;
    
    private: System::String^  md5ValField;
    
    private: System::String^  nameField;
    
    private: System::String^  rule_idField;
    
    private: System::String^  sizeField;
    
    /// <remarks/>
    public: property System::Int32 id {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::String^  md5Val {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::String^  name {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::String^  rule_id {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::String^  size {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPRemoteSensFileConf {
    
    private: System::Boolean blockBrokenField;
    
    private: System::String^  blockBroken_ruleidField;
    
    private: System::Boolean blockEncryptedField;
    
    private: System::String^  blockEncrypted_ruleidField;
    
    private: System::Boolean enableCCField;
    
    private: System::String^  enableCC_ruleidField;
    
    private: System::Boolean enableIBANField;
    
    private: System::String^  enableIBAN_ruleidField;
    
    private: System::Boolean enableRegexField;
    
    private: System::Boolean enableSSNField;
    
    private: System::String^  enableSSN_ruleidField;
    
    private: System::Boolean enableTRIdField;
    
    private: System::String^  enableTRId_ruleidField;
    
    private: cli::array< System::String^  >^  fileGroupsField;
    
    private: System::String^  fileGroups_ruleidField;
    
    private: System::Int32 maxCCCountField;
    
    private: System::Int32 maxIBANCountField;
    
    private: System::Int32 maxRegexCountField;
    
    private: System::Int32 maxSSNCountField;
    
    private: System::Int32 maxTRIdCountField;
    
    private: cli::array< MyDLPMD5File^  >^  md5ValField;
    
    private: cli::array< MyDLPClamRegex^  >^  regexValField;
    
    /// <remarks/>
    public: property System::Boolean blockBroken {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  blockBroken_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean blockEncrypted {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  blockEncrypted_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean enableCC {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableCC_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean enableIBAN {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableIBAN_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean enableRegex {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::Boolean enableSSN {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableSSN_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean enableTRId {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableTRId_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property cli::array< System::String^  >^  fileGroups {
        cli::array< System::String^  >^  get();
        System::Void set(cli::array< System::String^  >^  value);
    }
    
    /// <remarks/>
    public: property System::String^  fileGroups_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Int32 maxCCCount {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::Int32 maxIBANCount {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::Int32 maxRegexCount {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::Int32 maxSSNCount {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property System::Int32 maxTRIdCount {
        System::Int32 get();
        System::Void set(System::Int32 value);
    }
    
    /// <remarks/>
    public: property cli::array< MyDLPMD5File^  >^  md5Val {
        cli::array< MyDLPMD5File^  >^  get();
        System::Void set(cli::array< MyDLPMD5File^  >^  value);
    }
    
    /// <remarks/>
    public: property cli::array< MyDLPClamRegex^  >^  regexVal {
        cli::array< MyDLPClamRegex^  >^  get();
        System::Void set(cli::array< MyDLPClamRegex^  >^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::SerializableAttribute, 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::Xml::Serialization::SoapTypeAttribute(Namespace=L"http://schema.mydlp.org")]
public ref class MyDLPRemoteScreenCaptureConf {
    
    private: System::Boolean enableScreenCaptureFilterField;
    
    private: System::String^  enableScreenCaptureFilter_ruleidField;
    
    private: System::Boolean forbidAcrobatReaderField;
    
    private: System::String^  forbidAcrobatReader_ruleidField;
    
    private: System::Boolean forbidAutoCADField;
    
    private: System::String^  forbidAutoCAD_ruleidField;
    
    private: System::Boolean forbidMSOfficeField;
    
    private: System::String^  forbidMSOffice_ruleidField;
    
    private: System::Boolean forbidOOOrgField;
    
    private: System::String^  forbidOOOrg_ruleidField;
    
    private: System::Boolean forbidPhotoshopField;
    
    private: System::String^  forbidPhotoshop_ruleidField;
    
    /// <remarks/>
    public: property System::Boolean enableScreenCaptureFilter {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  enableScreenCaptureFilter_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean forbidAcrobatReader {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  forbidAcrobatReader_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean forbidAutoCAD {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  forbidAutoCAD_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean forbidMSOffice {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  forbidMSOffice_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean forbidOOOrg {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  forbidOOOrg_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
    
    /// <remarks/>
    public: property System::Boolean forbidPhotoshop {
        System::Boolean get();
        System::Void set(System::Boolean value);
    }
    
    /// <remarks/>
    public: property System::String^  forbidPhotoshop_ruleid {
        System::String^  get();
        System::Void set(System::String^  value);
    }
};

/// <remarks/>
[System::CodeDom::Compiler::GeneratedCodeAttribute(L"wsdl", L"2.0.50727.1432"), 
System::Diagnostics::DebuggerStepThroughAttribute, 
System::ComponentModel::DesignerCategoryAttribute(L"code")]
public ref class getRulesCompletedEventArgs : public System::ComponentModel::AsyncCompletedEventArgs {
    
    private: cli::array< System::Object^  >^  results;
    
    internal: getRulesCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, System::Boolean cancelled, 
                System::Object^  userState);
    /// <remarks/>
    public: property MyDLPRule^  Result {
        MyDLPRule^  get();
    }
};


inline MyDLPRuleManager::MyDLPRuleManager() {
    this->Url = L"http://10.0.0.105/mydlp-web-manager/service.php\?class=MyDLPRuleManager";
}

inline MyDLPRule^  MyDLPRuleManager::getRules() {
    cli::array< System::Object^  >^  results = this->Invoke(L"getRules", gcnew cli::array< System::Object^  >(0));
    return (cli::safe_cast<MyDLPRule^  >(results[0]));
}

inline System::IAsyncResult^  MyDLPRuleManager::BegingetRules(System::AsyncCallback^  callback, System::Object^  asyncState) {
    return this->BeginInvoke(L"getRules", gcnew cli::array< System::Object^  >(0), callback, asyncState);
}

inline MyDLPRule^  MyDLPRuleManager::EndgetRules(System::IAsyncResult^  asyncResult) {
    cli::array< System::Object^  >^  results = this->EndInvoke(asyncResult);
    return (cli::safe_cast<MyDLPRule^  >(results[0]));
}

inline System::Void MyDLPRuleManager::getRulesAsync() {
    this->getRulesAsync(nullptr);
}

inline System::Void MyDLPRuleManager::getRulesAsync(System::Object^  userState) {
    if (this->getRulesOperationCompleted == nullptr) {
        this->getRulesOperationCompleted = gcnew System::Threading::SendOrPostCallback(this, &MyDLPRuleManager::OngetRulesOperationCompleted);
    }
    this->InvokeAsync(L"getRules", gcnew cli::array< System::Object^  >(0), this->getRulesOperationCompleted, userState);
}

inline System::Void MyDLPRuleManager::OngetRulesOperationCompleted(System::Object^  arg) {
    {
        System::Web::Services::Protocols::InvokeCompletedEventArgs^  invokeArgs = (cli::safe_cast<System::Web::Services::Protocols::InvokeCompletedEventArgs^  >(arg));
        this->getRulesCompleted(this, (gcnew getRulesCompletedEventArgs(invokeArgs->Results, invokeArgs->Error, invokeArgs->Cancelled, 
                invokeArgs->UserState)));
    }
}

inline System::Void MyDLPRuleManager::CancelAsync(System::Object^  userState) {
    __super::CancelAsync(userState);
}


inline MyDLPRemoteDeviceConf^  MyDLPRule::remoteDeviceConf::get() {
    return this->remoteDeviceConfField;
}
inline System::Void MyDLPRule::remoteDeviceConf::set(MyDLPRemoteDeviceConf^  value) {
    this->remoteDeviceConfField = value;
}

inline MyDLPRemoteScreenCaptureConf^  MyDLPRule::screenCaptureConf::get() {
    return this->screenCaptureConfField;
}
inline System::Void MyDLPRule::screenCaptureConf::set(MyDLPRemoteScreenCaptureConf^  value) {
    this->screenCaptureConfField = value;
}

inline MyDLPRemoteSensFileConf^  MyDLPRule::sensFileConf::get() {
    return this->sensFileConfField;
}
inline System::Void MyDLPRule::sensFileConf::set(MyDLPRemoteSensFileConf^  value) {
    this->sensFileConfField = value;
}


inline System::Boolean MyDLPRemoteDeviceConf::enableRemovableOnlineScanning::get() {
    return this->enableRemovableOnlineScanningField;
}
inline System::Void MyDLPRemoteDeviceConf::enableRemovableOnlineScanning::set(System::Boolean value) {
    this->enableRemovableOnlineScanningField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::enableRemovableOnlineScanning_ruleid::get() {
    return this->enableRemovableOnlineScanning_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::enableRemovableOnlineScanning_ruleid::set(System::String^  value) {
    this->enableRemovableOnlineScanning_ruleidField = value;
}

inline cli::array< System::String^  >^  MyDLPRemoteDeviceConf::excludedDirs::get() {
    return this->excludedDirsField;
}
inline System::Void MyDLPRemoteDeviceConf::excludedDirs::set(cli::array< System::String^  >^  value) {
    this->excludedDirsField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::filterCDR::get() {
    return this->filterCDRField;
}
inline System::Void MyDLPRemoteDeviceConf::filterCDR::set(System::Boolean value) {
    this->filterCDRField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::filterCDR_ruleid::get() {
    return this->filterCDR_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::filterCDR_ruleid::set(System::String^  value) {
    this->filterCDR_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::filterDWG::get() {
    return this->filterDWGField;
}
inline System::Void MyDLPRemoteDeviceConf::filterDWG::set(System::Boolean value) {
    this->filterDWGField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::filterDWG_ruleid::get() {
    return this->filterDWG_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::filterDWG_ruleid::set(System::String^  value) {
    this->filterDWG_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::filterPSD::get() {
    return this->filterPSDField;
}
inline System::Void MyDLPRemoteDeviceConf::filterPSD::set(System::Boolean value) {
    this->filterPSDField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::filterPSD_ruleid::get() {
    return this->filterPSD_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::filterPSD_ruleid::set(System::String^  value) {
    this->filterPSD_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::filterPSP::get() {
    return this->filterPSPField;
}
inline System::Void MyDLPRemoteDeviceConf::filterPSP::set(System::Boolean value) {
    this->filterPSPField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::filterPSP_ruleid::get() {
    return this->filterPSP_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::filterPSP_ruleid::set(System::String^  value) {
    this->filterPSP_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::justLogRemovableOnlineScanning::get() {
    return this->justLogRemovableOnlineScanningField;
}
inline System::Void MyDLPRemoteDeviceConf::justLogRemovableOnlineScanning::set(System::Boolean value) {
    this->justLogRemovableOnlineScanningField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::justLogRemovableOnlineScanning_ruleid::get() {
    return this->justLogRemovableOnlineScanning_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::justLogRemovableOnlineScanning_ruleid::set(System::String^  value) {
    this->justLogRemovableOnlineScanning_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::scanInsertedLogical::get() {
    return this->scanInsertedLogicalField;
}
inline System::Void MyDLPRemoteDeviceConf::scanInsertedLogical::set(System::Boolean value) {
    this->scanInsertedLogicalField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::scanInsertedLogical_ruleid::get() {
    return this->scanInsertedLogical_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::scanInsertedLogical_ruleid::set(System::String^  value) {
    this->scanInsertedLogical_ruleidField = value;
}

inline System::Boolean MyDLPRemoteDeviceConf::scanPluggedInRemovableDevices::get() {
    return this->scanPluggedInRemovableDevicesField;
}
inline System::Void MyDLPRemoteDeviceConf::scanPluggedInRemovableDevices::set(System::Boolean value) {
    this->scanPluggedInRemovableDevicesField = value;
}

inline System::String^  MyDLPRemoteDeviceConf::scanPluggedInRemovableDevices_ruleid::get() {
    return this->scanPluggedInRemovableDevices_ruleidField;
}
inline System::Void MyDLPRemoteDeviceConf::scanPluggedInRemovableDevices_ruleid::set(System::String^  value) {
    this->scanPluggedInRemovableDevices_ruleidField = value;
}


inline System::Int32 MyDLPClamRegex::id::get() {
    return this->idField;
}
inline System::Void MyDLPClamRegex::id::set(System::Int32 value) {
    this->idField = value;
}

inline System::String^  MyDLPClamRegex::name::get() {
    return this->nameField;
}
inline System::Void MyDLPClamRegex::name::set(System::String^  value) {
    this->nameField = value;
}

inline System::String^  MyDLPClamRegex::regex::get() {
    return this->regexField;
}
inline System::Void MyDLPClamRegex::regex::set(System::String^  value) {
    this->regexField = value;
}

inline System::String^  MyDLPClamRegex::rule_id::get() {
    return this->rule_idField;
}
inline System::Void MyDLPClamRegex::rule_id::set(System::String^  value) {
    this->rule_idField = value;
}


inline System::Int32 MyDLPMD5File::id::get() {
    return this->idField;
}
inline System::Void MyDLPMD5File::id::set(System::Int32 value) {
    this->idField = value;
}

inline System::String^  MyDLPMD5File::md5Val::get() {
    return this->md5ValField;
}
inline System::Void MyDLPMD5File::md5Val::set(System::String^  value) {
    this->md5ValField = value;
}

inline System::String^  MyDLPMD5File::name::get() {
    return this->nameField;
}
inline System::Void MyDLPMD5File::name::set(System::String^  value) {
    this->nameField = value;
}

inline System::String^  MyDLPMD5File::rule_id::get() {
    return this->rule_idField;
}
inline System::Void MyDLPMD5File::rule_id::set(System::String^  value) {
    this->rule_idField = value;
}

inline System::String^  MyDLPMD5File::size::get() {
    return this->sizeField;
}
inline System::Void MyDLPMD5File::size::set(System::String^  value) {
    this->sizeField = value;
}


inline System::Boolean MyDLPRemoteSensFileConf::blockBroken::get() {
    return this->blockBrokenField;
}
inline System::Void MyDLPRemoteSensFileConf::blockBroken::set(System::Boolean value) {
    this->blockBrokenField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::blockBroken_ruleid::get() {
    return this->blockBroken_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::blockBroken_ruleid::set(System::String^  value) {
    this->blockBroken_ruleidField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::blockEncrypted::get() {
    return this->blockEncryptedField;
}
inline System::Void MyDLPRemoteSensFileConf::blockEncrypted::set(System::Boolean value) {
    this->blockEncryptedField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::blockEncrypted_ruleid::get() {
    return this->blockEncrypted_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::blockEncrypted_ruleid::set(System::String^  value) {
    this->blockEncrypted_ruleidField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::enableCC::get() {
    return this->enableCCField;
}
inline System::Void MyDLPRemoteSensFileConf::enableCC::set(System::Boolean value) {
    this->enableCCField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::enableCC_ruleid::get() {
    return this->enableCC_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::enableCC_ruleid::set(System::String^  value) {
    this->enableCC_ruleidField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::enableIBAN::get() {
    return this->enableIBANField;
}
inline System::Void MyDLPRemoteSensFileConf::enableIBAN::set(System::Boolean value) {
    this->enableIBANField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::enableIBAN_ruleid::get() {
    return this->enableIBAN_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::enableIBAN_ruleid::set(System::String^  value) {
    this->enableIBAN_ruleidField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::enableRegex::get() {
    return this->enableRegexField;
}
inline System::Void MyDLPRemoteSensFileConf::enableRegex::set(System::Boolean value) {
    this->enableRegexField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::enableSSN::get() {
    return this->enableSSNField;
}
inline System::Void MyDLPRemoteSensFileConf::enableSSN::set(System::Boolean value) {
    this->enableSSNField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::enableSSN_ruleid::get() {
    return this->enableSSN_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::enableSSN_ruleid::set(System::String^  value) {
    this->enableSSN_ruleidField = value;
}

inline System::Boolean MyDLPRemoteSensFileConf::enableTRId::get() {
    return this->enableTRIdField;
}
inline System::Void MyDLPRemoteSensFileConf::enableTRId::set(System::Boolean value) {
    this->enableTRIdField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::enableTRId_ruleid::get() {
    return this->enableTRId_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::enableTRId_ruleid::set(System::String^  value) {
    this->enableTRId_ruleidField = value;
}

inline cli::array< System::String^  >^  MyDLPRemoteSensFileConf::fileGroups::get() {
    return this->fileGroupsField;
}
inline System::Void MyDLPRemoteSensFileConf::fileGroups::set(cli::array< System::String^  >^  value) {
    this->fileGroupsField = value;
}

inline System::String^  MyDLPRemoteSensFileConf::fileGroups_ruleid::get() {
    return this->fileGroups_ruleidField;
}
inline System::Void MyDLPRemoteSensFileConf::fileGroups_ruleid::set(System::String^  value) {
    this->fileGroups_ruleidField = value;
}

inline System::Int32 MyDLPRemoteSensFileConf::maxCCCount::get() {
    return this->maxCCCountField;
}
inline System::Void MyDLPRemoteSensFileConf::maxCCCount::set(System::Int32 value) {
    this->maxCCCountField = value;
}

inline System::Int32 MyDLPRemoteSensFileConf::maxIBANCount::get() {
    return this->maxIBANCountField;
}
inline System::Void MyDLPRemoteSensFileConf::maxIBANCount::set(System::Int32 value) {
    this->maxIBANCountField = value;
}

inline System::Int32 MyDLPRemoteSensFileConf::maxRegexCount::get() {
    return this->maxRegexCountField;
}
inline System::Void MyDLPRemoteSensFileConf::maxRegexCount::set(System::Int32 value) {
    this->maxRegexCountField = value;
}

inline System::Int32 MyDLPRemoteSensFileConf::maxSSNCount::get() {
    return this->maxSSNCountField;
}
inline System::Void MyDLPRemoteSensFileConf::maxSSNCount::set(System::Int32 value) {
    this->maxSSNCountField = value;
}

inline System::Int32 MyDLPRemoteSensFileConf::maxTRIdCount::get() {
    return this->maxTRIdCountField;
}
inline System::Void MyDLPRemoteSensFileConf::maxTRIdCount::set(System::Int32 value) {
    this->maxTRIdCountField = value;
}

inline cli::array< MyDLPMD5File^  >^  MyDLPRemoteSensFileConf::md5Val::get() {
    return this->md5ValField;
}
inline System::Void MyDLPRemoteSensFileConf::md5Val::set(cli::array< MyDLPMD5File^  >^  value) {
    this->md5ValField = value;
}

inline cli::array< MyDLPClamRegex^  >^  MyDLPRemoteSensFileConf::regexVal::get() {
    return this->regexValField;
}
inline System::Void MyDLPRemoteSensFileConf::regexVal::set(cli::array< MyDLPClamRegex^  >^  value) {
    this->regexValField = value;
}


inline System::Boolean MyDLPRemoteScreenCaptureConf::enableScreenCaptureFilter::get() {
    return this->enableScreenCaptureFilterField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::enableScreenCaptureFilter::set(System::Boolean value) {
    this->enableScreenCaptureFilterField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::enableScreenCaptureFilter_ruleid::get() {
    return this->enableScreenCaptureFilter_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::enableScreenCaptureFilter_ruleid::set(System::String^  value) {
    this->enableScreenCaptureFilter_ruleidField = value;
}

inline System::Boolean MyDLPRemoteScreenCaptureConf::forbidAcrobatReader::get() {
    return this->forbidAcrobatReaderField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidAcrobatReader::set(System::Boolean value) {
    this->forbidAcrobatReaderField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::forbidAcrobatReader_ruleid::get() {
    return this->forbidAcrobatReader_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidAcrobatReader_ruleid::set(System::String^  value) {
    this->forbidAcrobatReader_ruleidField = value;
}

inline System::Boolean MyDLPRemoteScreenCaptureConf::forbidAutoCAD::get() {
    return this->forbidAutoCADField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidAutoCAD::set(System::Boolean value) {
    this->forbidAutoCADField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::forbidAutoCAD_ruleid::get() {
    return this->forbidAutoCAD_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidAutoCAD_ruleid::set(System::String^  value) {
    this->forbidAutoCAD_ruleidField = value;
}

inline System::Boolean MyDLPRemoteScreenCaptureConf::forbidMSOffice::get() {
    return this->forbidMSOfficeField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidMSOffice::set(System::Boolean value) {
    this->forbidMSOfficeField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::forbidMSOffice_ruleid::get() {
    return this->forbidMSOffice_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidMSOffice_ruleid::set(System::String^  value) {
    this->forbidMSOffice_ruleidField = value;
}

inline System::Boolean MyDLPRemoteScreenCaptureConf::forbidOOOrg::get() {
    return this->forbidOOOrgField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidOOOrg::set(System::Boolean value) {
    this->forbidOOOrgField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::forbidOOOrg_ruleid::get() {
    return this->forbidOOOrg_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidOOOrg_ruleid::set(System::String^  value) {
    this->forbidOOOrg_ruleidField = value;
}

inline System::Boolean MyDLPRemoteScreenCaptureConf::forbidPhotoshop::get() {
    return this->forbidPhotoshopField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidPhotoshop::set(System::Boolean value) {
    this->forbidPhotoshopField = value;
}

inline System::String^  MyDLPRemoteScreenCaptureConf::forbidPhotoshop_ruleid::get() {
    return this->forbidPhotoshop_ruleidField;
}
inline System::Void MyDLPRemoteScreenCaptureConf::forbidPhotoshop_ruleid::set(System::String^  value) {
    this->forbidPhotoshop_ruleidField = value;
}


inline getRulesCompletedEventArgs::getRulesCompletedEventArgs(cli::array< System::Object^  >^  results, System::Exception^  exception, 
            System::Boolean cancelled, System::Object^  userState) : 
        System::ComponentModel::AsyncCompletedEventArgs(exception, cancelled, userState) {
    this->results = results;
}

inline MyDLPRule^  getRulesCompletedEventArgs::Result::get() {
    this->RaiseExceptionIfNecessary();
    return (cli::safe_cast<MyDLPRule^  >(this->results[0]));
}
}
}